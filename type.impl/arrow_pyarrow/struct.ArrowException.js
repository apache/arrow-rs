(function() {
    var type_impls = Object.fromEntries([["arrow_pyarrow",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrowException\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#impl-ArrowException\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"arrow_pyarrow/struct.ArrowException.html\" title=\"struct arrow_pyarrow::ArrowException\">ArrowException</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_err\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_pyarrow/struct.ArrowException.html#tymethod.new_err\" class=\"fn\">new_err</a>&lt;A&gt;(args: A) -&gt; PyErr<div class=\"where\">where\n    A: PyErrArguments + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"https://docs.rs/pyo3/latest/pyo3/struct.PyErr.html\" title=\"PyErr in pyo3\"><code>PyErr</code></a> of this type.</p>\n</div></details></div></details>",0,"arrow_pyarrow::PyArrowException"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArrowException\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#impl-ArrowException\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"arrow_pyarrow/struct.ArrowException.html\" title=\"struct arrow_pyarrow::ArrowException\">ArrowException</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.type_object_raw\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><h4 class=\"code-header\">pub(crate) fn <a href=\"arrow_pyarrow/struct.ArrowException.html#tymethod.type_object_raw\" class=\"fn\">type_object_raw</a>(py: Python&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>PyTypeObject</h4></section></div></details>",0,"arrow_pyarrow::PyArrowException"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PyTypeInfo-for-ArrowException\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#impl-PyTypeInfo-for-ArrowException\" class=\"anchor\">§</a><h3 class=\"code-header\">impl PyTypeInfo for <a class=\"struct\" href=\"arrow_pyarrow/struct.ArrowException.html\" title=\"struct arrow_pyarrow::ArrowException\">ArrowException</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#associatedconstant.NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a> = &quot;ArrowException&quot;</h4></section></summary><div class='docblock'>Class name.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.MODULE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#associatedconstant.MODULE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a class=\"constant\">MODULE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Module name, if any.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_object_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#method.type_object_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_object_raw</a>(py: Python&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>PyTypeObject</h4></section></summary><div class='docblock'>Returns the PyTypeObject instance for this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_object\" class=\"method trait-impl\"><a href=\"#method.type_object\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">type_object</a>(py: Python&lt;'_&gt;) -&gt; Bound&lt;'_, PyType&gt;</h4></section></summary><div class='docblock'>Returns the safe abstraction over the type object.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_type_of\" class=\"method trait-impl\"><a href=\"#method.is_type_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_type_of</a>(object: &amp;Bound&lt;'_, PyAny&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>object</code> is an instance of this type or a subclass of this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_exact_type_of\" class=\"method trait-impl\"><a href=\"#method.is_exact_type_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_exact_type_of</a>(object: &amp;Bound&lt;'_, PyAny&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks if <code>object</code> is an instance of this type.</div></details></div></details>","PyTypeInfo","arrow_pyarrow::PyArrowException"],["<section id=\"impl-DerefToPyAny-for-ArrowException\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#impl-DerefToPyAny-for-ArrowException\" class=\"anchor\">§</a><h3 class=\"code-header\">impl DerefToPyAny for <a class=\"struct\" href=\"arrow_pyarrow/struct.ArrowException.html\" title=\"struct arrow_pyarrow::ArrowException\">ArrowException</a></h3></section>","DerefToPyAny","arrow_pyarrow::PyArrowException"],["<section id=\"impl-ToPyErr-for-ArrowException\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_pyarrow/lib.rs.html#79\">Source</a><a href=\"#impl-ToPyErr-for-ArrowException\" class=\"anchor\">§</a><h3 class=\"code-header\">impl ToPyErr for <a class=\"struct\" href=\"arrow_pyarrow/struct.ArrowException.html\" title=\"struct arrow_pyarrow::ArrowException\">ArrowException</a></h3></section>","ToPyErr","arrow_pyarrow::PyArrowException"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[7092]}