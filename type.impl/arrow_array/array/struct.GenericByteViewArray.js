(function() {
    var type_impls = Object.fromEntries([["arrow_array",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Array-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#785-848\">Source</a><a href=\"#impl-Array-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"arrow_array/array/trait.Array.html\" title=\"trait arrow_array::array::Array\">Array</a> for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_any\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#786-788\">Source</a><a href=\"#method.as_any\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.as_any\" class=\"fn\">as_any</a>(&amp;self) -&gt; &amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a></h4></section></summary><div class='docblock'>Returns the array as <a href=\"https://doc.rust-lang.org/nightly/core/any/trait.Any.html\" title=\"trait core::any::Any\"><code>Any</code></a> so that it can be\ndowncasted to a specific implementation. <a href=\"arrow_array/array/trait.Array.html#tymethod.as_any\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#790-792\">Source</a><a href=\"#method.to_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.to_data\" class=\"fn\">to_data</a>(&amp;self) -&gt; ArrayData</h4></section></summary><div class='docblock'>Returns the underlying data of this array</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_data\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#794-796\">Source</a><a href=\"#method.into_data\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.into_data\" class=\"fn\">into_data</a>(self) -&gt; ArrayData</h4></section></summary><div class='docblock'>Returns the underlying data of this array <a href=\"arrow_array/array/trait.Array.html#tymethod.into_data\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_type\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#798-800\">Source</a><a href=\"#method.data_type\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.data_type\" class=\"fn\">data_type</a>(&amp;self) -&gt; &amp;DataType</h4></section></summary><div class='docblock'>Returns a reference to the [<code>DataType</code>] of this array. <a href=\"arrow_array/array/trait.Array.html#tymethod.data_type\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#802-804\">Source</a><a href=\"#method.slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"type\" href=\"arrow_array/array/type.ArrayRef.html\" title=\"type arrow_array::array::ArrayRef\">ArrayRef</a></h4></section></summary><div class='docblock'>Returns a zero-copy slice of this array with the indicated offset and length. <a href=\"arrow_array/array/trait.Array.html#tymethod.slice\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.len\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#806-808\">Source</a><a href=\"#method.len\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.len\" class=\"fn\">len</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the length (i.e., number of elements) of this array. <a href=\"arrow_array/array/trait.Array.html#tymethod.len\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#810-812\">Source</a><a href=\"#method.is_empty\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether this array is empty. <a href=\"arrow_array/array/trait.Array.html#tymethod.is_empty\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shrink_to_fit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#814-821\">Source</a><a href=\"#method.shrink_to_fit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.shrink_to_fit\" class=\"fn\">shrink_to_fit</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Shrinks the capacity of any exclusively owned buffer as much as possible <a href=\"arrow_array/array/trait.Array.html#method.shrink_to_fit\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#823-825\">Source</a><a href=\"#method.offset\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the offset into the underlying data used by this array(-slice).\nNote that the underlying data can be shared by many arrays.\nThis defaults to <code>0</code>. <a href=\"arrow_array/array/trait.Array.html#tymethod.offset\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.nulls\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#827-829\">Source</a><a href=\"#method.nulls\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.nulls\" class=\"fn\">nulls</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;NullBuffer&gt;</h4></section></summary><div class='docblock'>Returns the null buffer of this array if any. <a href=\"arrow_array/array/trait.Array.html#tymethod.nulls\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.logical_null_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#831-834\">Source</a><a href=\"#method.logical_null_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.logical_null_count\" class=\"fn\">logical_null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the total number of logical null values in this array. <a href=\"arrow_array/array/trait.Array.html#method.logical_null_count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_buffer_memory_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#836-843\">Source</a><a href=\"#method.get_buffer_memory_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.get_buffer_memory_size\" class=\"fn\">get_buffer_memory_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the total number of bytes of memory pointed to by this array.\nThe buffers store bytes in the Arrow memory format, and include the data as well as the validity map.\nNote that this does not always correspond to the exact memory usage of an array,\nsince multiple arrays can share the same buffers or slices thereof.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_array_memory_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#845-847\">Source</a><a href=\"#method.get_array_memory_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#tymethod.get_array_memory_size\" class=\"fn\">get_array_memory_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the total number of bytes of memory occupied physically by this array.\nThis value will always be greater than returned by <code>get_buffer_memory_size()</code> and\nincludes the overhead of the data structures that contain the pointers to the various buffers.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.logical_nulls\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#225-227\">Source</a><a href=\"#method.logical_nulls\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.logical_nulls\" class=\"fn\">logical_nulls</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;NullBuffer&gt;</h4></section></summary><div class='docblock'>Returns a potentially computed [<code>NullBuffer</code>] that represents the logical\nnull values of this array, if any. <a href=\"arrow_array/array/trait.Array.html#method.logical_nulls\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_null\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#250-252\">Source</a><a href=\"#method.is_null\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.is_null\" class=\"fn\">is_null</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether the element at <code>index</code> is null according to <a href=\"arrow_array/array/trait.Array.html#tymethod.nulls\" title=\"method arrow_array::array::Array::nulls\"><code>Array::nulls</code></a> <a href=\"arrow_array/array/trait.Array.html#method.is_null\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#267-269\">Source</a><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.is_valid\" class=\"fn\">is_valid</a>(&amp;self, index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns whether the element at <code>index</code> is <em>not</em> null, the\nopposite of <a href=\"arrow_array/array/trait.Array.html#method.is_null\"><code>Self::is_null</code></a>. <a href=\"arrow_array/array/trait.Array.html#method.is_valid\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.null_count\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#286-288\">Source</a><a href=\"#method.null_count\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.null_count\" class=\"fn\">null_count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Returns the total number of physical null values in this array. <a href=\"arrow_array/array/trait.Array.html#method.null_count\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_nullable\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#325-327\">Source</a><a href=\"#method.is_nullable\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arrow_array/array/trait.Array.html#method.is_nullable\" class=\"fn\">is_nullable</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>false</code> if the array is guaranteed to not contain any logical nulls <a href=\"arrow_array/array/trait.Array.html#method.is_nullable\">Read more</a></div></details></div></details>","Array","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#173-183\">Source</a><a href=\"#impl-Clone-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#174-182\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#775-783\">Source</a><a href=\"#impl-Debug-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#776-782\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26GenericByteArray%3CFROM%3E%3E-for-GenericByteViewArray%3CV%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#896-940\">Source</a><a href=\"#impl-From%3C%26GenericByteArray%3CFROM%3E%3E-for-GenericByteViewArray%3CV%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;FROM, V&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"arrow_array/array/struct.GenericByteArray.html\" title=\"struct arrow_array::array::GenericByteArray\">GenericByteArray</a>&lt;FROM&gt;&gt; for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;V&gt;<div class=\"where\">where\n    FROM: <a class=\"trait\" href=\"arrow_array/types/trait.ByteArrayType.html\" title=\"trait arrow_array::types::ByteArrayType\">ByteArrayType</a>,\n    FROM::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteArrayType.html#associatedtype.Offset\" title=\"type arrow_array::types::ByteArrayType::Offset\">Offset</a>: <a class=\"trait\" href=\"arrow_array/array/trait.OffsetSizeTrait.html\" title=\"trait arrow_array::array::OffsetSizeTrait\">OffsetSizeTrait</a> + <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.ToPrimitive.html\" title=\"trait num_traits::cast::ToPrimitive\">ToPrimitive</a>,\n    V: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a>&lt;Native = FROM::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteArrayType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteArrayType::Native\">Native</a>&gt;,</div></h3><div class=\"docblock\"><p>Efficiently convert a <a href=\"arrow_array/array/struct.GenericByteArray.html\" title=\"struct arrow_array::array::GenericByteArray\"><code>GenericByteArray</code></a> to a <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a></p>\n</div></section></summary><div class=\"docblock\"><p>For example this method can convert a <a href=\"arrow_array/array/type.StringArray.html\" title=\"type arrow_array::array::StringArray\"><code>StringArray</code></a> to a\n<a href=\"arrow_array/array/type.StringViewArray.html\" title=\"type arrow_array::array::StringViewArray\"><code>StringViewArray</code></a>.</p>\n<p>If the offsets are all less than u32::MAX, the new <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a>\nis built without copying the underlying string data (views are created\ndirectly into the existing buffer)</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#902-939\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(byte_array: &amp;<a class=\"struct\" href=\"arrow_array/array/struct.GenericByteArray.html\" title=\"struct arrow_array::array::GenericByteArray\">GenericByteArray</a>&lt;FROM&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&GenericByteArray<FROM>>","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CArrayData%3E-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#871-884\">Source</a><a href=\"#impl-From%3CArrayData%3E-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ArrayData&gt; for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#872-883\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: ArrayData) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ArrayData>","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3C%26Option%3CPtr%3E%3E-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#955-965\">Source</a><a href=\"#impl-FromIterator%3C%26Option%3CPtr%3E%3E-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, Ptr, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;&amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Ptr&gt;&gt; for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a>&gt; + 'a,\n    T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#960-964\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Ptr&gt;&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<&'a Option<Ptr>>","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromIterator%3COption%3CPtr%3E%3E-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#967-977\">Source</a><a href=\"#impl-FromIterator%3COption%3CPtr%3E%3E-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Ptr, T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html\" title=\"trait core::iter::traits::collect::FromIterator\">FromIterator</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Ptr&gt;&gt; for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#971-976\">Source</a><a href=\"#method.from_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\" class=\"fn\">from_iter</a>&lt;I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Ptr&gt;&gt;&gt;(iter: I) -&gt; Self</h4></section></summary><div class='docblock'>Creates a value from an iterator. <a href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.FromIterator.html#tymethod.from_iter\">Read more</a></div></details></div></details>","FromIterator<Option<Ptr>>","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#185-773\">Source</a><a href=\"#impl-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#191-193\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.new\" class=\"fn\">new</a>(\n    views: ScalarBuffer&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Buffer&gt;,\n    nulls: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;NullBuffer&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> from the provided parts, panicking on failure</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <a href=\"arrow_array/array/struct.GenericByteViewArray.html#method.try_new\" title=\"associated function arrow_array::array::GenericByteViewArray::try_new\"><code>GenericByteViewArray::try_new</code></a> returns an error</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_new\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#201-226\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.try_new\" class=\"fn\">try_new</a>(\n    views: ScalarBuffer&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Buffer&gt;,\n    nulls: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;NullBuffer&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, ArrowError&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> from the provided parts, returning an error on failure</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<ul>\n<li><code>views.len() != nulls.len()</code></li>\n<li><a href=\"arrow_array/types/trait.ByteViewType.html#tymethod.validate\" title=\"associated function arrow_array::types::ByteViewType::validate\">ByteViewType::validate</a> fails</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#233-249\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(\n    views: ScalarBuffer&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;,\n    buffers: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Buffer&gt;,\n    nulls: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;NullBuffer&gt;,\n) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> from the provided parts, without validation</p>\n<h5 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h5>\n<p>Safe if <a href=\"arrow_array/array/struct.GenericByteViewArray.html#method.try_new\" title=\"associated function arrow_array::array::GenericByteViewArray::try_new\"><code>Self::try_new</code></a> would not error</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_null\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#252-260\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.new_null\" class=\"fn\">new_null</a>(len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> of length <code>len</code> where all values are null</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_scalar\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#263-265\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.new_scalar\" class=\"fn\">new_scalar</a>(value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a>&gt;) -&gt; <a class=\"struct\" href=\"arrow_array/struct.Scalar.html\" title=\"struct arrow_array::Scalar\">Scalar</a>&lt;Self&gt;</h4></section></summary><div class=\"docblock\"><p>Create a new <a href=\"arrow_array/struct.Scalar.html\" title=\"struct arrow_array::Scalar\"><code>Scalar</code></a> from <code>value</code></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_iter_values\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#268-279\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.from_iter_values\" class=\"fn\">from_iter_values</a>&lt;Ptr, I&gt;(iter: I) -&gt; Self<div class=\"where\">where\n    Ptr: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a>&gt;,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = Ptr&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> based on an iterator of values without nulls</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_parts\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#282-284\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.into_parts\" class=\"fn\">into_parts</a>(self) -&gt; (ScalarBuffer&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Buffer&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;NullBuffer&gt;)</h4></section></summary><div class=\"docblock\"><p>Deconstruct this array into its constituent parts</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.views\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#288-290\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.views\" class=\"fn\">views</a>(&amp;self) -&gt; &amp;ScalarBuffer&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the views buffer</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.data_buffers\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#294-296\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.data_buffers\" class=\"fn\">data_buffers</a>(&amp;self) -&gt; &amp;[Buffer]</h4></section></summary><div class=\"docblock\"><p>Returns the buffers storing string data</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#305-315\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.value\" class=\"fn\">value</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a></h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code></p>\n<p>Note: This method does not check for nulls and the value is arbitrary\n(but still well-defined) if <a href=\"arrow_array/array/struct.GenericByteViewArray.html#method.is_null\" title=\"method arrow_array::array::GenericByteViewArray::is_null\"><code>is_null</code></a> returns true for the index.</p>\n<h5 id=\"panics-1\"><a class=\"doc-anchor\" href=\"#panics-1\">§</a>Panics</h5>\n<p>Panics if index <code>i</code> is out of bounds.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.value_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#326-338\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.value_unchecked\" class=\"fn\">value_unchecked</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;T::<a class=\"associatedtype\" href=\"arrow_array/types/trait.ByteViewType.html#associatedtype.Native\" title=\"type arrow_array::types::ByteViewType::Native\">Native</a></h4></section></summary><div class=\"docblock\"><p>Returns the element at index <code>i</code> without bounds checking</p>\n<p>Note: This method does not check for nulls and the value is arbitrary\nif <a href=\"arrow_array/array/struct.GenericByteViewArray.html#method.is_null\" title=\"method arrow_array::array::GenericByteViewArray::is_null\"><code>is_null</code></a> returns true for the index.</p>\n<h5 id=\"safety-1\"><a class=\"doc-anchor\" href=\"#safety-1\">§</a>Safety</h5>\n<p>Caller is responsible for ensuring that the index is within the bounds\nof the array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inline_value\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#346-351\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.inline_value\" class=\"fn\">inline_value</a>(view: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns the first <code>len</code> bytes the inline value of the view.</p>\n<h5 id=\"safety-2\"><a class=\"doc-anchor\" href=\"#safety-2\">§</a>Safety</h5>\n<ul>\n<li>The <code>view</code> must be a valid element from <code>Self::views()</code> that adheres to the view layout.</li>\n<li>The <code>len</code> must be the length of the inlined value. It should never be larger than [<code>MAX_INLINE_VIEW_LEN</code>].</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#354-356\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.iter\" class=\"fn\">iter</a>(&amp;self) -&gt; <a class=\"struct\" href=\"arrow_array/iterator/struct.ArrayIter.html\" title=\"struct arrow_array::iterator::ArrayIter\">ArrayIter</a>&lt;&amp;Self&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"ArrayIter&lt;&amp;Self&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Constructs a new iterator for iterating over the values of this array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytes_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#359-371\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.bytes_iter\" class=\"fn\">bytes_iter</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the bytes of this array, including null values</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prefix_bytes_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#378-398\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.prefix_bytes_iter\" class=\"fn\">prefix_bytes_iter</a>(\n    &amp;self,\n    prefix_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the first <code>prefix_len</code> bytes of each array\nelement, including null values.</p>\n<p>If <code>prefix_len</code> is larger than the element’s length, the iterator will\nreturn an empty slice (<code>&amp;[]</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.suffix_bytes_iter\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#408-428\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.suffix_bytes_iter\" class=\"fn\">suffix_bytes_iter</a>(\n    &amp;self,\n    suffix_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;</h4></section></summary><div class=\"docblock\"><p>Returns an iterator over the last <code>suffix_len</code> bytes of each array\nelement, including null values.</p>\n<p>Note that for <a href=\"arrow_array/array/type.StringViewArray.html\" title=\"type arrow_array::array::StringViewArray\"><code>StringViewArray</code></a> the last bytes may start in the middle\nof a UTF-8 codepoint, and thus may not be a valid <code>&amp;str</code>.</p>\n<p>If <code>suffix_len</code> is larger than the element’s length, the iterator will\nreturn an empty slice (<code>&amp;[]</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.slice\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#431-439\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.slice\" class=\"fn\">slice</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a zero-copy slice of this array with the indicated offset and length.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gc\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#484-530\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.gc\" class=\"fn\">gc</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Returns a “compacted” version of this array</p>\n<p>The original array will <em>not</em> be modified</p>\n<h5 id=\"garbage-collection\"><a class=\"doc-anchor\" href=\"#garbage-collection\">§</a>Garbage Collection</h5>\n<p>Before GC:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>                                       ┌──────┐\n                                       │......│\n                                       │......│\n┌────────────────────┐       ┌ ─ ─ ─ ▶ │Data1 │   Large buffer\n│       View 1       │─ ─ ─ ─          │......│  with data that\n├────────────────────┤                 │......│ is not referred\n│       View 2       │─ ─ ─ ─ ─ ─ ─ ─▶ │Data2 │ to by View 1 or\n└────────────────────┘                 │......│      View 2\n                                       │......│\n   2 views, refer to                   │......│\n  small portions of a                  └──────┘\n     large buffer</code></pre></div>\n<p>After GC:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>┌────────────────────┐                 ┌─────┐    After gc, only\n│       View 1       │─ ─ ─ ─ ─ ─ ─ ─▶ │Data1│     data that is\n├────────────────────┤       ┌ ─ ─ ─ ▶ │Data2│    pointed to by\n│       View 2       │─ ─ ─ ─          └─────┘     the views is\n└────────────────────┘                                 left\n\n\n        2 views</code></pre></div>\n<p>This method will compact the data buffers by recreating the view array and only include the data\nthat is pointed to by the views.</p>\n<p>Note that it will copy the array regardless of whether the original array is compact.\nUse with caution as this can be an expensive operation, only use it when you are sure that the view\narray is significantly smaller than when it is originally created, e.g., after filtering or slicing.</p>\n<p>Note: this function does not attempt to canonicalize / deduplicate values. For this\nfeature see  <a href=\"arrow_array/builder/struct.GenericByteViewBuilder.html#method.with_deduplicate_strings\" title=\"method arrow_array::builder::GenericByteViewBuilder::with_deduplicate_strings\"><code>GenericByteViewBuilder::with_deduplicate_strings</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_view_to_buffer\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#544-568\">Source</a><h4 class=\"code-header\">unsafe fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.copy_view_to_buffer\" class=\"fn\">copy_view_to_buffer</a>(&amp;self, i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, data_buf: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class=\"docblock\"><p>Copy the i‑th view into <code>data_buf</code> if it refers to an out‑of‑line buffer.</p>\n<h5 id=\"safety-3\"><a class=\"doc-anchor\" href=\"#safety-3\">§</a>Safety</h5>\n<ul>\n<li><code>i &lt; self.len()</code>.</li>\n<li>Every element in <code>self.views()</code> must currently refer to a valid slice\ninside one of <code>self.buffers</code>.</li>\n<li><code>data_buf</code> must be ready to have additional bytes appended.</li>\n<li>After this call, the returned view will have its\n<code>buffer_index</code> reset to <code>0</code> and its <code>offset</code> updated so that it points\ninto the bytes just appended at the end of <code>data_buf</code>.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_buffer_bytes_used\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#582-594\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.total_buffer_bytes_used\" class=\"fn\">total_buffer_bytes_used</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Returns the total number of bytes used by all non inlined views in all\nbuffers.</p>\n<p>Note this does not account for views that point at the same underlying\ndata in buffers</p>\n<p>For example, if the array has three strings views:</p>\n<ul>\n<li>View with length = 9 (inlined)</li>\n<li>View with length = 32 (non inlined)</li>\n<li>View with length = 16 (non inlined)</li>\n</ul>\n<p>Then this method would report 48</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.compare_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#623-659\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.compare_unchecked\" class=\"fn\">compare_unchecked</a>(\n    left: &amp;<a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;,\n    left_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n    right: &amp;<a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;,\n    right_idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class=\"docblock\"><p>Compare two <a href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\"><code>GenericByteViewArray</code></a> at index <code>left_idx</code> and <code>right_idx</code></p>\n<p>Comparing two ByteView types are non-trivial.\nIt takes a bit of patience to understand why we don’t just compare two &amp;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\" title=\"primitive u8\">u8</a> directly.</p>\n<p>ByteView types give us the following two advantages, and we need to be careful not to lose them:\n(1) For string/byte smaller than [<code>MAX_INLINE_VIEW_LEN</code>] bytes, the entire data is inlined in the view.\nMeaning that reading one array element requires only one memory access\n(two memory access required for StringArray, one for offset buffer, the other for value buffer).</p>\n<p>(2) For string/byte larger than [<code>MAX_INLINE_VIEW_LEN</code>] bytes, we can still be faster than (for certain operations) StringArray/ByteArray,\nthanks to the inlined 4 bytes.\nConsider equality check:\nIf the first four bytes of the two strings are different, we can return false immediately (with just one memory access).</p>\n<p>If we directly compare two &amp;<a href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\" title=\"primitive u8\">u8</a>, we materialize the entire string (i.e., make multiple memory accesses), which might be unnecessary.</p>\n<ul>\n<li>Most of the time (eq, ord), we only need to look at the first 4 bytes to know the answer,\ne.g., if the inlined 4 bytes are different, we can directly return unequal without looking at the full string.</li>\n</ul>\n<h5 id=\"order-check-flow\"><a class=\"doc-anchor\" href=\"#order-check-flow\">§</a>Order check flow</h5>\n<p>(1) if both string are smaller than [<code>MAX_INLINE_VIEW_LEN</code>] bytes, we can directly compare the data inlined to the view.\n(2) if any of the string is larger than [<code>MAX_INLINE_VIEW_LEN</code>] bytes, we need to compare the full string.\n(2.1) if the inlined 4 bytes are different, we can return the result immediately.\n(2.2) o.w., we need to compare the full string.</p>\n<h5 id=\"safety-4\"><a class=\"doc-anchor\" href=\"#safety-4\">§</a>Safety</h5>\n<p>The left/right_idx must within range of each array</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.inline_key_fast\" class=\"method\"><a class=\"src rightside\" href=\"src/arrow_array/array/byte_view_array.rs.html#707-772\">Source</a><h4 class=\"code-header\">pub fn <a href=\"arrow_array/array/struct.GenericByteViewArray.html#tymethod.inline_key_fast\" class=\"fn\">inline_key_fast</a>(raw: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u128.html\">u128</a></h4></section></summary><div class=\"docblock\"><p>Builds a 128-bit composite key for an inline value:</p>\n<ul>\n<li>High 96 bits: the inline data in big-endian byte order (for correct lexicographical sorting).</li>\n<li>Low  32 bits: the length in big-endian byte order, acting as a tiebreaker so shorter strings\n(or those with fewer meaningful bytes) always numerically sort before longer ones.</li>\n</ul>\n<p>This function extracts the length and the 12-byte inline string data from the raw\nlittle-endian <code>u128</code> representation, converts them to big-endian ordering, and packs them\ninto a single <code>u128</code> value suitable for fast, branchless comparisons.</p>\n<h5 id=\"why-include-length\"><a class=\"doc-anchor\" href=\"#why-include-length\">§</a>Why include length?</h5>\n<p>A pure 96-bit content comparison can’t distinguish between two values whose inline bytes\ncompare equal—either because one is a true prefix of the other or because zero-padding\nhides extra bytes. By tucking the 32-bit length into the lower bits, a single <code>u128</code> compare\nhandles both content and length in one go.</p>\n<p>Example: comparing “bar” (3 bytes) vs “bar\\0” (4 bytes)</p>\n<div><table><thead><tr><th>String</th><th>Bytes 0–4 (length LE)</th><th>Bytes 4–16 (data + padding)</th></tr></thead><tbody>\n<tr><td><code>\"bar\"</code></td><td><code>03 00 00 00</code></td><td><code>62 61 72</code> + 9 × <code>00</code></td></tr>\n<tr><td><code>\"bar\\0\"</code></td><td><code>04 00 00 00</code></td><td><code>62 61 72 00</code> + 8 × <code>00</code></td></tr>\n</tbody></table>\n</div>\n<p>Both inline parts become <code>62 61 72 00…00</code>, so they tie on content. The length field\nthen differentiates:</p>\n<div class=\"example-wrap\"><pre class=\"language-text\"><code>key(&quot;bar&quot;)   = 0x0000000000000000000062617200000003\nkey(&quot;bar\\0&quot;) = 0x0000000000000000000062617200000004\n⇒ key(&quot;bar&quot;) &lt; key(&quot;bar\\0&quot;)</code></pre></div><h5 id=\"inlining-and-endianness\"><a class=\"doc-anchor\" href=\"#inlining-and-endianness\">§</a>Inlining and Endianness</h5>\n<ul>\n<li>We start by calling <code>.to_le_bytes()</code> on the <code>raw</code> <code>u128</code>, because Rust’s native in‑memory\nrepresentation is little‑endian on x86/ARM.</li>\n<li>We extract the low 32 bits numerically (<code>raw as u32</code>)—this step is endianness‑free.</li>\n<li>We copy the 12 bytes of inline data (original order) into <code>buf[0..12]</code>.</li>\n<li>We serialize <code>length</code> as big‑endian into <code>buf[12..16]</code>.</li>\n<li>Finally, <code>u128::from_be_bytes(buf)</code> treats <code>buf[0]</code> as the most significant byte\nand <code>buf[15]</code> as the least significant, producing a <code>u128</code> whose integer value\ndirectly encodes “inline data then length” in big‑endian form.</li>\n</ul>\n<p>This ensures that a simple <code>u128</code> comparison is equivalent to the desired\nlexicographical comparison of the inline bytes followed by length.</p>\n</div></details></div></details>",0,"arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-GenericByteViewArray%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#730-734\">Source</a><a href=\"#impl-PartialEq-for-GenericByteViewArray%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"arrow_array/types/trait.ByteViewType.html\" title=\"trait arrow_array::types::ByteViewType\">ByteViewType</a> + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"arrow_array/array/struct.GenericByteViewArray.html\" title=\"struct arrow_array::array::GenericByteViewArray\">GenericByteViewArray</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arrow_array/array/mod.rs.html#731-733\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","arrow_array::array::byte_view_array::BinaryViewArray","arrow_array::array::byte_view_array::StringViewArray"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[65279]}