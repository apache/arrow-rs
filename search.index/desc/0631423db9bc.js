rd_("BeRun a scenario that tests basic auth.BnRun a scenario that tests integration testing.BeRun a scenario that tests middleware.CjGenerate a JSON representation of the <code>Schema</code>.0BoSets \xe2\x80\x9ccreated by\xe2\x80\x9d property (defaults to \xe2\x80\xa6DbSets the value of this object from the provided <code>Bytes</code>AoSet the null count of the array00AfSets number of values.ClSet a RecordBatch that contains the parameters that will \xe2\x80\xa6BmSets all the row groups to the specified listBfSets statistics for this column chunk.BbPerforms big endian sign extensionCnSkips reading the next page, returns an error if no column \xe2\x80\xa6CeReturns slice of bytes for a slice of this data type.BeSome if deduplicating strings map \xe2\x80\xa600000Ce<code>take</code> implementation for byte view arraysCi<code>take</code> implementation for all primitive arraysCfConvert to an Arrow Field TODO: convert to use an IntoDhConvert the <code>StringViewArray</code> to <code>BinaryViewArray</code>00ChConvert <code>Variant</code> to JSON <code>String</code>0EeConvert the <code>BinaryViewArray</code> to <code>StringViewArray</code> If items \xe2\x80\xa600CiCreate/execute the prepared statement as part of this \xe2\x80\xa60BmThe transaction to which a savepoint belongs.C`Opaque handle for the transaction on the server.0ClInclude the query as part of this transaction (if unset, \xe2\x80\xa600CiPerform the ingestion as part of this transaction. If \xe2\x80\xa6DjReturns the value of <code>transaction_id</code>, or the default value \xe2\x80\xa600000554332221CdWhether rows with less than expected columns are \xe2\x80\xa6DhApplies the provided fallible binary operation across <code>a</code> \xe2\x80\xa600DfFallible version of <code>field_name</code>. Returns field name by \xe2\x80\xa6BmCreates a nested object builder. See e.g. \xe2\x80\xa6CnReturns an object builder that can be used to append a new \xe2\x80\xa6110BiCurrent state \xe2\x80\x93&gt; next state + outputCbCurrent state \xe2\x80\x93&gt; next state + optional outputCnBuilder style API for adding a field with key and value to \xe2\x80\xa60CkBuilder-style API for appending a value to the list and \xe2\x80\xa6000CmReturns type precision for this column. Note that it will \xe2\x80\xa6CgView this buffer as a mutable slice of a specific type.0CkReturns sizes of individual tensor\xe2\x80\x99s dimensions which \xe2\x80\xa60DhValidates the values stored within this <code>ArrayData</code> are valid0BjReturns the current null buffer as a slice000000000000000000000AjThe decoder for the values00AjVisit contiguous sequencesDgAdd a data body. See <code>IpcDataGenerator</code> to create this data.DgOverrides the <code>DataType</code> of this <code>PrimitiveArray</code>CaBy default <code>PrimitiveBuilder</code> uses \xe2\x80\xa6DeSet <code>DataType</code> of the <code>Field</code> and returns self.210E`Specify a custom delimiter character, defaults to comma <code>&#39;,&#39;</code>CiSet the CSV file\xe2\x80\x99s column delimiter as a byte character0BcProvide the byte size of this file.ChSets precision for Parquet DECIMAL physical type and \xe2\x80\xa6ChAdd a predicate on row group metadata to the reading \xe2\x80\xa6DdEvaluates an <code>ArrowPredicate</code>, updating this plan\xe2\x80\x99s \xe2\x80\xa6CiSets the row_count of RecordBatchOptions and returns self0BlSet the current selection to the given valueBfSet an optional row selection to applyDfChoose Arrow\xe2\x80\x99s <code>StringViewArray</code> for UTF\xe2\x80\x918 string data.CiBuild well-known binary representing a point with the \xe2\x80\xa6CkAdds a key-value pair to the FileWriter\xe2\x80\x99s custom metadataCnAssembles and writes metadata at the end of the file. This \xe2\x80\xa6CjTakes the parsed field of the struct and emits a valid \xe2\x80\xa6BbReturns configured writer version.AdSets writer version.CkA polymorphic structure to natively represent different \xe2\x80\xa6CiA struct that partially reads the Arrow JSON column/arrayCdA struct that partially reads the Arrow JSON schema.DcA leaf column that can be encoded by <code>ArrowColumnWriter</code>ClTrait expressing a Rust type that has the same in-memory \xe2\x80\xa600DkThe asynchronous interface used by <code>ParquetRecordBatchStream</code>\xe2\x80\xa6DgThe asynchronous interface used by <code>AsyncArrowWriter</code> to \xe2\x80\xa6ChA GeneralPurpose engine using the alphabet::STANDARD \xe2\x80\xa6ChA GeneralPurpose engine using the alphabet::URL_SAFE \xe2\x80\xa6CnA trait for Arrow String Arrays, currently three types are \xe2\x80\xa600AhA binary based predicateChA <code>GenericByteViewArray</code> of <code>[u8]</code>000CiThe hash function used in Bloom filter. This function \xe2\x80\xa6ClOptional compression for the memory buffers constituting \xe2\x80\xa6AnEncoding for fixed-width data.CmThe stream makes use of compressed bodies as described in \xe2\x80\xa6CbThe Confluent \xe2\x80\x9cmagic\xe2\x80\x9d byte (<code>0x00</code>)ClAn in-memory column chunk. This allows us to hold either \xe2\x80\xa6CmA <code>PrimitiveArray</code> of 128-bit fixed point decimals000CmA <code>PrimitiveArray</code> of 256-bit fixed point decimals000AlTensor of type Decimal32TypeAlTensor of type Decimal64TypeBeAn array of dictionary encoded values000CnFor sending dictionary encoding information. Any Field can \xe2\x80\xa6CmSingle generic encoder used for all three interval units. \xe2\x80\xa6CgRepresents Avro custom logical type to map to Arrow \xe2\x80\xa6DhABI-compatible struct for <code>ArrowSchema</code> from C Data Interface000DcA fallback encoder, i.e. non-dictionary, for <code>ByteArray</code>DgA type-erased <code>BufferBuilder</code> used by <code>FieldData</code>ChStruct used to describe a thrift struct field during \xe2\x80\xa6ChReference counted pointer for <code>FileMetaData</code>.DbA filtering predicate that can be applied to an <code>Array</code>00CnOpaque binary data of fixed size. Enum parameter specifies \xe2\x80\xa600A`Geometry bounderChServer streaming response type for the Handshake method.0AnIncrementally builds up arraysCjError when the requested column index is more than the \xe2\x80\xa6BaValue of an IntervalDayTime array00DeAvro <code>duration</code> logical type (Arrow Interval(DayTime)) \xe2\x80\xa611CjIPC write options used to control the behaviour of the \xe2\x80\xa6BfAn arrow binary array with i64 offsets00BfBuilder for <code>ListViewArray</code>00CkListView encoder using <code>(offset, size)</code> buffers.CgNumber of <code>f16</code> significant digits in base 20BfIndicates that the map keys are sortedDhThe maximum value and identity for the <code>min</code> aggregation. \xe2\x80\xa6000AcThe mini block sizeDhThe minimum value and identity for the <code>max</code> aggregation. \xe2\x80\xa6000CmA trait for building variant metadata dictionaries, to be \xe2\x80\xa600CnAn encoder + a null buffer. This is packaged together into \xe2\x80\xa60ChUsed to unpack offset array entries such as metadata \xe2\x80\xa6CkA type that can be used within a variable-size array to \xe2\x80\xa6000CgCallback invoked on closing a row group, arguments are:BmDescribes the policy for reading page indexes0BiParsed metadata for a single Parquet fileCaA trait for JSON-specific primitive parsing logicC`<strong>Deprecated</strong> dictionary encoding.CkPrimitive reader with type information and triplet iteratorCbProstMessageExt are useful utility methods for \xe2\x80\xa6BcA builder for <code>ReadPlan</code>0BeReading the metadata thrift structureCcWaiting for data needed to decode the next RowGroupCnA subtype of primitive type that is used as run-ends index \xe2\x80\xa600AlRetrieves the null ordering.0CnA trait for Arrow String Arrays, currently three types are \xe2\x80\xa60000CiA <code>GenericByteViewArray</code> that stores utf8 data000CnRepresents Avro timestamp-micros or local-timestamp-micros \xe2\x80\xa6CaMicroseconds from the Unix epoch, 1 January 1970.0CjPrimitive (type_id=1): TIMESTAMP(isAdjustedToUTC=true, \xe2\x80\xa600CnRepresents Avro timestamp-millis or local-timestamp-millis \xe2\x80\xa6CaMilliseconds from the Unix epoch, 1 January 1970.0BeHelper for parsing RFC3339 timestampsCaTyped implementation for <code>Statistics</code>.AcStringView encoder.BeTyped statistics for one column chunkChRepresents a 4-byte decimal value in the Variant format.00CiRepresents an 8-byte decimal value in the Variant format.00Am<code>Variant</code> Metadata00BiUnique file identifier part of AAD suffix0BkUnique file identifier part of AAD suffix *0CdAdds the given IntervalYearMonthType to an arrow \xe2\x80\xa6000CkAdds the given IntervalYearMonthType to an arrow Date32TypeCkAdds the given IntervalYearMonthType to an arrow Date64Type222210BmAdvances leaf columns for the current reader.BoAppends <code>n</code>, zero-initialized values00DkAppends a <code>true</code> into the builder to indicate that this item \xe2\x80\xa600CkConstruct an Arrow array from a partially typed JSON columnCnReturns the arrow test data directory, which is by default \xe2\x80\xa6E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600000DmPerform <code>left &amp; !right</code> operation on two arrays. If either \xe2\x80\xa60AiThe buffered array slicesBmCreates an array data, without any validation0BlBuild row group metadata without validation.CmThe number of bytes remaining in the current string/bytes \xe2\x80\xa6ClHelper function that takes a map container and casts the \xe2\x80\xa6DdConvert an array to a <code>VariantArray</code> with strict mode \xe2\x80\xa600CkReturns the codec type of this compression setting as a \xe2\x80\xa6DdEvaluate <code>a &gt; b</code> according to underlying logical type.EdCompresses the data in <code>input</code> to <code>output</code> and appends the \xe2\x80\xa6CkReturns underlying page with potentially compressed buffer.BaReturns compressed size in bytes.AoThe compressed size of the pageCkTotal size of all compressed column data in this row group.CiReturns the total compressed data size of this column \xe2\x80\xa6CiComputes the lengths of each row for a RunEndEncodedArrayCkComputes the min and max for the provided array and indicesClProvides utility functions for concatenation of elements \xe2\x80\xa60BjConcatenates arrays using MutableArrayDataAnReturns the built null bitmaskClConvert <code>ArrayRef</code> columns into <code>Rows</code>DdA helper to create a null buffer from a <code>Vec&lt;bool&gt;</code>CfReturns the encryption metadata for this column chunk.BfCrypto metadata of encrypted columns *AeUser-defined metadata0BgReturn user defined customized metadataAeUser defined metadataAnUser level customized metadataCeExtract the maximum values from Data Page statistics.AjFormat for DateTime arraysClGet the CSV file\xe2\x80\x99s datetime format if set, defaults to \xe2\x80\xa6ChThe datetime format for datetime arrays, defaults to \xe2\x80\xa6BlOptional datetime format for datetime arrays0CmGet the JSON file\xe2\x80\x99s datetime format if set, defaults to \xe2\x80\xa61CgDecodes a Decimal4 from the value section of a variant.CgDecodes a Decimal8 from the value section of a variant.CmDecodes <code>ParquetMetaData</code> from the provided bytes.0DiReturns whether this <code>Field</code>\xe2\x80\x99s dictionary is ordered, if \xe2\x80\xa60DkAttempts to cast an <code>ArrayDictionary</code> with index type K into \xe2\x80\xa6BdRemaining dictionary location if anyCkReturns the names of the dimensions in this fixed shape \xe2\x80\xa60CnReturns the names of the dimensions in this variable shape \xe2\x80\xa60CgGet a FlightDataStream containing the list of catalogs.CkImplementors may override to handle additional calls to \xe2\x80\xa6CiGet a FlightDataStream containing the list of SqlInfo \xe2\x80\xa61oDuration formatChEncoding for non-nullable primitive arrays. Iterates \xe2\x80\xa6CcAn optional hook for customizing encoding behavior.ChGet the optional hook for customizing encoding behavior.1BiRequest to commit/rollback a transaction.CcAllocate space for output views and nulls if neededBnAllocate space for output values if necessary.CmCompares the datatype with another, ignoring nested field \xe2\x80\xa60ClExpiration time for this request. After this passes, the \xe2\x80\xa6CkExpiration time of this stream. If present, clients may \xe2\x80\xa610ChExtracts flight data from the next message, updating \xe2\x80\xa6ofallible stream0DaParse a <code>Field</code> definition from a JSON representation.0DcReturns an immutable reference of a specific <code>Field</code> \xe2\x80\xa6CgReturns an arrow <code>Field</code> with the given name1CfReturns a mask with bits set whenever the value or \xe2\x80\xa6CkIndex within the RowGroup of the first row of the page. \xe2\x80\xa60BnFlush the next data page for this column chunkCkFlush the dictionary page for this column chunk if any. \xe2\x80\xa6CfConstruct a new ParquetObjectWriter via a existing \xe2\x80\xa6DjAllocates a new MutableBuffer with <code>len</code> and capacity to be \xe2\x80\xa60CeConverts a chrono::NaiveDate into an arrow Date32TypeCeConverts a chrono::NaiveDate into an arrow Date64Type10CkGenerate schema from JSON field names and inferred data \xe2\x80\xa6CmRetrieve multiple byte ranges. The default implementation \xe2\x80\xa6CeGet an iterator to go through all columns in the row.CjReturns column root <code>Type</code> for a leaf position.CkFor a given FlightDescriptor, get information about how \xe2\x80\xa60DjMake a <code>GetFlightInfo</code> call to the server with the provided \xe2\x80\xa61AnRequest a list of table types.DjReturns the start and end of the value at index <code>idx</code> along \xe2\x80\xa6BgReturns the version number of the UUID.0CnTrue if the decoder is part way through decoding a row. If \xe2\x80\xa6CcBuilds a 128-bit composite key for an inline value:0BmConverts self into json value if its possibleBlReturns the inner predicates, consuming selfBkIndicates if the memory layout column majorClReturns true if repeated type is an element type for the \xe2\x80\xa6CjParse a batch of JSON strings into a batch of Variants \xe2\x80\xa600DhEvaluates to true if <code>b</code> is a valid JSON whitespace characterEhGiven a <code>MetadataFetch</code>, parse and return the <code>ParquetMetaData</code>\xe2\x80\xa6CiAsynchronously fetch the page index structures when a \xe2\x80\xa6AoThe local type name of the type0CmReturns a comparison function that compares two values at \xe2\x80\xa60CaConstruct closures to downscale decimals from \xe2\x80\xa6CnReturns a null array of data_type with one element per row \xe2\x80\xa6CkFor map types, returns whether the keys within each map \xe2\x80\xa600CgReturns the maximum value in the binary view array, \xe2\x80\xa600CgReturns the maximum value in the string view array, \xe2\x80\xa600CaReturn iterator over the max values for the indexBhReturns an iterator over the max values.0CiOutput buffer. Metadata is written to the end of this \xe2\x80\xa60BjThe length of the footer metadata in bytesnEncryption API0CgReturns the minimum value in the binary view array, \xe2\x80\xa600CgReturns the minimum value in the string view array, \xe2\x80\xa600CaReturn iterator over the min values for the indexBhReturns an iterator over the min values.0AiCreates a new empty array00CjDescribes a basic numeric array where each element has \xe2\x80\xa60EfCreates a new <code>BooleanBufferBuilder</code> from <code>MutableBuffer</code> of \xe2\x80\xa6ChCreates a new builder from a <code>MutableBuffer</code>.CgCreates a new builder from a <code>MutableBuffer</code>ClCreates a new  <code>GenericByteBuilder</code> from buffers.CbCreates a new primitive array builder from buffers43210234FeCreate a new <code>BooleanArray</code> from a <code>Buffer</code> specified by <code>offset</code>\xe2\x80\xa60CaThe number of non-zero values in a sparse tensor.BlReturns the keys of this dictionary as usize000CfSets the <code>null_bit_buffer</code> of the ArrayDataCkreturns the null bit buffer. Rust implementation uses a \xe2\x80\xa61CmReturns the number of field names stored in this metadata \xe2\x80\xa600ClReturns the number of field names stored in the metadata \xe2\x80\xa6BkBinary file to converts csv to Parquet fileBeBinary file to rewrite parquet files.CiImplementation of Variant Binary Encoding from Apache \xe2\x80\xa6BnParses a DataType from a string representationCfParse a string to the native type with a format string0DiParses the ListView type (called after <code>ListView</code> has been \xe2\x80\xa6Amparses the next full DataTypeAhParses the next timeunitDkParses the next timestamp (called after <code>Timestamp</code> has been \xe2\x80\xa6ClReturns the byte width of this type if it is a primitive \xe2\x80\xa60DkRead up to <code>num_levels</code> definition levels into <code>out</code>.CnRead the dictionary from the buffer and provided metadata, \xe2\x80\xa6ChRead the dictionary with the given block and data bufferCoRead the <code>ListIdentifier</code> for a Thrift encoded list.BmReturns whether to read page level statisticsEfRead up to <code>max_records</code> of repetition level data into <code>out</code> \xe2\x80\xa6CjRead a Thrift encoded list from the input protocol object.CaWhether the reader schema at this site is a unionClReturn BooleanArray indicating which strings in an array \xe2\x80\xa6000CnThe length of the chunk in bytes Note that remaining_bytes \xe2\x80\xa6ClRepetition of the field. The root of the schema does not \xe2\x80\xa6Clrepetition of the field. The root of the schema does not \xe2\x80\xa6BaRescales a decimal value from \xe2\x80\xa6000Eeextends the <code>buffer</code> to be able to hold <code>len</code> bits, setting \xe2\x80\xa6AeTonic response streamDgVerifies that a buffer of bytes contains a <code>Message</code> and \xe2\x80\xa6CiReturns schema as <code>TypePtr</code> for cheap cloning.CkExtract the maximum values from row group statistics in \xe2\x80\xa6BjCompress requests with the given encoding.CmCompress responses with the given encoding, if the client \xe2\x80\xa6AaSets compression.CnSets default compression codec for all columns (default to \xe2\x80\xa6BgSets compression codec for this column.BdSets file offset for this row group.DjReturns a <code>u32</code> iterator over set bit positions without any \xe2\x80\xa60AlSet the current page reader.DgSimilar to <code>set_bits</code> but sets only upto 64 bits, actual \xe2\x80\xa6ClReturn the shredding state of this <code>VariantArray</code>Bchow is this variant array shredded?110CjOptional statistics to help estimate total memory when \xe2\x80\xa6CeSkips over <code>num_levels</code> definition levels.CnSkips over up to <code>num_levels</code> repetition levels \xe2\x80\xa6EgSkip a field with type <code>field_type</code> recursively up to <code>depth</code> \xe2\x80\xa6AmSkips validation of the data.DbShould data validation be skipped for this <code>ArrayData</code>?10ClShould validation be skipped when reading data? Defaults \xe2\x80\xa6000DfSort elements from <code>ArrayRef</code> into an unsigned integer (\xe2\x80\xa600CmReturns the sort ordering of the rows in this RowGroup if \xe2\x80\xa6AhReturns sorting columns.CiIf set, specifies a sort ordering of the rows in this \xe2\x80\xa6ClIf provided used as the schema hint when determining the \xe2\x80\xa6CjCheck if the given fields are supported by the row format.CjTakes ownership of the row groups in this builder, and \xe2\x80\xa6Eoconverts a <code>i32</code> representing a <code>time32(s)</code> to <code>NaiveDateTime</code>00Ekconverts <code>NaiveTime</code> to a <code>i32</code> representing a <code>time32(s)</code>00CkTotal byte size of all uncompressed column data in this \xe2\x80\xa6CjTotal byte size of all the uncompressed column data in \xe2\x80\xa6FaTry to append a view of the given <code>block</code>, <code>offset</code> and <code>length</code>0CmFallibly creates a <code>GenericStringArray</code> from a \xe2\x80\xa600CcCreate a BinaryArray from the Rows data without \xe2\x80\xa6DeCreate a new <code>ParquetDecoderBuilder</code> for configuring a \xe2\x80\xa60Djreturns <code>ParquetRecordBatchReader</code> suitable for reading the \xe2\x80\xa6DgParses a <code>Uuid</code> from a string of hexadecimal digits with \xe2\x80\xa60DiSame as <code>Self::try_parse()</code>, but provide the original file \xe2\x80\xa6BdSpecify the schema for the response.EhModule for transforming a typed arrow <code>Array</code> to <code>VariantArray</code>\xe2\x80\xa6BaBuilder to keep track of type ids0CcRemoves all (nested) typed_value columns from a \xe2\x80\xa600CnModule for unshredding VariantArray by folding typed_value \xe2\x80\xa6CjExpand this interval to the union of self and other in \xe2\x80\xa6DhValidates the values stored within this <code>ArrayData</code> are valid0CfReturns <code>Self::value</code> formatted as a string0BkReturns the element at index <code>i</code>0BeReturns ith value of this list array.CdReturns the primitive value at index <code>i</code>.DcReturns the element at index <code>i</code> without bounds checkingCbReturns the boolean value at index <code>i</code>.ClReturns the element at index <code>i</code> as a byte slice.BdReturns ith value of this map array.BjReturns ith value of this list view array.737372615403fSafetyCiTransform a batch of Variant represented as STRUCT&lt;\xe2\x80\xa600CmVisit contiguous intervals for a given dimension within a \xe2\x80\xa6BaCalled when a primitive type hit.CaSets the <strong>row\xe2\x80\x91based batch size</strong>.CjSet the batch size (number of records to load at one time)BcSets the batch size in rows to readDiSet the size of <code>RecordBatch</code> to produce. Defaults to 1024 \xe2\x80\xa6BfSets batch size for this tree builder.BbSets batch size for this row iter.CkSimilar to MutableArrayData::new, but lets users define the0CkSet this sort options to sort descending if argument is \xe2\x80\xa600D`Add a <code>FlightDescriptor</code> describing what this data isDjAdd a <code>FlightDescriptor</code> that the client should use for the \xe2\x80\xa6CgAdd a <code>FlightDescriptor</code> describing the dataCiOverride the field passed to <code>MapBuilder::new</code>0DaProvide a regex to match null values, defaults to <code>^$</code>0ClEnable reading the page index structures described in \xe2\x80\x9c\xe2\x80\xa6EbEnable reading <code>PageIndex</code>, if present (defaults to <code>false</code>)BdSet the reader\xe2\x80\x99s column projectionBbSet the projection (default: None)AdSpecify a projectionCmOptional projection for which columns to load (zero-based \xe2\x80\xa6BoOnly read data from the provided column indexesDaSets the <code>WriterProperties</code> for writing parquet files.CoSets <code>Repetition</code> for this field and returns itself.0CfProvide a <code>RowFilter</code> to skip decoding rowsCkCreate page iterator from parquet file reader with only \xe2\x80\xa6CbOnly read data from the provided row group indexesCgSpecify a custom terminator character, defaults to CRLFCgProvide a custom terminator character, defaults to CRLFBbOverrides if types should be shown0ChWrites compressed data page into underlying sink and \xe2\x80\xa6fSafetyCaWhether the writer schema at this site is a unionBgBuilder for <code>ArrayData</code> type00DfThe data for a single column chunk, see <code>ArrowColumnWriter</code>CkA subtype of primitive type that represents numeric values.000DkAn <code>ArrowPredicate</code> created from an <code>FnMut</code> and a \xe2\x80\xa60DaEncodes <code>RecordBatch</code> to parquet, outputting to an \xe2\x80\xa6BeBuilder for an <code>AvroField</code>DhAlias for an Avro <strong>Single Object Encoding</strong> stream writer.CmBuilder for <code>RunArray</code> of <code>BinaryArray</code>000CeIterator over chunks of 64 bits represented as an u6400DjAn iterator of <code>usize</code> whose index in a provided bitmask is \xe2\x80\xa6000CfIterator of contiguous ranges of set bits within a \xe2\x80\xa6000AnColumn reader for boolean typeAnColumn writer for boolean typeEc<code>Storage</code> for the <code>Interner</code> used by <code>DictEncoder</code>BoPhysical type for leaf-level primitive columns.CjContainer for column properties that can be changed as \xe2\x80\xa6CeTyped value reader for a particular primitive column.BkTyped column writer for a primitive column.AgCommandGetTablesvariantClRepresents a request to retrieve the list of tables, and \xe2\x80\xa60BjSupported compression codecs for Avro dataCjRepresents compressing a ipc stream using a particular \xe2\x80\xa6BaSupported compression algorithms.CnIncremental-encoded byte array. Prefix lengths are encoded \xe2\x80\xa6BeIncremental encoding for byte arrays.CcNew page format allowing reading levels without \xe2\x80\xa6DlDay of the week, in range <code>0..=6</code>, where Monday is <code>0</code>00DlDay of the week, in range <code>0..=6</code>, where Sunday is <code>0</code>00AmTensor of type Decimal128TypeAmTensor of type Decimal256TypeAjA decimal 32 array builder000AjA decimal 64 array builder000BkThe decoder is actively decoding a RowGroupCiDecoder for <code>Encoding::RLE_DICTIONARY</code> indicesCdAn array of variable length byte arrays that are \xe2\x80\xa6ClDescribes what kind of update took place after a call to \xe2\x80\xa6CiServer streaming response type for the DoExchange method.0CaImplementation of page iterator for parquet file.CeThe extension type for <code>FixedShapeTensor</code>.0BjThe extension type for fixed shape tensor.0CiThe name or tag for a Flight. May be used as a way to \xe2\x80\xa60CnThe data needed to encode a stream of flight data, holding \xe2\x80\xa6ChImplements FlightSqlService to handle the flight sql \xe2\x80\xa6BgAn array of variable length byte arrays000CmAn array of variable length lists, similar to JSON arrays \xe2\x80\xa6000CgA builder for a <code>CommandGetTables</code> response.0CjA builder for group types. All attributes are optional \xe2\x80\xa6CeThe request that a client provides to a server on \xe2\x80\xa60AoStarts with ignoring ASCII caseBhAn in-memory collection of column chunksEdHandles low level details of encoding <code>Array</code> and <code>Schema</code> \xe2\x80\xa6BmLow level Arrow Schema to IPC bytes converterCjTrait declaring any type that is serializable to JSON. \xe2\x80\xa6EeA <code>GenericBinaryArray</code> of <code>[u8]</code> using <code>i64</code> offsets000BgBuilder for <code>LargeListArray</code>00EdA <code>GenericStringArray</code> of <code>str</code> using <code>i64</code> offsets000DeA helper to construct <code>ArrayLevels</code> from a potentially \xe2\x80\xa6CkReturns the largest discriminant value defined for this \xe2\x80\xa600000DgThe first block is split into <code>MINI_BLOCK_COUNT</code> mini-blocksCmEfficiently create an ArrayData from one or more existing \xe2\x80\xa60CfDeprecated: Dictionary encoding. The values in the \xe2\x80\xa6C`<strong>Deprecated</strong> dictionary encoding.CgSealed trait to start to remove specialisation from \xe2\x80\xa6BgBuilder for <code>PrimitiveArray</code>000BjRepresents an exception raised by PyArrow.CaConfiguration settings for reading parquet files.AhMetadata for a row groupAiSchema of a Parquet file.CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa60CkRetrieves a UTF-8 string with the preferred term for \xe2\x80\x9c\xe2\x80\xa60CmBuilder for <code>RunArray</code> of <code>StringArray</code>000AgA date/time combinationCiDate and time recorded as microseconds since the Unix \xe2\x80\xa61CiDate and time recorded as milliseconds since the Unix \xe2\x80\xa6Bffn to create its <code>DataType</code>00Ch32-bit time type: the elapsed time since midnight in \xe2\x80\xa600ClEmpty struct to signal the order defined by the physical \xe2\x80\xa6CkInternal typed triplet iterator as a wrapper for column \xe2\x80\xa6BjAn iterator over <code>VariantArray</code>DhThe basic type of a <code>Variant</code> value, encoded in the first \xe2\x80\xa6CjRepresents an 16-byte decimal value in the Variant format.00CjTrait implemented by objects that are fields of Thrift \xe2\x80\xa6CaConfiguration settings for writing parquet files.CoHelper to create <code>CommandGetXdbcTypeInfo</code> responses.0CiAdds the given IntervalDayTimeType to an arrow Date64Type0BfAppend the row count of the next page.CkAppend the given column chunks to the file as a new row \xe2\x80\xa6E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600EgDowncast this to a <code>GenericByteViewArray</code> returning <code>None</code> if \xe2\x80\xa600EgDowncast this to a <code>GenericListViewArray</code> returning <code>None</code> if \xe2\x80\xa600EeDowncast this to a <code>PrimitiveArray</code> returning <code>None</code> if not \xe2\x80\xa600B`Scenario for testing basic auth.BfBasic auth test for the Flight server.CnSets bloom filter false positive probability (fpp) for all \xe2\x80\xa6CmSets number of distinct values (ndv) for bloom filter for \xe2\x80\xa6CmApply a bitwise not to one input and return the result as \xe2\x80\xa600BjReturn a reference to the cache projectionCiThe columns to cache in the predicate cache. Normally \xe2\x80\xa6DdOptional projection mask if using <code>RowGroupCache</code> for \xe2\x80\xa6ClHelper function that takes an Generic list container and \xe2\x80\xa6DkValidates that <code>&amp;self.values[start_offset..]</code> is a valid \xe2\x80\xa6CfCheck that <code>val</code> is a valid UTF-8 sequence.BlClears the statistics for this column chunk.BaCoerce data type during inferenceCfReference counted clone of descriptor for this column.CmLook up a column by name and return a immutable reference \xe2\x80\xa60ClCreates a random (but fixed-seeded) f16 array of a given \xe2\x80\xa6ClCreates a random (but fixed-seeded) f32 array of a given \xe2\x80\xa6ClCreates a random (but fixed-seeded) f64 array of a given \xe2\x80\xa6CnCreates an random (but fixed-seeded) array of a given size \xe2\x80\xa6BgReturns the offset for the column data.CgByte offset from beginning of file to first data page *BiThe optional datetime subcode of the type0CnSpecifies a filter pattern for schemas to search for. When \xe2\x80\xa60ChDecodes a Decimal16 from the value section of a variant.BoDecodes a <code>PrimitiveArray</code> from rowsDeThe default <code>IterationStrategy</code> for a filter of length \xe2\x80\xa6CdGet a FlightDataStream containing the query results.CjGiven one or more expressions evaluating to an integer \xe2\x80\xa60DoDerive <code>DisplayIndexState</code> for <code>PrimitiveArray&lt;$t&gt;</code>CiEncodes definition or repetition levels for Data Page v1.CmEncodes definition or repetition levels for Data Page v2. \xe2\x80\xa6Clfunction used to extend the output array with nulls from \xe2\x80\xa6Ch<code>filter</code> implementation for byte view arrays.Ca<code>filter</code> implementation for list viewsDnComputes a new null mask for <code>data</code> based on <code>predicate</code>Cg<code>filter</code> implementation for primitive arraysBnWhether the type has fixed precision and scale0CmReturns a vector with references to all fields (including \xe2\x80\xa60CmFinalises any outstanding data pages and flushes buffered \xe2\x80\xa6BbConvert from a bits value exactly.DjCreates a <code>GenericByteArray</code> based on an iterator of values \xe2\x80\xa6CkCreates a PrimitiveArray based on an iterator of values \xe2\x80\xa6DgCreates a <code>GenericByteViewArray</code> based on an iterator of \xe2\x80\xa6210ClGeospatial type codes of all instances, or an empty list \xe2\x80\xa6CkGeneric helper to get the last run end value from a run \xe2\x80\xa6CkIf this is a list and the requested index is in bounds, \xe2\x80\xa60CmIf this is an object and the requested field name exists, \xe2\x80\xa60BeRequest the primary keys for a table.BkReturns the byte offset at <code>idx</code>CnReturns the number of rows buffered in the in progress row \xe2\x80\xa60CfAnticipated encoded size of the in progress row group.0BhIntegration tests for the Flight client.BhIntegration tests for the Flight server.BmCheck for potential intersection with a valueClReturns true if this type is valid for run-ends array in \xe2\x80\xa60EcReturns <code>true</code> if and only if <code>self</code> has a negative sign, \xe2\x80\xa60EcReturns <code>true</code> if and only if <code>self</code> has a positive sign, \xe2\x80\xa60Albuilder for all the metadata0Clending offset for each serialized metadata dictionary in \xe2\x80\xa60CfThe metadata version to write. The Rust IPC writer \xe2\x80\xa6CnDetermines a single combined range of bytes needed to read \xe2\x80\xa6CeCreates a new Tensor using column major memory layoutCjCreate a new <code>StructArray</code> containing no fields0CdCreates map array from provided keys, values and \xe2\x80\xa60EcCreate a new <code>DecodedFlightData</code> with a <code>RecordBatch</code> payloadCnCreate a new Sbbf with given number of distinct values and \xe2\x80\xa6CdCreate a new column with the given data type and \xe2\x80\xa6CnCreates file reader from a Parquet file with read options. \xe2\x80\xa6DfCreate a new <code>ParquetRecordBatchStreamBuilder</code> with the \xe2\x80\xa60CoCreate a new ParquetMetaDataWriter to write to <code>buf</code>EhAdvance <code>self.column_index</code> returning the next <code>ColumnDescPtr</code> \xe2\x80\xa6ChReads and fully parses the next IPC message from the \xe2\x80\xa6BdReturn the next SerializedPageReaderCkThe corresponding array identifying non-null slices of dataClReturns true if we do not need to unpack the nullability \xe2\x80\xa6ClCalculate an alignment boundary and return the number of \xe2\x80\xa6BoIf the query provided contained parameters, \xe2\x80\xa60BmRetrieve the parameter schema from the query.AoThe underlying Parquet metadataAdThe parquet metadataCgBinary file to return the number of rows found from \xe2\x80\xa6EgGiven a <code>ChunkReader</code>, parse and return the <code>ParquetMetaData</code> \xe2\x80\xa6DkParses the next Decimal32 (called after <code>Decimal32</code> has been \xe2\x80\xa6DkParses the next Decimal64 (called after <code>Decimal64</code> has been \xe2\x80\xa6DhParses the next Dictionary (called after <code>Dictionary</code> has \xe2\x80\xa6CnGiven a push decoder that has had the needed ranges pushed \xe2\x80\xa6DkParses the LargeList type (called after <code>LargeList</code> has been \xe2\x80\xa6CgFor a given FlightDescriptor, start a query and get \xe2\x80\xa60DkMake a <code>PollFlightInfo</code> call to the server with the provided \xe2\x80\xa61CeHelper function for printing potentially long arrays.AjA defined protocol version000DiRead the <code>FieldIdentifier</code> for a field in a Thrift encoded \xe2\x80\xa6EdReads the page header at <code>offset</code> from <code>reader</code>, returning \xe2\x80\xa6CmCommon functionality for re-encoding offsets. Returns the \xe2\x80\xa6ClReinterprets this array\xe2\x80\x99s contents as a different data \xe2\x80\xa60CfReturns reference counted clone for schema descriptor.CeReturns reference counted clone of schema descriptor.BmReturns a reference to schema descriptor Arc.DbParse a <code>Schema</code> definition from a JSON representation.0CiCompression of requests sent by the client to the server.CjShould the writer coerce types to parquet native types \xe2\x80\xa6AeSets the column indexAiOverride the column indexCjSets <code>if_not_exist</code> to the provided enum value.AeSets the offset indexAiOverride the offset indexBiwe can only do this if the T is primitiveCjUnique identifier for the instance of the statement to \xe2\x80\xa60F`converts a <code>i32</code> representing a <code>time32(ms)</code> to <code>NaiveDateTime</code>00F`converts a <code>i64</code> representing a <code>time64(ns)</code> to <code>NaiveDateTime</code>00F`converts a <code>i64</code> representing a <code>time64(us)</code> to <code>NaiveDateTime</code>00Elconverts <code>NaiveTime</code> to a <code>i32</code> representing a <code>time32(ms)</code>00Elconverts <code>NaiveTime</code> to a <code>i64</code> representing a <code>time64(ns)</code>00Elconverts <code>NaiveTime</code> to a <code>i64</code> representing a <code>time64(us)</code>00BeTimestamp format for timestamp arraysCmGet the CSV file\xe2\x80\x99s timestamp format if set, defaults to \xe2\x80\xa6CjThe timestamp format for timestamp arrays, defaults to \xe2\x80\xa6BnOptional timestamp format for timestamp arrays0CnGet the JSON file\xe2\x80\x99s timestamp format if set, defaults to \xe2\x80\xa61AnReturns the thrift page headerBkReturns the number of trailing padding bits0B`Appends a value into the builder0BjAppends a new primitive value to this listAnAppend a value to the builder.01CkAdd a field with key and value to the object by copying \xe2\x80\xa60CnTry to create a new file reader with the reader wrapped in \xe2\x80\xa6CmTry to create a new stream reader with the reader wrapped \xe2\x80\xa6CnTry to create a new file writer with the writer wrapped in \xe2\x80\xa6CmTry to create a new stream writer with the writer wrapped \xe2\x80\xa6CcThe number of remaining tuples in the current blockCjDetermine if the fields are compatible for purposes of \xe2\x80\xa6DaSum <code>page_histogram</code> into <code>chunk_histogram</code>CnConstructs and validates contents in the builder to ensure \xe2\x80\xa6DfDoes a cheap sanity check that the <code>self.len</code> values in \xe2\x80\xa6CdReturns the current values buffer as a mutable sliceCmReturns the current dictionary values buffer as a mutable \xe2\x80\xa610BmVisit intervals in a collection of geometriesAmChange the compression codec.AaAdd a data headerDcOverrides the format used for <code>DataType::Date32</code> columns0B`Set the CSV file\xe2\x80\x99s date formatBaSet the JSON file\xe2\x80\x99s date format0CmThis method pre-populates the field name directory in the \xe2\x80\xa60ClSet this sort options to sort nulls first if argument is \xe2\x80\xa600CmSet the name of the root parquet schema element (defaults \xe2\x80\xa6CkEnable stricter behavior for certain Avro unions (e.g., \xe2\x80\xa6AnEnable or disable strict mode.CdSets if the decoder should return an error if it \xe2\x80\xa6DdSet the <code>StructMode</code> for the reader, which determines \xe2\x80\xa6DdSet the <code>StructMode</code> for the writer, which determines \xe2\x80\xa6CiSet whether to encode structs as JSON objects or JSON \xe2\x80\xa6DcOverrides the format used for <code>DataType::Time32</code> and \xe2\x80\xa60B`Set the CSV file\xe2\x80\x99s time formatBaSet the JSON file\xe2\x80\x99s time format0BoSet the number of bytes in the result, if knownBeWrite array data to a vector of bytesBiReturns configured batch size for writes.AfSets write batch size.DeUsed to indicate the start of a list of <code>element_type</code> \xe2\x80\xa6CjWrites mini batch of values, definition and repetition \xe2\x80\xa6CiUsed to mark the end of a struct. This must be called \xe2\x80\xa6ClMaps a writer\xe2\x80\x99s field index to the corresponding reader\xe2\x80\xa6CmFor each writer branch index, the reader branch index and \xe2\x80\xa6CjBuilder-specific state for array building that manages \xe2\x80\xa6DeEncodes <code>ArrowLeafColumn</code> to <code>ArrowColumnChunk</code>DjTrait for <code>ArrowNativeType</code> that adds checked and unchecked \xe2\x80\xa6000ChA subtype of primitive type that represents temporal \xe2\x80\xa600ChEncoding for fixed-width data (FLOAT, DOUBLE, INT32, \xe2\x80\xa6AnEncoding for fixed-width data.BnArray builder for <code>BinaryViewArray</code>000AoBinaryView (byte view) encoder.CnBloom filter header is stored at beginning of Bloom filter \xe2\x80\xa60BnMetadata for a column chunk of a Parquet file.AhCommandGetSqlInfovariantCmRepresents a metadata request. Used in the command member \xe2\x80\xa60DeDefault value for <code>WriterProperties::data_page_size_limit</code>AkA decimal 128 array builder000AkA decimal 256 array builder000CmFlightData and the decoded payload (Schema, RecordBatch), \xe2\x80\xa6CcDelta encoding for integers, either INT32 or INT64.CjKeeps track of dictionaries that have been written, to \xe2\x80\xa6Bo<code>DisplayIndex</code> with additional stateAhDoPutUpdateResultvariantBkReturned from the RPC call DoPut when a \xe2\x80\xa60CjControls the level of statistics to be computed by the \xe2\x80\xa6AiThe pre\xe2\x80\x91computed table.CkBuild an Arrow <code>FileReader</code> with custom options.BgStatistics for FixedLenByteArray columnCiWrapper type for performance reasons, this represents \xe2\x80\xa6Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600DgWrapper around a stream of <code>FlightData</code> that handles the \xe2\x80\xa6ClStream that encodes a stream of record batches to flight \xe2\x80\xa6CeFlight service implementation for integration testingDhtracks the state needed to reconstruct <code>RecordBatch</code>es from aAlColumn reader for float typeAlColumn writer for float type666Bl<code>ByteArrayType</code> for binary arrays00777Bl<code>ByteArrayType</code> for string arrays00ChA builder for a <code>CommandGetSqlInfo</code> response.AlColumn reader for int32 typeAlColumn writer for int32 typeAlColumn reader for int64 typeAlColumn writer for int64 typeBmBuffer builder for signed 8-bit integer type.000AlColumn reader for int96 typeBhColumn writer for int96 (timestamp) typeDgAvro <code>duration</code> logical type (Arrow Interval(YearMonth)) \xe2\x80\xa6DdThe iteration strategy used to evaluate <code>FilterPredicate</code>CjServer streaming response type for the ListActions method.0CjServer streaming response type for the ListFlights method.0CjSkip the selection mask computation of the fully nulls \xe2\x80\xa6DjA memory reservation within a <code>MemoryPool</code> that is freed on \xe2\x80\xa60ChReturned when a function needs more data to complete \xe2\x80\xa6CaReturned when functionality is not yet available.000BlBuilder for creating <code>NullBuffer</code>0000CcPageEncodingStats for a column chunk and data page.Blstatistics of a given page type and encodingAcA PreparedStatementDgA newtype wrapper around <code>JsonArrayFormatter</code> that skips \xe2\x80\xa6CkTrait for types that can read <code>RecordBatch</code>\xe2\x80\x99s.000ClTrait for types that can write <code>RecordBatch</code>\xe2\x80\x99s.000EaGeneric encoder for Arrow <code>RunArray&lt;R&gt;</code>-based sites (run-end \xe2\x80\xa6BjA shared <code>ArrowColumnChunkData</code>CjRetrieves a boolean value indicating whether a catalog \xe2\x80\xa60CcRetrieves a int32 ordinal representing the case \xe2\x80\xa60CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa6000BnArray builder for <code>StringViewArray</code>000CeThe action to take if the target table already exists0EbA <code>PrimitiveArray</code> of seconds since midnight stored as <code>i32</code>000CkPrimitive (type_id=1): TIMESTAMP(isAdjustedToUTC=false, \xe2\x80\xa600C`Iterates over an arbitrarily aligned byte buffer00EaExtends <code>VariantBuilder</code> to help building nested <code>Variant</code>s00ChA parsed version of the variant array value header byte.ClA mutable ArrayData that knows how to freeze itself into \xe2\x80\xa6AoEnable decompressing responses.CfEnable decompressing requests with the given encoding.CcAdd the given number of days to the given datetime.DjAppend the given page-level histograms to the <code>ColumnIndex</code> \xe2\x80\xa6EhAppend <code>value_size</code> bytes of given <code>value</code> into <code>dest</code>.EcApplies <code>op</code> to possibly scalar <code>ArrayOrd</code> with the given \xe2\x80\xa6DhDowncasts this to a <code>AnyDictionaryArray</code> panicking if not \xe2\x80\xa600EfDowncast this to a <code>DictionaryArray</code> returning <code>None</code> if not \xe2\x80\xa600DhAsserts that <code>data_type</code> is compatible with <code>Self</code>AoRequest to begin a transaction.DdPerform bitwise <code>or</code> every value in an array with the \xe2\x80\xa60DgBuilds an extend that adds <code>buffer_offset</code> to any buffer \xe2\x80\xa6DgHelper function to cast from one <code>ByteViewType</code> array to \xe2\x80\xa6DcTry to cast <code>array</code> to <code>to_type</code> if possible.00EeCompares two <code>GenericByteViewArray</code> at index <code>left_idx</code> and \xe2\x80\xa60EdCompare two <code>GenericByteViewArray</code> at index <code>left_idx</code> and \xe2\x80\xa60AnReturns the compression level.00BgCompression level for gzip/brotli/zstd.CiConcatenate multiple RunArray instances into a single \xe2\x80\xa6BnCheck for potential containment of an intervalCnReads the correct number of buffers based on list type and \xe2\x80\xa6CmReturns current definition level, Method does not advance \xe2\x80\xa6CgReturns current definition level for a leaf triplet \xe2\x80\xa6CkReturns current definition level. If field is required, \xe2\x80\xa6CmReturns current repetition level. Method does not advance \xe2\x80\xa6CgReturns current repetition level for a leaf triplet \xe2\x80\xa6CkReturns current repetition level. If field is required, \xe2\x80\xa6C`Generate a JSON representation of the data type.0BlThe decoder for the definition levels if any00CmDictionary blocks that will be written as part of the IPC \xe2\x80\xa6CiGiven one or more expressions evaluating to primitive \xe2\x80\xa60AoExtends builder with dictionaryCbExtends builder with an existing dictionary array.10CiExtends this buffer from a slice of items that can be \xe2\x80\xa60DfA specified helper to cast from <code>GenericBinaryArray</code> to \xe2\x80\xa6CkReturns encoding for a column when no other encoding is \xe2\x80\xa6CjDefines a <code>Flight</code> for generation or retrieval.BiThe descriptor associated with this info.ClThe descriptor the client should use on the next try. If \xe2\x80\xa6ClThe descriptor of the data. This is only relevant when a \xe2\x80\xa6CoNested message and enum types in <code>FlightDescriptor</code>.321BdFlushes the in progress block if anyBcReturns the number of buffered rows0CiGets a specific column reader corresponding to column \xe2\x80\xa6CgGet value reader for the <code>i</code>th column chunk.DfReturns the underlying <code>ColumnReaderImpl</code> for the given \xe2\x80\xa6CkCreate a specific column writer corresponding to column \xe2\x80\xa6DfReturns the underlying <code>ColumnWriterImpl</code> for the given \xe2\x80\xa6CnRetrieves a description about the foreign key columns that \xe2\x80\xa6BaCreate an IPC dictionary encodingAoGet the IPC type of a data typeCfRetrieves the foreign key columns for the given table.DhReturn a Vec containing for each set index in <code>mask</code>, the \xe2\x80\xa6AnReturns Parquet physical type.CmGets physical type of this primitive type. Note that this \xe2\x80\xa6CnReturn the number of bytes to read in the initial pass. If \xe2\x80\xa6DhGets schema from a raw pointer of <code>FFI_ArrowArrayStream</code>. \xe2\x80\xa6CmHow many bytes were actually used in the source array\xe2\x80\x99s \xe2\x80\xa6BfReturns the offset for the index page.CgByte offset from beginning of file to root index page *CjInfer the fields of a JSON file by reading the first n \xe2\x80\xa60CdReturns true if this type is signed integer: (Int*).0DkIterates through the set bit positions in <code>bytes</code> in reverse \xe2\x80\xa6BnConverts numeric type to a <code>String</code>0nLog verbosity.CnCreates a view from a fixed length input (the compiler can \xe2\x80\xa6DhMatch field names of structs and lists. If set to <code>true</code>, \xe2\x80\xa6000DgCreates a new <code>PrimitiveDictionaryBuilder</code> from existing \xe2\x80\xa60CeCreate a new builder from an existing ParquetMetaDataEfCreates a new <code>Schema</code> from a sequence of <code>Field</code> values and \xe2\x80\xa60DdCreate a new <code>ParquetMetaDataReader</code> populated with a \xe2\x80\xa6CiCreate a new <code>ParquetDecoderBuilder</code> given \xe2\x80\xa6DkCreate a <code>ParquetRecordBatchStreamBuilder</code> from the provided \xe2\x80\xa6DkCreate a <code>ParquetRecordBatchReaderBuilder</code> from the provided \xe2\x80\xa6012DeSimilar to <code>Self::try_new_with_metadata</code>, but unvalidated.0ChThe number of buffered rows, including the partially \xe2\x80\xa6DiReturns the number of rows selected, or <code>None</code> if all rows \xe2\x80\xa6BmPolicy for reading offset and column indexes.CiReturns the parquest test data directory, which is by \xe2\x80\xa6DhParses the next Decimal128 (called after <code>Decimal128</code> has \xe2\x80\xa6DhParses the next Decimal256 (called after <code>Decimal256</code> has \xe2\x80\xa6A`Parse UTF-8 ViewDgReturns an iterator over the first <code>prefix_len</code> bytes of \xe2\x80\xa60BdReturns whether to read bloom filterfSafetyDiThis is a specialized version of <code>Self::read_field_begin</code>, \xe2\x80\xa6DjRead the page index structures when a <code>ParquetMetaData</code> has \xe2\x80\xa6CeCreates a record batch from binary data using the \xe2\x80\xa6BkRead the record batch, consuming the readerCiRead the RecordBatch with the given block and data bufferhBased onCkRegister a new SqlInfo result, making it available when \xe2\x80\xa6BlThe decoder for the repetition levels if any00CcAre buffers required to already be aligned? See \xe2\x80\xa6CnWhether or not array data in input buffers are required to \xe2\x80\xa60CmContains implementations of the reader traits FileReader, \xe2\x80\xa6CnFollows the given path as far as possible through shredded \xe2\x80\xa6CmEmpty structs in unions consist of a single byte of 0 for \xe2\x80\xa6BfReturns the number of de-selected rowsCgReturns a new Buffer that is a slice of this buffer \xe2\x80\xa60DaHelper to get a &amp;str from a slice at the given offset and \xe2\x80\xa6CiSubstract the given number of days to the given datetime.BcSubstrings based on character index0CgSubtracts the given IntervalDayTimeType to an arrow \xe2\x80\xa6000CfSubtract the given IntervalDayTimeType to an arrow \xe2\x80\xa60111100DkReturns an iterator over the last <code>suffix_len</code> bytes of each \xe2\x80\xa60BgReturns the sum of values in the array.00CjIn files encrypted with AAD prefix without storing it, \xe2\x80\xa6000CfReturns the current column index from the builder, \xe2\x80\xa6CfReturns the current offset index from the builder, \xe2\x80\xa6DfTake rows by index from <code>RecordBatch</code> and returns a new \xe2\x80\xa600CbThe target batch size (and thus size for views \xe2\x80\xa6CmConverts an arrow Date64Type into a chrono::NaiveDateTime \xe2\x80\xa60CnMacro to generate simple functions that cover all types of \xe2\x80\xa6EgCreates two <code>Buffer</code>s from an iterator of <code>Option</code>. The first \xe2\x80\xa6EdTry and convert the data in this  <code>FlightInfo</code> into a <code>Schema</code>DdReturns a copy of this <code>Fields</code> containing only those \xe2\x80\xa60CjSet the query progress if known. Must be in the range [\xe2\x80\xa6CfReturn a reference to the typed_value field of the \xe2\x80\xa6CgReturn a reference to the typed_value field, if present01100BcReturns uncompressed size in bytes.BnThe total size of the page, before compressionCkReturns the total uncompressed data size of this column \xe2\x80\xa6BnUpsert field name to dictionary, return its ID0DgReturns value as a chrono <code>NaiveDateTime</code>, handling time \xe2\x80\xa60CaReturns a value as a chrono <code>Duration</code>0CiAdd optional application specific metadata to the message00BmSet the <code>Self::buffer_index</code> field0CgSpecify the cast options to use when casting to the \xe2\x80\xa60CkShould Arrow types be coerced into Parquet native types \xe2\x80\xa6BjSet whether to enable double quote escapesDgSets <code>LogicalType</code> for this field and returns itself. If \xe2\x80\xa6D`Sets <code>LogicalType</code> for this field and returns itself.DfSet whether the stored <code>max</code> field represents the exact \xe2\x80\xa6DfSet whether the stored <code>min</code> field represents the exact \xe2\x80\xa6CgEnable or disable reading the page index structures \xe2\x80\xa6CeConstruct a timestamp array with an optional timezoneAiSets an optional timezone10BdConstruct a timestamp array with UTC0CiOverride the field passed to <code>MapBuilder::new</code>0ClSubmit parameters to the server, if any have been set on \xe2\x80\xa6CkUsed to mark the start of a Thrift struct field of type \xe2\x80\xa6BhThe estimated length of a field in bytesCgA <code>DictionaryArray</code> with the key type erased000BmError when an arithmetic operation overflows.00AkTrait for primitive values.00000CmBuilder for constructing Parquet readers that decode into \xe2\x80\xa6CjThis enum represents the state of Arrow reader metrics \xe2\x80\xa6CkOptions that control how metadata is read for a parquet \xe2\x80\xa6ClA timestamp type allows us to create array builders that \xe2\x80\xa600CmArrow-specific configuration settings for writing parquet \xe2\x80\xa6AfThe continuation tokenCfThe metadata key used for storing the JSON encoded \xe2\x80\xa6DeBuilder for Parquet <code>ColumnIndex</code>, part of the Parquet \xe2\x80\xa6AbDecodes level dataAbDecodes value dataDiA generic encoder of <code>ColumnValues</code> to data and dictionary \xe2\x80\xa6AiCommandGetCatalogsvariantCnRepresents a request to retrieve the list of catalogs on a \xe2\x80\xa60CfAdditional context that may be needed for compression.0AoDefault batch size for a readerCkDefault value for <code>WriterProperties::created_by</code>BhIndicates that the dictionary is orderedBdBuilder for <code>DataRequest</code>EbDefines how a <code>FlightDataEncoder</code> encodes <code>DictionaryArray</code>sCkControls how dictionaries are handled in Arrow IPC messagesAmColumn reader for double typeAmColumn writer for double typeAkElapsed time type: seconds.00C`Number of days between 0001-01-01 and 1970-01-01CkImplement the specialized functions for extracting date \xe2\x80\xa6BoCrypto metadata for files with encrypted footerCaCrypto metadata for files with encrypted footer *ClAn array of [fixed length lists], similar to JSON arrays \xe2\x80\xa6000CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60AjThe schema for GetCatalogsCmA <code>GenericByteArray</code> for storing <code>[u8]</code>000BiBuilder for <code>GenericByteArray</code>000BiBuilder for <code>GenericListArray</code>000ClA <code>GenericByteArray</code> for storing <code>str</code>000CiA builder for a <code>CommandGetCatalogs</code> response.0CmChosen based on the number of decimal digits in 1 week in \xe2\x80\xa6BnBuffer builder for signed 16-bit integer type.000BnBuffer builder for signed 32-bit integer type.000BnBuffer builder for signed 64-bit integer type.000DjA newtype wrapper around <code>ArrayFormatter</code> to keep our usage \xe2\x80\xa6BiBuilder for <code>LargeBinaryArray</code>00DgA <code>GenericListViewArray</code> of variable size lists, storing \xe2\x80\xa6000BiBuilder for <code>LargeStringArray</code>00CdThe largest positive unscaled value that fits in \xe2\x80\xa600AnNumber of nanoseconds in a day000AlIndicates a non-empty stringClIndicates that the fields does not allow the use of null \xe2\x80\xa60CfIndicates that nullability of the fields cannot be \xe2\x80\xa60BlAn accumulator for primitive numeric values.DdA <code>VariantBuilderExt</code> that inserts a new field into a \xe2\x80\xa600ChBuilder for offset index, part of the Parquet PageIndex.BjCallback invoked on closing a column chunkCkPage level statistics for each column chunk of each row \xe2\x80\xa6Di<code>OffsetIndexMetaData</code> for each data page of each row group \xe2\x80\xa6AlA push based Parquet DecoderCjA predicate for filtering row groups, invoked with the \xe2\x80\xa6DgA builder for <code>ReadOptions</code>. For the predicates that are \xe2\x80\xa6CkState for decoding Arrow arrays from an IPC RecordBatch \xe2\x80\xa6CkOptions that control the behaviour used when creating a \xe2\x80\xa6000CmState machine that tracks the remaining high level chunks \xe2\x80\xa6CjHelper to create <code>CommandGetSqlInfo</code> responses.0CnRetrieves a UTF-8 string list with values of the supported \xe2\x80\xa60BcRetrieves the supported SQL UNIONs.0CmRetrieves a map where the key is the type to convert from \xe2\x80\xa6022BjBuilds struct arrays from component fieldsClColumn uses the order defined by its logical or physical \xe2\x80\xa6AoTensor of type Time32SecondTypeCkPrimitive (type_id=1): TIMESTAMP(isAdjustedToUTC=false, \xe2\x80\xa600DdA simple <code>MemoryPool</code> that reports the total memory usage0BnBuffer builder for usigned 8-bit integer type.000CjTrait for variant decimal types, enabling generic code \xe2\x80\xa600DhElement of a <code>VariantPath</code> that can be a field name or an \xe2\x80\xa600Bk1D Interval that may or may not wrap aroundClCompression accepted by the client for responses sent by \xe2\x80\xa6CmAdds any necessary crypto context to this page reader, if \xe2\x80\xa6CgAdds the given IntervalMonthDayNanoType to an arrow \xe2\x80\xa600000000000DfReturns <code>Some((chunk_offset, bit_offset))</code> for the next \xe2\x80\xa6BdAppends a null slot into the builder0FdAppends <code>n</code> <code>true</code>s into the builder to indicate that these <code>n</code> \xe2\x80\xa600CmAppends a variant value to this list by copying raw bytes \xe2\x80\xa6CiAppends a variant value to the builder by copying raw \xe2\x80\xa601EfDowncast this to a <code>BinaryViewArray</code> returning <code>None</code> if not \xe2\x80\xa600DgDowncast this to a <code>FixedSizeListArray</code> panicking if not \xe2\x80\xa600EaForce downcast of an <code>Array</code>, such as an <code>ArrayRef</code>, to \xe2\x80\xa600EfDowncast this to a <code>StringViewArray</code> returning <code>None</code> if not \xe2\x80\xa600DhConverts this variant to a <code>DateTime&lt;Utc&gt;</code> if possible.0DhReturns <code>true</code> if the next page can be assumed to contain \xe2\x80\xa6CbTypes for iterating over bitmasks in 64-bit chunks00DePerform bitwise <code>and</code> every value in an array with the \xe2\x80\xa60E`Perform bitwise <code>left &lt;&lt; right</code> operation on two arrays. If \xe2\x80\xa60DePerform bitwise <code>xor</code> every value in an array with the \xe2\x80\xa60ChApply a bitwise and_not to two inputs and return the \xe2\x80\xa600CnDetermine if we should allow truncating min/max values for \xe2\x80\xa6DhMake a <code>CancelFlightInfo</code> call to the server and return a \xe2\x80\xa6DiAttempts to encode an array into an <code>ArrayDictionary</code> with \xe2\x80\xa6BdChecks if the logical type is valid.BmReturns the range for the offset index if anyClComputes the number of rows in each page within a column \xe2\x80\xa6CnReturns definition level data. The implementation has side \xe2\x80\xa6ClReturn repetition level data. The side effect is similar \xe2\x80\xa6CmConverts Parquet BYTE_ARRAY type with converted type into \xe2\x80\xa6Elconverts a <code>i32</code> representing a <code>date32</code> to <code>NaiveDateTime</code>00Elconverts a <code>i64</code> representing a <code>date64</code> to <code>NaiveDateTime</code>00DhDecodes a binary view array from <code>rows</code> with the provided \xe2\x80\xa6DaDecodes a <code>FooterTail</code> from the provided 8-byte slice.CjDecodes a long string from the value section of a variant.DhDecodes a string view array from <code>rows</code> with the provided \xe2\x80\xa6AiDefinition level encodingChMacro to define (possibly generic) row builders with \xe2\x80\xa6BbReturn the encoded size for a typeBmDecoded dictionaries indexed by dictionary idBlOptional dictionaries for each schema field.DeReturns <code>true</code> if dictionary encoding is enabled for a \xe2\x80\xa6DiReturns <code>Some(true)</code> if dictionary encoding is enabled for \xe2\x80\xa6CkSets flag to enable/disable dictionary encoding for all \xe2\x80\xa6CnFor dictionary-encoded types, returns whether the ordering \xe2\x80\xa600CbKeeps track of dictionaries that have been written0CgReturns optional value of number of distinct values \xe2\x80\xa6CkImplementors may override to handle additional calls to \xe2\x80\xa6CmGet a FlightDataStream containing the data related to the \xe2\x80\xa6CiGiven one or more expressions evaluating to primitive \xe2\x80\xa60FaDowncast an <code>Array</code> to a <code>RunArray</code> based on its <code>DataType</code>, \xe2\x80\xa60DkCompares the values of two ArrayData starting at <code>lhs_start</code> \xe2\x80\xa6BmReturns a mutable reference to field builders0DgFills in <code>self.column_chunks</code> with the data fetched from \xe2\x80\xa6A`FixedShapeTensorCmFlushes bloom filter if enabled and returns it, otherwise \xe2\x80\xa6BkReturns metadata for any flushed row groups00CgFormats a decimal string given the precision and scale.0CfConvert from a bits value, unsetting any unknown bits.BlConvert a Python object to an arrow-rs type.BfGet boundary_order of this page index.DfReturns <code>ArrowColumnWriter</code>s for each column in a given \xe2\x80\xa6CgCreate a new row group writer and return its column \xe2\x80\xa6CnReturns index to the physical array for the given index to \xe2\x80\xa6CkPerforms a binary search to find the physical index for \xe2\x80\xa610ClExtract the primitive type from a Variant value-metadata \xe2\x80\xa6D`Convert the stored dictionaries to <code>Vec[RecordBatch]</code>AmRequest XDBC SQL information.CeCreates group type builder with provided column name.CnTrue if the decoder is currently part way through decoding \xe2\x80\xa6BmHydrates a dictionary to its underlying type.AbIn-progress arraysBbThe interval precision of the type0BnReturns whether this page is a dictionary pageCkTrue if this instance is fully validated for panic-free \xe2\x80\xa600CiTrue if this variant instance has already been validated.0111CkIf true, max_value is the actual maximum value for a columnCkIf true, min_value is the actual minimum value for a columnBhReturns key_value_metadata of this file.CgReturns <code>key_value_metadata</code> KeyValue pairs.AmOptional key/value metadata *0DhSort elements lexicographically from a list of <code>ArrayRef</code> \xe2\x80\xa60CcHelper function to sort all the columns in an array1CkReturns the total number of logical null values in this \xe2\x80\xa600FkMaps <code>nulls</code> to <code>BitChunk&#39;s</code> and then to <code>BitChunkIterator&#39;s</code>, \xe2\x80\xa6BnReturns maximum number of rows in a row group.BoThe length of arrays to write to each row groupBkSets maximum number of rows in a row group.EcCreate a new <code>EncodingMask</code> from a collection of <code>Encoding</code>s.ClDescribes arrays which have no data of their own but may \xe2\x80\xa60ClThe number of values from the current data page that has \xe2\x80\xa600BmReturns the range for the offset index if anyDkSimilar to <code>write_u64_bytes</code>, but this method ORs the offset \xe2\x80\xa6CnOptional page start offsets for each requested range. This \xe2\x80\xa6DhIf <code>Some</code>, the start offsets of each page for each column \xe2\x80\xa6CjImplementation of Geometry and Geography Encoding from \xe2\x80\xa6CnParses column index from the provided bytes and adds it to \xe2\x80\xa6CmParses a fixed offset of the form \xe2\x80\x9c+09:00\xe2\x80\x9d, \xe2\x80\x9c-09\xe2\x80\x9d \xe2\x80\xa6DiParses message type as string into a Parquet <code>Type</code> which, \xe2\x80\xa6Ddreturn and consume if the next token is <code>Token::Nullable</code>ChPartition indices of an Arrow array into two categories:00CmRead the footer length from the last 10 bytes of an Arrow \xe2\x80\xa6AiRepetition level encodingCiWhether the next page is expected to be a dictionary pageBlResize the memory reservation of this bufferClReturns the serialized representation of the metadata of \xe2\x80\xa6BjSet the boundary order of the column indexBnSets the encodings mask for this column chunk.ChSets the file decryptor needed to decrypt this metadata.CaSets geospatial statistics for this column chunk.DiSets the <code>WriterVersion</code> written into the parquet metadata \xe2\x80\xa6CeReturn the internal representation as a mutable sliceCbReturns which statistics are written for a column.ChReturns optional statistics level requested for this \xe2\x80\xa6CgSets flag to enable/disable statistics for all columns.CkAccepts a string and parses it relative to the provided \xe2\x80\xa60DgReturns <code>Ok(())</code> iff the given data type is supported by \xe2\x80\xa6BkGet the time unit as a multiple of a secondEaFallible conversion of <code>NaiveDateTime</code> to <code>i64</code> nanosecondsDjTruncates a binary statistic to at most <code>truncation_length</code> \xe2\x80\xa60DfTries to append a variant to the provided <code>ParentState</code> \xe2\x80\xa60DgReturns an instance of the given <code>ExtensionType</code> of this \xe2\x80\xa60CkDeprecated, use <code>StreamReader::try_new</code> instead.AlWhether the type is unsigned0CiUpdates histogram values using provided repetition levelsCbReturns the current null buffer as a mutable slice000BiProvide any previously read column chunksDhIf set to <code>true</code> any formatting errors will be written to \xe2\x80\xa60ClProvide a hint as to the number of bytes needed to fully \xe2\x80\xa6CmSets the <strong>reader schema</strong> used during decoding.BmSets the reader schema for schema resolution.DeProvide a <code>RowSelection</code> to filter out rows, and avoid \xe2\x80\xa6CaSet the number of records in the result, if knownDfWrite a column <code>ColumnIndex</code> in Thrift format, possibly \xe2\x80\xa6CkWrite a record batch to the writer, writing the message \xe2\x80\xa6ChShort-cut method used to encode structs that have no \xe2\x80\xa6DfWrite a column <code>OffsetIndex</code> in Thrift format, possibly \xe2\x80\xa6CnUsed to write struct fields (which may be primitive or IDL \xe2\x80\xa6DaWrites from <code>self</code> into <code>row_group_writer</code>.0DeThe metadata necessary to construct a <code>ArrowReaderBuilder</code>CgEncodes <code>RecordBatch</code> to a parquet row groupCkAn iterator of u32 whose index in a provided bitmask is \xe2\x80\xa6000DeWhere in the file <code>ArrowWriter</code> should write Bloom filtersDcImplements <code>PageIterator</code> for a single column chunk, \xe2\x80\xa6AlMetadata for a column chunk.CoParsed <code>ColumnIndex</code> information for a Parquet file.AjCommandGetDbSchemasvariantCiRepresents a request to retrieve the list of database \xe2\x80\xa60BagRPC/HTTP compression algorithms.C`The maximum scale for DataType::Decimal32 values000C`The maximum scale for DataType::Decimal64 values000ClDefault value for <code>WriterProperties::compression</code>CiDelta encoding for integers. This can be used for int \xe2\x80\xa6CcDelta encoding for integers, either INT32 or INT64.BdBuffer builder for 32-bit date type.000BdBuffer builder for 64-bit date type.000CjType of an index for a dictionary-encoded field in the \xe2\x80\xa6CmA <code>PrimitiveArray</code> of elapsed durations in seconds000AkThe fallback encoder in useAiRepresentation of SchemasBhRepresentation of field types in schema.CmDefines the strategy for generating the per-record prefix \xe2\x80\xa6CiEncodes a value of a particular fixed width type into \xe2\x80\xa6Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600CmA flight service is an endpoint for retrieving or storing \xe2\x80\xa6000ClRetrieves a UTF-8 string with the name of the Flight SQL \xe2\x80\xa60CkReads data for a given column chunk, using the provided \xe2\x80\xa6CdGeneric column writer for a primitive Parquet columnCkA generic stateful column reader that delimits semantic \xe2\x80\xa6CjA builder for a <code>CommandGetDbSchemas</code> response.0CiA <code>DictionaryArray</code> indexed by <code>i8</code>000Cl\xe2\x80\x9cCalendar\xe2\x80\x9d interval type: days and milliseconds. See \xe2\x80\xa600B`Config to parse interval strings0DhA JSON writer which serializes <code>RecordBatch</code>es to newline \xe2\x80\xa6CnThe maximum number of bytes that can be stored inline in a \xe2\x80\xa60AoNumber of microseconds in a day000AoNumber of milliseconds in a day000DjA data source that can be used with <code>ParquetMetaDataReader</code> \xe2\x80\xa60CgIndicates that the fields allow the use of null values.0BdBuilder of <code>OffsetBuffer</code>00000De<code>OffsetIndex</code> information for a column chunk. Contains \xe2\x80\xa6B`Error when the offset overflows.00CnInternal state machine for the <code>ParquetPushDecoder</code>DeReads Parquet files in object storage using <code>ObjectStore</code>.0Ec<code>ParquetObjectWriter</code> for writing to parquet to <code>ObjectStore</code>0CaDerive flat, simple RecordReader implementations.CaDerive flat, simple RecordWriter implementations.D`Builder for <code>RunArray</code> of <code>PrimitiveArray</code>000CmUseful for testing. The range of values are not likely to \xe2\x80\xa6BdReference counted reader properties.CmGeneric implementation of RecordBatchReader that wraps an \xe2\x80\xa6000ClReference counted pointer for <code>RowGroupMetaData</code>.DfThe metadata key used for storing the JSON encoded <code>Schema</code>ChThe Avro single\xe2\x80\x91object encoding \xe2\x80\x9cmagic\xe2\x80\x9d bytes (\xe2\x80\xa6BhBlock-based algorithm type annotation. *DcHandles creating the dense <code>UnionArray</code> described by \xe2\x80\xa6CnRetrieves a UTF-8 string list with values of the supported \xe2\x80\xa60CmRetrieves the supported SQL grammar level as per the ODBC \xe2\x80\xa60BjRetrieves the supported GROUP BY commands;0BkExtracts Parquet statistics as Arrow arraysCeThe action to take if the target table does not exist0C`A 32-bit elaspsed time in seconds array builder.000C`Timestamp second type with an optional timezone.00BoBuffer builder for usigned 16-bit integer type.000BoBuffer builder for usigned 32-bit integer type.000BoBuffer builder for usigned 64-bit integer type.000ChThe extension type for <code>VariableShapeTensor</code>.000BgA builder for <code>VariantArray</code>00BoHeader structure for <code>VariantObject</code>BeNeeds data to evaluate current filterBdReference counted writer properties.CkDetailed subtype information for XDBC_TYPE_DATETIME and \xe2\x80\xa60EgAccumulate a nullable values. If <code>valid</code> is false the <code>value</code> \xe2\x80\xa6BhAdds a column metadata to this row groupCeAdd the given number of months to the given datetime.CkAdds the given IntervalYearMonthType to an arrow Date64Type0CkAppends <code>n</code> <code>null</code>s into the builder.0CgAppend <code>range</code> bits from <code>to_set</code>00DhCalls <code>SerializedRowGroupWriter::append_column</code> with this \xe2\x80\xa6CeRelease a const char* exported by result_to_c_error()E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600000DhConverts this variant to a <code>DateTime&lt;Utc&gt;</code> if possible.0E`Perform bitwise <code>left &gt;&gt; right</code> operation on two arrays. If \xe2\x80\xa60BhReturns the offset for the bloom filter.CnSize of Bloom filter data including the serialized header, \xe2\x80\xa61CjByte offset from beginning of file to Bloom filter data. *ClBuild run ends bytes and values range directly for batch \xe2\x80\xa6DhWhether <code>sort_to_indices</code> can sort an array of given data \xe2\x80\xa6C`Canonicalize the names of map fields in a schemaDjHelper function to cast from one <code>ByteArrayType</code> to another \xe2\x80\xa6CjConvert Array into a PrimitiveArray of type, and apply \xe2\x80\xa6CmHelper function that takes a primitive array and casts to \xe2\x80\xa6BoReturns the offset for the column index length.BoSize of ColumnChunk\xe2\x80\x99s ColumnIndex, in bytes *BhReturns the offset for the column index.BlFile offset of ColumnChunk\xe2\x80\x99s ColumnIndex *Cfpolicy for loading ColumnIndex (part of the PageIndex)0ClReturn a mask identifying the values that are referenced \xe2\x80\xa6CmReturns the elementwise concatenation of <code>Array</code>s.0ClReturns currently stored buffer data. The side effect is \xe2\x80\xa6DfCopy the i\xe2\x80\x91th view into <code>data_buf</code> if it refers to an \xe2\x80\xa6CjCreates an random (but fixed-seeded) binary array of a \xe2\x80\xa6CkCreate a random ArrayRef from a DataType with a length, \xe2\x80\xa6BiCreate a random RecordBatch from a schemaCiCreates a random (but fixed-seeded) string array of a \xe2\x80\xa6BmParse a data type from a JSON representation.0CkDecodes a short string from the value section of a variant.AkLength of definition levelsDhDeterimines how <code>DictionaryArray</code>s are encoded for transport.0CcHow to handle updating dictionaries in IPC messagesCmGet a FlightDataStream containing the data related to the \xe2\x80\xa6ClEncodes the Arrow schema into the IPC format, and base64 \xe2\x80\xa6AlEncrypt a column page headerDcReturns the extension type name of this <code>Field</code>, if set.0DfReturns a vector of immutable references to all <code>Field</code> \xe2\x80\xa6DkReturns a vector containing all (potentially nested) <code>Field</code> \xe2\x80\xa61CjReturns a filtered RecordBatch where the corresponding \xe2\x80\xa6DhReturns a filtered <code>RecordBatch</code> containing only the rows \xe2\x80\xa6110Cd<code>filter</code> implementation for sparse unionsCfWraps an external error in an <code>ArrowError</code>.00DiCreates a <code>GenericListArray</code> from an iterator of primitive \xe2\x80\xa6DkCreates a <code>FixedSizeListArray</code> from an iterator of primitive \xe2\x80\xa601CiReturns the index of the root column for a field positionDbReturns column root <code>Type</code> pointer for a leaf position.CmRetrieves a description of the foreign key columns in the \xe2\x80\xa6BcGet midpoint offset for a row groupBoReturns true if there are any completed batches0CnIn V4, null types have no validity bitmap In V5 and later, \xe2\x80\xa6BoFallback implementation of interleave using \xe2\x80\xa6CaCheck for potential intersection with an intervalBhWhether the footer metadata is encryptedCgReturns true if this type is unsigned integer: (UInt*).0ClHelper to simplify a nested field definition to its leaf \xe2\x80\xa6BkAdd custom actions to list_actions() resultCkLoads the 32-bit Schema Registry fingerprint (Confluent \xe2\x80\xa6CmDefine an adapter iterator for extracting statistics from \xe2\x80\xa6ChPassed through to construct <code>VerifierOptions</code>CkExtracts the max statistics from an iterator of parquet \xe2\x80\xa6E`Helper to compute min/max of <code>GenericByteViewArray&lt;T&gt;</code>. The \xe2\x80\xa6CkExtracts the min statistics from an iterator of parquet \xe2\x80\xa6DfCreate a <code>DataType::FixedSizeList</code> with elements of the \xe2\x80\xa6DiCreate a new <code>Field</code> with <code>DataType::FixedSizeList</code>01DgCreates a new <code>GenericByteDictionaryBuilder</code> from a keys \xe2\x80\xa60CbCreates a new serialized page with custom options.Cjtest if a character is NOT part of an interval numeric \xe2\x80\xa6AmA builder for the null bitmapCcThe total number of values stored in the data page.00BoReturns the offset for the offset index length.BoSize of ColumnChunk\xe2\x80\x99s OffsetIndex, in bytes *BhReturns the offset for the offset index.BlFile offset of ColumnChunk\xe2\x80\x99s OffsetIndex *Cfpolicy for loading OffsetIndex (part of the PageIndex)0DkReturns the offset for the page encoding stats, or <code>None</code> if \xe2\x80\xa6DlParses e.g. <code>&quot;foo bar&quot;</code>, <code>&#39;foo bar&#39;</code>CkPrints file metadata <code>FileMetaData</code> information.EgRead up to <code>num_records</code> records from <code>row_group_reader</code> into \xe2\x80\xa60DjReads per-column <code>OffsetIndexMetaData</code> for all columns of a \xe2\x80\xa6AeCurrent active readerAkLength of repetition levelsBmMutable access to the metadata of the schema.0CdAdds a Schema to a flatbuffer and returns the offsetDhSerialize a schema to an in progress <code>FlatBufferBuilder</code>, \xe2\x80\xa6BdSets encoding for a specific column.BhSets column metadata for this row group.BbSets the sorting order for columnsCfSets sorting order of rows in the row group if any \xe2\x80\xa6BlSets total size in bytes for this row group.CnShould the reader strip any user defined metadata from the \xe2\x80\xa6BoMacro to generate methods to create Statistics.CkSubstract the given number of months to the given datetime.CbReturns an iterator that returns the values of \xe2\x80\xa6000000000DeSimilar to timestamp_s_to_datetime but only compute <code>date</code>00DeSimilar to timestamp_s_to_datetime but only compute <code>time</code>00CcTimestamp format for timestamp with timezone arraysCmGet the CSV file\xe2\x80\x99s timestamp tz format if set, defaults \xe2\x80\xa6CnThe timestamp format for timestamp (with timezone) arrays, \xe2\x80\xa6CiOptional timestamp format for timestamp with timezone \xe2\x80\xa60CnGet the JSON file\xe2\x80\x99s timestamp tz format if set, defaults \xe2\x80\xa61CmTruncate the min and max values that will be written to a \xe2\x80\xa6CgThis intentional inline(never) attribute helps LLVM \xe2\x80\xa6CjAttempts to (asynchronously) parse the footer metadata \xe2\x80\xa6DbCreate a new <code>StructArray</code> from the provided parts, \xe2\x80\xa60DaUpdates the <code>dictionaries_by_id</code> with the provided \xe2\x80\xa6DdValidates the layout of <code>child_data</code> ArrayData structuresC`Creates a new dense array builder with capacity.0CeEnable or disable reading the Parquet ColumnIndex \xe2\x80\xa6DbSets <code>ConvertedType</code> for this field and returns itself.0CiSet whether to keep keys with null values, or to omit \xe2\x80\xa6CiSet whether to include nulls in the output or elide them.ClUpdates the metadata of this <code>Field</code> with the \xe2\x80\xa60DgAdds <code>FileDecryptor</code> to this metadata instance to enable \xe2\x80\xa6AmSet the file encryptor to useCjSet the file encryptor to use for encrypting row group \xe2\x80\xa6CeEnable or disable reading the Parquet OffsetIndex \xe2\x80\xa6BmSet the encryptor to use to encrypt page dataC`Explicitly specify the Parquet schema to be usedBmWhether to allow truncated rows when parsing.0CmSerialize all the bloom filters of the given row group to \xe2\x80\xa6DiWrite <code>FileMetaData</code> in Thrift format, possibly encrypting \xe2\x80\xa6CgWrite little-endian integer to buffer at a specific \xe2\x80\xa6CiSign-extend (or validate/truncate) big-endian integer \xe2\x80\xa6D`A single column chunk produced by <code>ArrowColumnWriter</code>BlConverter for Arrow schema to Parquet schemaBcThe algorithm used in Bloom filter.BfBuilder for <code>BooleanBuffer</code>0000ClA trait for managing state specific to different builder \xe2\x80\xa600ChColumn index for byte arrays (fixed length and variable)BgColumnCryptoMetadata for a column chunkCcProvides iterators over min and max values of a \xe2\x80\xa6AkCommandGetTableTypesvariantClRepresents a request to retrieve the list of table types \xe2\x80\xa60CaThe maximum scale for DataType::Decimal128 values000CaThe maximum scale for DataType::Decimal256 values000CnDefault values for <code>WriterProperties::coerce_types</code>CnEncoding for byte arrays to separate the length values and \xe2\x80\xa6CjDescribes how two dictionary arrays compare to each other.ClThe dictionary page must be placed at the first position \xe2\x80\xa6BaTensor of type DurationSecondTypeDdABI-compatible struct for <code>ArrayStream</code> from C Stream \xe2\x80\xa600BbFixed length byte array type indexCdSupported fingerprint algorithms for Avro schema \xe2\x80\xa6BdAn array of fixed size binary arrays000BkBuilder for <code>FixedSizeListArray</code>000AfFixedSizeList encoder.BnBuffer builder for 16-bit floating point type.000BnBuffer builder for 32-bit floating point type.000BnBuffer builder for 64-bit floating point type.000AnThe schema for GetXdbcTypeInfoCaArray builder for <code>GenericBinaryArray</code>000CjVariable-size Binary View Layout: An array of variable \xe2\x80\xa6000Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600CjAn array of variable length lists, specifically in the \xe2\x80\xa6000CaArray builder for <code>GenericStringArray</code>000CkStatistics specific to Geometry and Geography logical typesCkA builder for a <code>CommandGetTableTypes</code> response.CjA <code>DictionaryArray</code> indexed by <code>i16</code>000CjA <code>DictionaryArray</code> indexed by <code>i32</code>000CjA <code>DictionaryArray</code> indexed by <code>i64</code>000DiA <code>PrimitiveArray</code> of \xe2\x80\x9ccalendar\xe2\x80\x9d intervals in days and \xe2\x80\xa6000BfValue of an IntervalMonthDayNano array00DjAvro <code>duration</code> logical type (Arrow Interval(MonthDayNano)) \xe2\x80\xa611CkError indicating that an unexpected or bad argument was \xe2\x80\xa600BkBuilder for <code>LargeListViewArray</code>00CmSkip the selection mask computation of the fields without \xe2\x80\xa6DdContext required to create a <code>PageEncryptor</code> for a columnB`Column index for primitive typesCnExtension trait for Arrow primitive types that can extract \xe2\x80\xa6CnA builder for primitive types. All attributes are optional \xe2\x80\xa6CaBuilder for <code>RecordEncoder</code> write planClThis is the inner state machine for reading a single row \xe2\x80\xa6D`A serialized implementation for Parquet <code>FileReader</code>.AhParquet file writer API.D`A serialized implementation for Parquet <code>PageReader</code>.DkA serialized implementation for Parquet <code>PageWriter</code>. Writes \xe2\x80\xa6CbCompressed Sparse format, that is matrix-specific.CdEXPERIMENTAL: Data structures for sparse tensors \xe2\x80\xa6CbCompressed Sparse Fiber (CSF) sparse tensor index.CnRetrieves a UTF-8 string list with values of the supported \xe2\x80\xa60CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa60000000DdWrites <code>crate::file::metadata</code> structures to a thrift \xe2\x80\xa6AkTicketStatementQueryvariantCkRepresents a ticket resulting from GetFlightInfo with a \xe2\x80\xa60Ch64-bit time type: the elapsed time since midnight in \xe2\x80\xa600CnExtension trait for Arrow timestamp types that can extract \xe2\x80\xa6EdA <code>PrimitiveArray</code> of seconds since UNIX epoch stored as <code>i64</code>000CnA <code>DictionaryArray</code> typed on its child values array000CiA <code>DictionaryArray</code> indexed by <code>u8</code>000DiThe type of <code>VariantBasicType::Primitive</code>, for a primitive \xe2\x80\xa6CmAppends a variant to the buffer by copying raw bytes when \xe2\x80\xa60DiDowncast this to a <code>FixedSizeBinaryArray</code> panicking if not \xe2\x80\xa600E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600CeSets whether bloom filter is enabled for all columns.AnWhether to truncate the bufferBgAuxiliary method to create a new BufferAmCast Boolean types to numericAmCast numeric types to BooleanCnCompressed (and potentially encrypted) page size in bytes, \xe2\x80\xa6BnSize of the page, including header. Sum of \xe2\x80\xa610BnReturns the elementwise concatenation of a \xe2\x80\xa60CmCreates a random (but fixed-seeded) array of a given size \xe2\x80\xa6DfReturns a <code>UInt64Array</code> with row counts for each data page.AmReturns data page size limit.CfSets best effort maximum size of a data page in bytes.CaDecompresses the input into a <code>Buffer</code>ClDeserialize the metadata of this extension type from the \xe2\x80\xa6Cndo_exchange Implementors may override to handle additional \xe2\x80\xa6CmGet a FlightDataStream containing the data related to the \xe2\x80\xa60CiEncode a blocked range of items with Avro array block \xe2\x80\xa6C`Apply column encryption to column chunk metadataCkEncryption algorithm. This field is only used for files \xe2\x80\xa6CmEncryption algorithm. This field is set only in encrypted \xe2\x80\xa61ChReturns a vector of tuples containing each field\xe2\x80\x99s \xe2\x80\xa6EbFilter any supported <code>RunArray</code> based on a <code>FilterPredicate</code>DfCreates new statistics for <code>FixedLenByteArray</code> column type.fSafetyDhCreate a new <code>OffsetBuffer</code> where each slice has the same \xe2\x80\xa60CnReturns the physical indices of the input logical indices. \xe2\x80\xa60Ef<code>val</code> - string<code>start</code> - the start char index of the substring\xe2\x80\xa6BkTry to get a date value at the given index.DiTry getting a <code>timestamp</code> as microseconds value encoded as \xe2\x80\xa6101DiTry getting a <code>timestamp</code> as milliseconds value encoded as \xe2\x80\xa620DhEnsures that <code>child_data[i]</code> has the expected type, calls \xe2\x80\xa6DgThis method checks for the provided <code>magic</code> bytes at the \xe2\x80\xa6ClTrue if the end of the current data page denotes the end \xe2\x80\xa600DaHydrates any dictionaries arrays in <code>batch</code> to its \xe2\x80\xa6CjImplements the complete variant decimal type: methods, \xe2\x80\xa6BdWhether the time is adjusted to UTC.BiWhether the timestamp is adjusted to UTC.ClMake an encoder that overrides the default encoder for a \xe2\x80\xa60ChConverts a byte buffer to offset values based on the \xe2\x80\xa6CfTarget maximum size of flight data (see details on \xe2\x80\xa6CmThe maximum approximate target message size in bytes (see \xe2\x80\xa6ChPassed through to construct <code>VerifierOptions</code>ClThis is a maximum as the null count is not always known, \xe2\x80\xa6DiPerform <code>left * right</code> operation on two decimal arrays. If \xe2\x80\xa6DfCreate a new <code>FlightRecordBatchStream</code> from a stream of \xe2\x80\xa6CeRemoves and returns the next completed batch, if any.0DiReturns the day of week; Monday is encoded as <code>0</code>, Tuesday \xe2\x80\xa6DkReturns the day of week; Sunday is encoded as <code>0</code>, Monday as \xe2\x80\xa6BjConvert Statistics into Thrift definition.ClReturn the index of the column in the Parquet schema, if \xe2\x80\xa6Cethe index of the matched column in the Parquet schemaCkConversion between JSON and the Variant Binary Encoding \xe2\x80\xa6CkPrepares a push decoder and runs it to decode the metadata.CiReturns the byte range needed to read the offset/page \xe2\x80\xa6DjReads per-column <code>ColumnIndexMetaData</code> for all columns of a \xe2\x80\xa6CmRead the next page as a dictionary page. If the next page \xe2\x80\xa6DgAdding to this mutable buffer <code>slice_to_repeat</code> repeated \xe2\x80\xa60CmMacro to generate type-safe get_xxx methods for reference \xe2\x80\xa6DeReturns a <code>UInt64Array</code> with row counts for each row groupEhAttempts to cast a <code>RunArray</code> with index type K into <code>to_type</code> \xe2\x80\xa6CgSets the default target bloom filter false positive \xe2\x80\xa6ClSets the false positive probability for bloom filter for \xe2\x80\xa6CjSets default number of distinct values (ndv) for bloom \xe2\x80\xa6CiSets the number of distinct (unique) values for bloom \xe2\x80\xa6AoSets data page offset in bytes.BoSets write batch size (defaults to 1024 via \xe2\x80\xa6CiReturns true if there is enough data for a data page, \xe2\x80\xa6CjReturns true if we need to fall back to non-dictionary \xe2\x80\xa6CiSubtracts the given IntervalYearMonthType to an arrow \xe2\x80\xa6000ChSubtract the given IntervalYearMonthType to an arrow \xe2\x80\xa60111100DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6Dd<code>take</code> implementation for <code>FixedSizeListArray</code>BgConversion methods for dates and times.00CnReverts the field names to a previous size, discarding any \xe2\x80\xa600ClCreate an array from an iterable argument of sparse byte \xe2\x80\xa60DhCreates a new <code>FixedSizeBinaryDictionaryBuilder</code> from the \xe2\x80\xa6DkCreates a new <code>PrimitiveDictionaryBuilder</code> from the existing \xe2\x80\xa6DdCreates a new <code>GenericByteDictionaryBuilder</code> from the \xe2\x80\xa6210DfCreates a <code>RecordBatch</code> from a schema and columns, with \xe2\x80\xa60EhCreates a new <code>RecordDecoder</code> from the provided <code>AvroDataType</code> \xe2\x80\xa6BoTry to create a new writer with IpcWriteOptionsCmTry to create a new writer with <code>IpcWriteOptions</code>.DbCreate a new <code>ParquetRecordBatchReaderBuilder</code> with \xe2\x80\xa60DfTry to create a new Arrow writer with <code>ArrowWriterOptions</code>.BoTry to create a new Async Arrow Writer with \xe2\x80\xa6BnConfigures compression when writing IPC files.DjCombine two lists of <code>RowSelector</code> return the union of them \xe2\x80\xa6D`Return one unsigned little-endian value from <code>bytes</code>.EgValidates the combination of <code>views</code> and <code>buffers</code> is a valid \xe2\x80\xa60DkCalls the <code>validate(item_index, range)</code> function for each of \xe2\x80\xa611DfBuilder to keep track of offsets (<code>None</code> for sparse unions)0CgSome types such as Utf8View are represented using a \xe2\x80\xa6CbMacro to generate the match statement for each \xe2\x80\xa6BbCalled by <code>visit_list</code>.CbCreates a new sparse array builder  with capacity.0DcOverrides the format used for <code>DataType::Date64</code> columns0BdSet the CSV file\xe2\x80\x99s datetime formatBeSet the JSON file\xe2\x80\x99s datetime format0DdSet the is ordered field for this <code>Field</code>, if it is a \xe2\x80\xa60BnOverrides the format used for duration columns0ClSet an encoder factory to use when creating encoders for \xe2\x80\xa6CgSet an optional hook for customizing encoding behavior.BhSpecify expiration time for this requestBgSpecify expiration time for this streamChPerforms a full validation of this variant array and \xe2\x80\xa6CnPerforms a full validation of this metadata dictionary and \xe2\x80\xa6CbPerforms a full validation of this variant object.CkRecursively validates this variant value, ensuring that \xe2\x80\xa60321CjSpecifies if validation should be skipped when reading \xe2\x80\xa6000CnSet the hint to use for generation of potential wraparound \xe2\x80\xa6CmSerialize all the column indexes to the <code>self.buf</code>CjSerialize all the offset indexes to <code>self.buf</code>,CcWrite the union branch index for an optional field.CiSchema metadata key used to store serialized Arrow schemaCnMetadata key used to store the documentation for a type in \xe2\x80\xa6CgControls the bloom filter to be computed by the writer.CiProvided for forward compatibility in case we need to \xe2\x80\xa6BaColumn reader for byte array typeBaColumn writer for byte array typeAlCommandGetPrimaryKeysvariantCjRepresents a request to retrieve the primary keys of a \xe2\x80\xa60AlCommandStatementQueryvariantCiRepresents a SQL query. Used in the command member of \xe2\x80\xa60CmThe data type constructor of list array. The input is the \xe2\x80\xa6CmThe data type constructor of listview array. The input is \xe2\x80\xa610CbThe default scale for DataType::Decimal128 and \xe2\x80\xa6000CcDecoder for <code>Encoding::DELTA_BYTE_ARRAY</code>BiAn elapsed time in seconds array builder.000DdStream that stores the gRPC trailers into <code>LazyTrailers</code>.CnWrapper around a fallible stream (one that returns errors) \xe2\x80\xa60BlParquet physical type: FixedLenByteArrayTypeCkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60AkThe schema for GetDbSchemasDbBuilder for <code>RunArray</code> of <code>GenericByteArray</code>000BbTensor of type IntervalDayTimeTypeCl32-bit \xe2\x80\x9ccalendar\xe2\x80\x9d interval type: the number of whole \xe2\x80\xa600DbBuilder for <code>RunArray</code> of <code>LargeBinaryArray</code>000DbBuilder for <code>RunArray</code> of <code>LargeStringArray</code>000DkMaps an iterator of <code>ParquetStatistics</code> into an iterator of `\xe2\x80\xa600000CkThe preferred vector size in bytes for the target platform.DfReads <code>ParquetMetaData</code> from a byte stream, with either \xe2\x80\xa60CdWrites <code>ParquetMetaData</code> to a byte stream0DhBuilder for <code>ParquetRecordBatchReader</code> for a single row groupCnRetrieves a int64 value representing the maximum number of \xe2\x80\xa60CmRetrieves a boolean value indicating whether updates made \xe2\x80\xa60111111C`Retrieves a boolean value indicating whether \xe2\x80\xa60CiRetrieves the UTF-8 string that can be used to escape \xe2\x80\xa60Ch32-bit time type: the elapsed time since midnight in \xe2\x80\xa600Ch64-bit time type: the elapsed time since midnight in \xe2\x80\xa600DiA <code>PrimitiveArray</code> of nanoseconds since midnight stored as \xe2\x80\xa6000CfA specialized <code>ArrayDecoder</code> for timestampsBbTensor of type TimestampSecondTypeCjA <code>DictionaryArray</code> indexed by <code>u16</code>000CjA <code>DictionaryArray</code> indexed by <code>u32</code>000CjA <code>DictionaryArray</code> indexed by <code>u64</code>000CaHeader structure for <code>VariantMetadata</code>CjA thin wrapper whose only job is to extract a specific \xe2\x80\xa6EjAppend a view of the given <code>block</code>, <code>offset</code> and <code>length</code>0fSafetyCgGet the value at the given row in an array as a String.0EfDowncasts this to a <code>AnyDictionaryArray</code> returning <code>None</code> if \xe2\x80\xa600E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600BkHelper function to implement binary kernelsDjApply a bitwise operation <code>op</code> to two inputs and return the \xe2\x80\xa600AnReturns bloom filter position.BaSets the position of bloom filterB`Assembles column chunk metadata.AjCan contain a null bitmask00BoCast a decimal array to a floating point array.BnReturns the elementwise concatenation of a \xe2\x80\xa60DkReturns the elementwise concatenation of a <code>GenericByteArray</code>\xe2\x80\xa60CjReturns currently stored null bitmap data for nullable \xe2\x80\xa6AnConvert array elements to JSONCnReturns the number of 1-bits in this buffer, starting from \xe2\x80\xa60CmCreate column writers for a new row group, with the given \xe2\x80\xa6BgGenerate random offsets for list arraysDgReturns a <code>UInt64Array</code> with null counts for each data page.CmGet a FlightDataStream containing the data related to the \xe2\x80\xa6CaImplementors may override to handle do_put errorsAhExecute a substrait planCgReturns the estimated total memory usage of the encoderCkReturn the total in memory size of this bloom filter in \xe2\x80\xa6ClExports an array to raw pointers of the C Data Interface \xe2\x80\xa6000DmExtract <code>LazyTrailers</code> from <code>Streaming</code> tonic response.EfReturns the <code>FingerprintAlgorithm</code> used by the <code>SchemaStore</code> \xe2\x80\xa6CgThe hashing algorithm used for generating fingerprints.DkConcatenates any buffered batches into a single <code>RecordBatch</code>\xe2\x80\xa60CaLow Level tonic <code>FlightServiceClient</code>.BaGenerated client implementations.E`Low Level tonic <code>FlightServiceServer</code> and <code>FlightService</code>.BaGenerated server implementations.DeCreates a <code>PrimitiveArray</code> from an iterator of trusted \xe2\x80\xa6DgCreates a <code>BooleanArray</code> from an iterator of trusted length.EfCreates a <code>Buffer</code> from an <code>Iterator</code> with a trusted (upper) \xe2\x80\xa6EeCreates a <code>MutableBuffer</code> from an <code>Iterator</code> with a trusted \xe2\x80\xa62310CkOptional statistics specific for Geometry and Geography \xe2\x80\xa6ChReturns the total number of bytes of memory occupied \xe2\x80\xa6000000CaReturns a mutable reference to the underlying \xe2\x80\xa6DkReturns a reference to the underlying <code>ColumnWriterImpl</code> for \xe2\x80\xa6ClGiven a dictionary batch IPC message/body along with the \xe2\x80\xa6CkReturns the total number of the bytes of memory occupied by0CkGet the last error from <code>ArrowArrayStreamReader</code>CcIncrements the count of records read from the cacheCjIncrements the count of records read from the inner readerFbReturns <code>true</code> if statistics have old <code>min</code> and <code>max</code> fields set.DjReturns <code>true</code> if statistics were created using old min/max \xe2\x80\xa6FeIf <code>true</code> populate the deprecated <code>min</code> and <code>max</code> fields instead \xe2\x80\xa60CmMacro to generate type-safe get_xxx methods for reference \xe2\x80\xa6CjLoads the 64-bit Schema Registry fingerprint (Apicurio \xe2\x80\xa6CmReturns the maximum value in the fixed size binary array, \xe2\x80\xa600CmReturns the minimum value in the fixed size binary array, \xe2\x80\xa600CkCreate a new Sbbf with given number of bytes, the exact \xe2\x80\xa6CnReturns <code>true</code> if offset index writing is disabled.DjParses the FixedSizeList type (called after <code>FixedSizeList</code> \xe2\x80\xa6DjParses the LargeListView type (called after <code>LargeListView</code> \xe2\x80\xa6CmParses list field name. Returns default field name if not \xe2\x80\xa6CnRemove null values by do a bitmask AND operation with null \xe2\x80\xa600ClCreate a visual representation of <code>RecordBatch</code>es0CgCreate a visual representation of <code>ArrayRef</code>0BfProcess extends using batch operationsBoReads the struct from the input Thrift protocolDhWrite a <code>RecordBatch</code> into two sets of bytes, one for the \xe2\x80\xa6DiMake a <code>RenewFlightEndpoint</code> call to the server and return \xe2\x80\xa6DhVerifies that a buffer of bytes contains a <code>SparseTensor</code> \xe2\x80\xa6FgReturns the nearest multiple of <code>factor</code> that is <code>&gt;=</code> than <code>num</code>\xe2\x80\xa600ChExtract the null counts from row group statistics in \xe2\x80\xa6CiSerializes page header into Thrift. Returns number of \xe2\x80\xa6BiSets optional index page offset in bytes.BcEnable/disable reading bloom filterCmThe version of the variant specification that the variant \xe2\x80\xa6CfSubtract the given IntervalDayTimeType to an arrow \xe2\x80\xa60Cftotal byte size of all compressed, and potentially \xe2\x80\xa6CfTotal byte size of all compressed (and potentially \xe2\x80\xa6DhCreate a decoder with the given <code>ParquetMetaData</code> already \xe2\x80\xa6BlCreate a new variant with existing metadata.0CdAttempts to register a field name, returning the \xe2\x80\xa600EcVerifies that <code>child</code> contains no nulls not present in <code>mask</code>EhEnsures that all offsets in <code>buffers[0]</code> into <code>buffers[1]</code> are \xe2\x80\xa6CiReturn the number of variable length bytes in a given \xe2\x80\xa6AcVariableShapeTensorBjVariadic data buffers referenced by views.Bo<code>VariantArrayBuilder</code> implementationAlset columns to cache, if anyClSets if the decoder should coerce primitive values (bool \xe2\x80\xa6CcSet a fixed buffer size for variable length strings0CiProvide a hint as to the size of the parquet file\xe2\x80\x99s \xe2\x80\xa6DjOverrides the format used for <code>DataType::Timestamp</code> columns \xe2\x80\xa60BeSet the CSV file\xe2\x80\x99s timestamp formatBfSet the JSON file\xe2\x80\x99s timestamp format0BlWrites dictionary page into underlying sink.DhWrite <code>range</code> elements from FixedSizeListArray with child \xe2\x80\xa6BoWrites the struct to the output Thrift protocolClMetadata key used to store the name of a type in an Avro \xe2\x80\xa6CnExtension trait that directly adds row builder support for \xe2\x80\xa6CnA <code>RecordBatchReader</code> which imports Arrays from \xe2\x80\xa600CiA <code>Read</code> for <code>ArrowColumnChunkData</code>CeA subtype of primitive type that represents legal \xe2\x80\xa600ChA GeneralPurpose engine using the alphabet::STANDARD \xe2\x80\xa6ChA GeneralPurpose engine using the alphabet::URL_SAFE \xe2\x80\xa6BiThe compression used in the Bloom filter.DcSimilar to <code>ShreddingState</code> except it holds borrowed \xe2\x80\xa600BjThe result of the CancelFlightInfo action.0AjCanonical extension types.0DlAn implementation of <code>ColumnValueDecoder</code> for <code>[T::T]</code>AmCommandGetExportedKeysvariantCiRepresents a request to retrieve a description of the \xe2\x80\xa60AmCommandGetImportedKeysvariantCjRepresents a request to retrieve the foreign keys of a \xe2\x80\xa60AmCommandGetXdbcTypeInfovariantCkRepresents a request to retrieve information about data \xe2\x80\xa60AmCommandStatementIngestvariantClRepresents a bulk ingestion request. Used in the command \xe2\x80\xa60AmCommandStatementUpdatevariantCmRepresents a SQL update query. Used in the command member \xe2\x80\xa60CoDefault value for <code>WriterProperties::writer_version</code>CkThe stream makes use of multiple full dictionaries with theBgBuffer builder for 32-bit decimal type.000BgBuffer builder for 64-bit decimal type.000AoElapsed time type: nanoseconds.00AnThe empty metadata dictionary.00BmBuilder for <code>FixedSizeBinaryArray</code>000CkRetrieves a UTF-8 string with the native version of the \xe2\x80\xa60CmA FlightSQLServiceClient is an endpoint for retrieving or \xe2\x80\xa6CaThe schema for <code>CommandGetTableTypes</code>.BoA builder for <code>GenericByteViewArray</code>000DkGeneric implementation for <code>InProgressArray</code> that works with \xe2\x80\xa6BmBuilder for <code>GenericListViewArray</code>000CmA builder for a <code>CommandGetXdbcTypeInfo</code> response.ClA \xe2\x80\x9ccalendar\xe2\x80\x9d interval in days and milliseconds array \xe2\x80\xa6000DfA <code>PrimitiveArray</code> of \xe2\x80\x9ccalendar\xe2\x80\x9d intervals in whole \xe2\x80\xa6000DhBuilder for <code>ReadPlan</code> that applies a limit and offset to \xe2\x80\xa6DkThe maximum value for each precision in <code>0..=MAX_PRECISION</code>: \xe2\x80\xa600CaMinimum positive subnormal <code>f16</code> value0DkMaps an iterator of <code>ParquetStatistics</code> into an iterator of `\xe2\x80\xa6BbMiddleware interceptor for testing1DbA builder for creating / manipulating <code>ParquetMetaData</code>BlPrepare given statement and then execute it.DkA wrapper around a <code>ColumnWriter</code> that invokes a callback on \xe2\x80\xa6CeRetrieves a UTF-8 string with all the \xe2\x80\x9cextra\xe2\x80\x9d \xe2\x80\xa60ClRetrieves a UTF-8 string with the supported character(s) \xe2\x80\xa60CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa600000ClRetrieves a int64 value the maximum number of characters \xe2\x80\xa60CnRetrieves a boolean value indicating whether this database \xe2\x80\xa60BgRetrieves the supported SQL subqueries.0CaWrite messages using the Thrift compact protocol.BeOptions for table definition behavior0DjA <code>PrimitiveArray</code> of milliseconds since midnight stored as \xe2\x80\xa6000DjA <code>PrimitiveArray</code> of microseconds since midnight stored as \xe2\x80\xa6000BcTensor of type Time64NanosecondTypeBaA timestamp second array builder.000CjBuilder-specific state for array building that manages \xe2\x80\xa6CgAdds the given IntervalMonthDayNanoType to an arrow \xe2\x80\xa60CfMacro to append a default decimal value from two\xe2\x80\x99\xe2\x80\xa6BlAppend the offset and size of the next page.CbSupport for the Apache Arrow JSON test data formatEeDowncast this to a <code>FixedSizeListArray</code> returning <code>None</code> if \xe2\x80\xa600DbConverts this variant to a <code>NaiveDateTime</code> if possible.0CnCompression, if desired. Will result in a runtime error if \xe2\x80\xa6DlConvert <code>RecordBatch</code>es to wire protocol <code>FlightData</code>sDfPerforms a depth-first scan of the children of <code>array</code>, \xe2\x80\xa6AgCasts string to booleanAdCast Utf8 to decimalCeCasts string view arrays to an ArrowTimestampType \xe2\x80\xa6B`Column chunk encryption metadataCnHelper method to convert Parquet date into a string. Input \xe2\x80\xa6AmConvert object fields to JSONCnCreates an random (but fixed-seeded) array of a given size \xe2\x80\xa6CnReads the correct number of buffers based on data type and \xe2\x80\xa6DcDecodes a fixed size list array from <code>rows</code> with the \xe2\x80\xa6CmDecodes <code>ParquetMetaData</code> from the provided bytes.C`Decode the input into the provided output slice.ChDecodes a TimestampNanos from the value section of a \xe2\x80\xa6CcReturns the offset for the dictionary page, if any.CjByte offset from the beginning of file to first (only) \xe2\x80\xa6nCancel a queryCmGet a FlightDataStream containing the data related to the \xe2\x80\xa6CjGiven one or more expressions evaluating to an integer \xe2\x80\xa6000Elconverts a <code>i64</code> representing a <code>duration(s)</code> to <code>Duration</code>00EeEncodes the provided <code>FixedSizeListArray</code> to <code>out</code> with the \xe2\x80\xa6BgExtends this buffer with a list of keysDhBuilds the <code>DictionaryArray</code> without resetting the values \xe2\x80\xa600000DkConvert a slice of wire protocol <code>FlightData</code>s into a vector \xe2\x80\xa6C`Creates a buffer from an existing memory region.0BjImport ArrayData from the C Data Interface00ChConverts Thrift definition into <code>Statistics</code>.ChReturn the index for the rank when ranking boolean arrayCmReturns the total number of bytes of memory pointed to by \xe2\x80\xa6CkReturns the total number of bytes of memory occupied by the110DkReturns the values and offsets <code>Buffer</code> for a ByteArray with \xe2\x80\xa6CfGet page reader for the <code>i</code>th column chunk.CbReturns default sort order based on physical type.CiReturns the physical index at which the array slice ends.CjReturns the physical index at which the logical array ends10BdGet a FlightInfo for listing tables.DiSimilar logic as <code>get_byte_array_buffers()</code> but slices the \xe2\x80\xa6CnReturns total number of rows written by this column writer \xe2\x80\xa6CjMacro that handles the unshredded case (typed_value is \xe2\x80\xa6CnReturns true if dictionary is supported for column writer, \xe2\x80\xa6BkConverts this writer into a lower-level \xe2\x80\xa6CfReturns true if this type is valid as a dictionary key0CkCreates primitive type builder with provided field name \xe2\x80\xa6DaPrints Parquet metadata <code>ParquetMetaData</code> information.CgPush a batch into the Coalescer after applying a filter0CnRead a new bloom filter from the given offset in the given \xe2\x80\xa6BfGet the uncompressed length Notes: \xe2\x80\xa6DjGenerates a <code>RecordBatch</code> from an Arrow JSON batch, given a \xe2\x80\xa6ClReturn BooleanArray indicating which strings in an array \xe2\x80\xa6000CmMacro to generate type-safe get_xxx methods for primitive \xe2\x80\xa6BmSets compression codec for a specific column.CkSets default flag to enable/disable dictionary encoding \xe2\x80\xa6ChSets whether dictionary encoding is enabled for this \xe2\x80\xa6DgSets \xe2\x80\x9ckey_value_metadata\xe2\x80\x9d property (defaults to <code>None</code>).CkSets maximum number of rows in a row group (defaults to \xe2\x80\xa6DeSets default <code>EnabledStatistics</code> level for all columns \xe2\x80\xa6BjSets the statistics level for this column.CjCalls the provided closure for each index in this null \xe2\x80\xa6CmCalls the provided closure for each index in the provided \xe2\x80\xa61000Cbreturns the non-null element at index as a VariantCkUncompressed page size in bytes (not including this header)CgUncompressed page size in bytes (not including this \xe2\x80\xa6CgSpecify a flight descriptor in the first FlightData \xe2\x80\xa6ChSets the match_field_names of RecordBatchOptions and \xe2\x80\xa60DgSets the <code>PageIndexPolicy</code> for the column and offset indexesCgEnable or disable reading the page index structures \xe2\x80\xa6DfSet the <code>PageIndexPolicy</code> to determine how page indexes \xe2\x80\xa6CdSet the <code>ReaderProperties</code> configuration.BfSet require_alignment (default: false)ClSpecifies if the array data in input buffers is required \xe2\x80\xa6CkSpecifies whether or not array data in input buffers is \xe2\x80\xa6ChReturns a bitmask where bits indicate if any id from \xe2\x80\xa6AnActionCancelQueryResultvariantBaThe result of cancelling a query.0BnHolds the actual metrics for the Arrow reader.DdBuilder for <code>DictionaryArray</code> of <code>BinaryArray</code>000BkThe request of the CancelFlightInfo action.0C`The default scale for DataType::Decimal32 values000CdThe maximum precision for DataType::Decimal32 values000C`The default scale for DataType::Decimal64 values000CdThe maximum precision for DataType::Decimal64 values000CnEncoding for byte arrays to separate the length values and \xe2\x80\xa60BhBuffer builder for 128-bit decimal type.000BhBuffer builder for 256-bit decimal type.000B`Elapsed time type: microseconds.00B`Elapsed time type: milliseconds.00DaA <code>PrimitiveArray</code> of elapsed durations in nanoseconds000CgThe metadata key for the string name identifying an \xe2\x80\xa6CkEncryption metadata for a column chunk encrypted with a \xe2\x80\xa6EeDecodes a Stream of <code>FlightData</code> back into <code>RecordBatch</code>es. \xe2\x80\xa6CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60EaInProgressArray for <code>StringViewArray</code> and <code>BinaryViewArray</code>ChTrait mapping an Arrow interval native value to Avro \xe2\x80\xa6BdTensor of type IntervalYearMonthTypeAnDefault list member field name0DkMaps an iterator of <code>ParquetStatistics</code> into an iterator of `\xe2\x80\xa60CjThe first element in the request stream is missing the \xe2\x80\xa6ClA metadata builder that cannot register new field names, \xe2\x80\xa600CnBuilder for parquet file reader configuration. See example \xe2\x80\xa6AoBuilder for row group metadata.CaRetrieves the supported ANSI92 SQL grammar level.0CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa6000ChRetrieves a int32 describing the case sensitivity of \xe2\x80\xa60CeThe level of support for Flight SQL transaction RPCs.0DdBuilder for <code>DictionaryArray</code> of <code>StringArray</code>000CnA Thrift input protocol that wraps a <code>Read</code> object.BdTensor of type Time32MillisecondTypeBdTensor of type Time64MicrosecondTypeCdA 64-bit elaspsed time in nanoseconds array builder.000CdTimestamp nanosecond type with an optional timezone.00DbBuilder for constructing metadata for <code>Variant</code> values.00DhBuilder for  <code>WriterProperties</code> Parquet writer configuration.DgA builder for <code>XdbcTypeInfoData</code> which is used to create \xe2\x80\xa60fSafetyBnAppends values from a trusted length iterator.101E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600DbConverts this variant to a <code>NaiveDateTime</code> if possible.0DiApply a bitwise operation <code>op</code> to one input and return the \xe2\x80\xa600DcReturns the <code>BloomFilterProperties</code> for the given columnDhReturns the bloom filter properties, or <code>None</code> if not enabledAobloom filter related propertiesDjBuilds an extend that adds <code>offset</code> to the source primitive \xe2\x80\xa6BbCast the primitive array using \xe2\x80\xa6DgAttempts to encode an array into a <code>RunArray</code> with index \xe2\x80\xa6DkCompute the <strong>128\xe2\x80\x91bit MD5</strong> fingerprint of the canonical \xe2\x80\xa6CmCreates a random (but fixed-seeded) dictionary array of a \xe2\x80\xa6CnReads the correct number of buffers based on list type and \xe2\x80\xa6CiDecodes a TimestampMicros from the value section of a \xe2\x80\xa6oEnd a savepointAiExecute a bulk ingestion.B`Execute an update SQL statement.EeDowncast an <code>Array</code> to a temporal <code>PrimitiveArray</code> based on \xe2\x80\xa60Emconverts a <code>i64</code> representing a <code>duration(ms)</code> to <code>Duration</code>00Emconverts a <code>i64</code> representing a <code>duration(ns)</code> to <code>Duration</code>00FaSimilar to <code>duration_display</code> but <code>$convert</code> returns an <code>Option</code>Emconverts a <code>i64</code> representing a <code>duration(us)</code> to <code>Duration</code>00CfEncoding for non-nullable boolean arrays. Iterates \xe2\x80\xa6BcEncrypt compressed column page dataDgReturns the extension type metadata of this <code>Field</code>, if set.0CfCollection of utilities for testing the Flight client.CfCollection of utilities for testing the Flight server.DhBuild Avro JSON from an Arrow <code>ArrowSchema</code>, applying the \xe2\x80\xa6DgCreates a <code>RowSelection</code> from an iterator of consecutive \xe2\x80\xa6DfGenerates the Parsed Canonical Form for the given <code>Schema</code>.E`Gets an <code>ArrowColumnWriter</code> for the given <code>data_type</code>, \xe2\x80\xa6DjGet bloom filter for the <code>i</code>th column chunk, if present and \xe2\x80\xa6C`get bloom filter for the <code>i</code>th columnBeGet a FlightInfo for listing schemas.ChReturns total number of bytes written by this column \xe2\x80\xa6DjGets a typed column reader for the specific type <code>T</code>, by \xe2\x80\x9c\xe2\x80\xa6DjGets a typed column writer for the specific type <code>T</code>, by \xe2\x80\x9c\xe2\x80\xa6ClInfer schema from a list of CSV files by reading through \xe2\x80\xa6DcInterleave rows by index from multiple <code>RecordBatch</code> \xe2\x80\xa600CmMacro to generate type-safe get_xxx methods for primitive \xe2\x80\xa6CkGiven an array of dictionaries and an optional key mask \xe2\x80\xa6ChMinimal two\xe2\x80\x99s-complement big-endian representation \xe2\x80\xa6DkCreates a new <code>PrimitiveDictionaryBuilder</code> from the provided \xe2\x80\xa60CmConvert Parquet schema to Arrow schema including optional \xe2\x80\xa6Dh<code>VariantArray</code> and compute kernels for the Variant Binary \xe2\x80\xa6CaParses the next FixedSizeBinary (called after \xe2\x80\xa6CaParse human-readable interval string to Arrow \xe2\x80\xa60CkScans the null bitmap and partitions valid/null indices \xe2\x80\xa6DjRead the page index structures when a <code>ParquetMetaData</code> has \xe2\x80\xa6CfPredicate Cache: number of records read from the cacheCiTotal number of records read from previously cached pagesCmPredicate Cache: number of records read directly from the \xe2\x80\xa6CfTotal number of records read from the inner reader \xe2\x80\xa6BkSets optional bloom filter length in bytes.BkSets optional bloom filter offset in bytes.BkSets optional column index length in bytes.BkSets optional column index offset in bytes.BkSets optional offset index length in bytes.BkSets optional offset index offset in bytes.BoSets page encoding stats for this column chunk.BnMacro to convert string array to variant arrayClSubtracts the given IntervalMonthDayNanoType to an arrow \xe2\x80\xa6000CkSubtract the given IntervalMonthDayNanoType to an arrow \xe2\x80\xa60111100Fbconverts a <code>i64</code> representing a <code>timestamp(s)</code> to <code>NaiveDateTime</code>00CmReturns the total number of bytes used by all non inlined \xe2\x80\xa60Cltotal byte size of all uncompressed pages in this column \xe2\x80\xa6CgThis intentional inline(never) attribute helps LLVM \xe2\x80\xa6DhCreate a new <code>ParquetRecordBatchReader</code> from the provided \xe2\x80\xa6ClUpdates the metadata of this <code>Field</code> with the \xe2\x80\xa60CfUpdates column writer metrics with each page metadata.DeReturns <code>Err</code> if self.child_data does not have exactly \xe2\x80\xa6ChSets the initial schema fingerprint for stream decoding.BcSpecify a dictionary tracker to useCmThe legacy format is for releases before 0.15.0, and uses \xe2\x80\xa6AoActionCancelQueryRequestvariantCaRequest message for the \xe2\x80\x9cCancelQuery\xe2\x80\x9d action.0C`Creates <code>ArrowColumnWriter</code> instancesCkA struct that partially reads the Arrow JSON dictionary \xe2\x80\xa6CkRepresents a dictionary-encoded field in the Arrow JSON \xe2\x80\xa6CkRow builder for converting Arrow arrays to VariantArray \xe2\x80\xa6AoCommandGetCrossReferencevariantCiRepresents a request to retrieve a description of the \xe2\x80\xa60CeThe maximum precision for DataType::Decimal128 values000CeThe maximum precision for DataType::Decimal256 values000CiDefault value for <code>BloomFilterProperties::fpp</code>CiDefault value for <code>BloomFilterProperties::ndv</code>DaDefault value for <code>WriterProperties::write_batch_size</code>BgGeneric builder for decimal unshreddingDbA <code>PrimitiveArray</code> of elapsed durations in microseconds000DbA <code>PrimitiveArray</code> of elapsed durations in milliseconds000BeTensor of type DurationNanosecondTypeCjExtension type metadata for <code>FixedShapeTensor</code>.0GbCreates a <code>Stream</code> of <code>FlightData</code>s from a <code>Stream</code> of <code>Result</code>&lt;\xe2\x80\xa6CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600BoInProgressArray for <code>PrimitiveArray</code>Cc\xe2\x80\x9cCalendar\xe2\x80\x9d interval type: months, days, and \xe2\x80\xa600CbA \xe2\x80\x9ccalendar\xe2\x80\x9d interval in months array builder.000AnMap builder for MapArray typesEeAn <code>Iterator&lt;Item = ArrowResult&lt;RecordBatch&gt;&gt;</code> that yields \xe2\x80\xa6EdAn asynchronous <code>Stream</code>of <code>RecordBatch</code> constructed using \xe2\x80\xa6DlA wrapper around <code>Streaming&lt;FlightData&gt;</code> that allows \xe2\x80\x9c\xe2\x80\xa6CnError when the run end index in a REE array is bigger than \xe2\x80\xa600DdA serialized implementation for Parquet <code>RowGroupReader</code>.AmParquet row group writer API.CnRetrieves a boolean value indicating whether this database \xe2\x80\xa60CmRetrieves a boolean value indicating whether transactions \xe2\x80\xa60ClA high performance Thrift reader that reads from a slice \xe2\x80\xa6CeA 32-bit elaspsed time in milliseconds array builder.000CeA 64-bit elaspsed time in microseconds array builder.000CeTimestamp microsecond type with an optional timezone.00CeTimestamp millisecond type with an optional timezone.00DkA <code>PrimitiveArray</code> of nanoseconds since UNIX epoch stored as \xe2\x80\xa6000CnRow builder for converting shredded VariantArray rows back \xe2\x80\xa6CmBuilder for converting variant values into strongly typed \xe2\x80\xa6CeA builder for creating only the value column of a \xe2\x80\xa600EgDowncast this to a <code>FixedSizeBinaryArray</code> returning <code>None</code> if \xe2\x80\xa600E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600ChCasts generic string arrays to an ArrowTimestampType \xe2\x80\xa6CaCreates a character from an UTF-16 surrogate pairDeNested message and enum types in <code>CommandStatementIngest</code>.CkCompute which columns are used in filters and the final \xe2\x80\xa6AoWhich columns should be cached?DaReturn a new <code>InProgressArray</code> for the given data typeCnCreates an random (but fixed-seeded) array of a given size \xe2\x80\xa6CnCreates a random (but fixed-seeded) string view array of a \xe2\x80\xa6DkComputes the union of the nulls in two optional <code>NullBuffer</code> \xe2\x80\xa6CnSpecifies a filter pattern for schemas to search for. When \xe2\x80\xa60DfReturns the value of <code>db_schema_filter_pattern</code>, or the \xe2\x80\xa6011CbDecodes a <code>FixedLengthBinary</code> from rowsCiReturns encoding for dictionary page, when dictionary \xe2\x80\xa6FbDowncast an <code>Array</code> to a <code>PrimitiveArray</code> based on its <code>DataType</code>00CjEncode dictionary values not preserving the dictionary \xe2\x80\xa6CjReturns an estimate of the encoded data page size in bytesCbReturns an estimate of the data page size in bytes0CnReturns an estimate of the encoded size of dictionary page \xe2\x80\xa6CbReturns byte width for a buffer spec. Only for \xe2\x80\xa6BfGet a FlightInfo for listing catalogs.CkImplementors may override to handle additional calls to \xe2\x80\xa6CjGet a FlightInfo for retrieving other information (See \xe2\x80\xa6CkReturns the physical index at which the array slice starts.CiReturns the physical index at which the logical array \xe2\x80\xa610DjCombine two lists of <code>RowSelection</code> return the intersection \xe2\x80\xa6BcMaximum size of the predicate cacheBoThe size in bytes of the predicate cache to useDiPerform <code>left * right</code> operation on two decimal arrays. If \xe2\x80\xa6CkReturns the next column writer, if available, using the \xe2\x80\xa6CiAssumes, without verification, that a buffer of bytes \xe2\x80\xa6ClVerifies, with the given options, that a buffer of bytes \xe2\x80\xa61010CgState for building the reader for the current row groupDbCreates new <code>ArrowRowGroupWriter</code> instances as requiredCjSets if bloom filter should be written for all columns \xe2\x80\xa6EgIf <code>value</code> is <code>true</code>, sets bloom filter properties to default \xe2\x80\xa6CiSets best effort maximum size of a data page in bytes \xe2\x80\xa6BlEnable/disable reading page-level statisticsChSubtract the given IntervalYearMonthType to an arrow \xe2\x80\xa60BoThe behavior for handling the table definition.0DeNested message and enum types in <code>TableDefinitionOptions</code>.Dlconverts a <code>i64</code> representing a <code>timestamp(ms)</code> to \xe2\x80\xa600Dlconverts a <code>i64</code> representing a <code>timestamp(ns)</code> to \xe2\x80\xa600Dlconverts a <code>i64</code> representing a <code>timestamp(us)</code> to \xe2\x80\xa600DhConvert the <code>BinaryViewArray</code> to <code>StringViewArray</code>00BjBegin decoding from the given footer tail.CjSum the provided PageMetrics histograms into the chunk \xe2\x80\xa6CjSets the <code>PageIndexPolicy</code> for the column indexCkSet the policy for reading the ColumnIndex (part of the \xe2\x80\xa6BlDeduplicate strings while building the array0BoSet <code>DictionaryHandling</code> for encoderCfConfigure how dictionaries are handled in IPC messagesCkFlatbuffers option for parsing the footer. Controls the \xe2\x80\xa6CjSets the <code>PageIndexPolicy</code> for the offset indexCkSet the policy for reading the OffsetIndex (part of the \xe2\x80\xa6ClReturns a Decimal array with the same data as self, with \xe2\x80\xa6AlSets the precision and scale10CjSkip decoding the embedded arrow metadata (defaults to \xe2\x80\xa6CjSkip encoding the embedded arrow metadata (defaults to \xe2\x80\xa6DjOverrides the format used for <code>DataType::Timestamp</code> columns \xe2\x80\xa60BhSet the CSV file\xe2\x80\x99s timestamp tz formatBiSet the JSON file\xe2\x80\x99s timestamp tz format0DgSets the <code>SchemaStore</code> used to resolve writer schemas by \xe2\x80\xa6B`ActionEndSavepointRequestvariantCbRequest message for the \xe2\x80\x9cEndSavepoint\xe2\x80\x9d action.0BfTensor of type DurationMicrosecondTypeBfTensor of type DurationMillisecondTypeBmAn elapsed time in nanoseconds array builder.000DiA <code>PrimitiveArray</code> of \xe2\x80\x9ccalendar\xe2\x80\x9d intervals in  months, \xe2\x80\xa6000ClA lexicographical comparator that wraps given array data \xe2\x80\xa600CjGeneric list builder for ListLikeArray types including \xe2\x80\xa6CkBuilder for unshredding list/array types with recursive \xe2\x80\xa6DkMaps an iterator of <code>ParquetStatistics</code> into an iterator of `\xe2\x80\xa60BeNull builder that always appends nullCnBuilder for arrays with neither typed_value nor value (all \xe2\x80\xa6CaThe value of this metadata key, if present on \xe2\x80\xa6BnA builder for <code>ParquetPushDecoder</code>.CkOne shredded field of a partially or perfectly shredded \xe2\x80\xa6CkRetrieves a boolean value indicating whether all tables \xe2\x80\xa60CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa6000C`Retrieves the support level for SQL OUTER JOINs.0CgRetrieves a boolean value indicating whether column \xe2\x80\xa60CmBuffer builder for 32-bit elaspsed time since midnight of \xe2\x80\xa6000DiA <code>PrimitiveArray</code> of microseconds since UNIX epoch stored \xe2\x80\xa6000DiA <code>PrimitiveArray</code> of milliseconds since UNIX epoch stored \xe2\x80\xa6000BfTensor of type TimestampNanosecondTypeBoIterator over an <code>UnalignedBitChunk</code>00ClWhether or not min and max values are set. Normally both \xe2\x80\xa6CkAdd a <code>KeyValue</code> to the file writer\xe2\x80\x99s metadataDjAdditional <code>KeyValue</code> metadata to be written in addition to \xe2\x80\xa6DaAppend <code>KeyValue</code> metadata in addition to those in \xe2\x80\xa6CjDirectly append a view to the view array. This is used \xe2\x80\xa6CaCommon code used in the integration test binariesDnConverts an <code>ArrowPrimitiveType</code> to <code>DateTime&lt;Tz&gt;</code>00EaPerform bitwise <code>left &lt;&lt; right</code> every value in an array with \xe2\x80\xa60BiCast the array from duration and intervalCeClears the page encoding stats for this column chunk.CeComputes the 64-bit Rabin fingerprint for a given \xe2\x80\xa6CmComputes the strides required assuming a row major memory \xe2\x80\xa6DbReturns the elementwise concatenation of <code>StringArray</code>.0CnHelper method to convert Parquet decimal into a string. We \xe2\x80\xa6CiUpdate the ArrayDataBuilder based on settings in this \xe2\x80\xa6BbReturns the maximum page row countCgSets best effort maximum number of rows in a data page.CkDecodes a TimestampNtzNanos from the value section of a \xe2\x80\xa6BeEncoding used for definition levels *CkWrite dictionary values into two sets of bytes, one for \xe2\x80\xa6AaBegin a savepointAaEnd a transactionClGet a FlightDataStream containing the prepared statement \xe2\x80\xa6EaDowncast an <code>Array</code> to a <code>DictionaryArray</code> based on its \xe2\x80\xa600BjEncrypted column metadata for this chunk *DiCreate an i256 from the provided <code>BigInt</code> returning a bool \xe2\x80\xa6CmReturns the estimated total encoded bytes for this column \xe2\x80\xa600BkGet a FlightInfo for executing a SQL query.DiReturns <code>true</code> if this type is a group with a single child \xe2\x80\xa6BmLimits the maximum size of a decoded message.0BnLimits the maximum size of an encoded message.0DiCreate a new <code>StructArray</code> from the provided parts without \xe2\x80\xa60CjBinary file to read bloom filter data from a Parquet file.Cnparse the string into a vector of interval components i.e. \xe2\x80\xa6CaParse human-readable interval string to Arrow \xe2\x80\xa60ChPrepare an arrow Schema for transport over the Arrow \xe2\x80\xa6CgOpaque handle for the prepared statement on the server.000ClRepresents a (potentially updated) opaque handle for the \xe2\x80\xa6DgReturns the value of <code>prepared_statement_handle</code>, or the \xe2\x80\xa622221BeEncoding used for repetition levels *CiAssumes, without verification, that a buffer of bytes \xe2\x80\xa6ClVerifies, with the given options, that a buffer of bytes \xe2\x80\xa6EhReturns the nearest number that is <code>&gt;=</code> than <code>num</code> and is a \xe2\x80\xa600CjSets where in the final file Bloom Filters are written \xe2\x80\xa6CjSets whether the writing of offset indexes is disabled \xe2\x80\xa6DfSet the <code>PageEncryptor</code> on a page writer if a column is \xe2\x80\xa6BdSets total compressed size in bytes.CbSplit an interval into a vec of amounts and units.CmAccepts a string in RFC3339 / ISO8601 standard format and \xe2\x80\xa60CmSpecifies a filter pattern for tables to search for. When \xe2\x80\xa6DgReturns the value of <code>table_name_filter_pattern</code>, or the \xe2\x80\xa61EfCreates a <code>Buffer</code> from an <code>Iterator</code> with a trusted (upper) \xe2\x80\xa6EeCreates a <code>MutableBuffer</code> from an <code>Iterator</code> with a trusted \xe2\x80\xa610CnAttempts to convert an unscaled arrow decimal value to the \xe2\x80\xa600DgReturns value as a chrono <code>NaiveDateTime</code>, handling time \xe2\x80\xa60CjSet the fingerprinting strategy for the stream writer. \xe2\x80\xa6ChSet the (approximate) maximum size, in bytes, of the \xe2\x80\xa6CkFlatbuffers option for parsing the footer. Controls the \xe2\x80\xa6D`Load the Column Index as part of <code>Self::get_metadata</code>D`Load the Offset Index as part of <code>Self::get_metadata</code>BaActionBeginSavepointResultvariantBlThe result of a \xe2\x80\x9cBeginSavepoint\xe2\x80\x9d action.0CnFactory that creates new column writers for each row group \xe2\x80\xa6B`Scenario for testing basic auth.BlBuilder for <code>ColumnChunkMetaData</code>DcDefault value for <code>WriterProperties::dictionary_enabled</code>DcDefault value for <code>WriterProperties::max_row_group_size</code>DcDefault value for <code>WriterProperties::statistics_enabled</code>DoAn implementation of <code>DefinitionLevelDecoder</code> for <code>[i16]</code>CgError when a dictionary key is bigger than the key type00BnAn elapsed time in microseconds array builder.000BnAn elapsed time in milliseconds array builder.000CgEdge interpolation algorithm for Geography logical typeDdEdge interpolation algorithm for <code>LogicalType::Geography</code>ChRetrieves an int32 indicating whether the Flight SQL \xe2\x80\xa60BgTensor of type IntervalMonthDayNanoTypeC`A push decoder for <code>ParquetMetaData</code>.0DgBuilder for <code>DictionaryArray</code> of <code>PrimitiveArray</code>000BnThe request of the RenewFlightEndpoint action.0DoAn implementation of <code>RepetitionLevelDecoder</code> for <code>[i16]</code>CkRetrieves a boolean indicating whether the return value \xe2\x80\xa60CaRetrieves the supported actions for a SQL schema.0CeRetrieves an int32 bitmask value representing the \xe2\x80\xa60CmLow-level object used to deserialize structs encoded with \xe2\x80\xa6BgTensor of type TimestampMicrosecondTypeBgTensor of type TimestampMillisecondTypeBeA timestamp nanosecond array builder.000CdGeneric builder for timestamp types that handles \xe2\x80\xa6CdUnion builder for both sparse and dense union arraysCeGeneric unshred builder that works with any Array \xe2\x80\xa6DfNested message and enum types in <code>ActionCancelQueryResult</code>.CnIf encryption is enabled and configured, encrypt row group \xe2\x80\xa6EaPerform bitwise <code>left &gt;&gt; right</code> every value in an array with \xe2\x80\xa60CiWorkaround for lack of direct support for BinaryArray \xe2\x80\xa6DgCompute the <strong>256\xe2\x80\x91bit SHA\xe2\x80\x91256</strong> fingerprint of the \xe2\x80\xa6DdCreate a <code>PageEncryptor</code> for a column if it should be \xe2\x80\xa6CmCreate primitive run array for given logical and physical \xe2\x80\xa6ClDecodes a TimestampNtzMicros from the value section of a \xe2\x80\xa6BgReturns the definition level histogram.CgReturns the definition level histogram for the page \xe2\x80\xa60ClSame as repetition_level_histogram except for definition \xe2\x80\xa6DhConstruct a <code>DictionaryArray</code> from a partially typed JSON \xe2\x80\xa6BcReturns dictionary page size limit.ChReturns optional dictionary page size limit for this \xe2\x80\xa6ChSets best effort maximum dictionary page size, in bytes.CnExpands the selection to align with batch boundaries. This \xe2\x80\xa6CfRetrieve the currently set file decryption properties.ClIf encryption is enabled, the file decryption properties \xe2\x80\xa6BaReturn file encryption propertiesDkConvert <code>FlightData</code> (with supplied schema and dictionaries) \xe2\x80\xa6EdCreates a <code>MutableBuffer</code> from a boolean <code>Iterator</code> with a \xe2\x80\xa60CbGarbage collects a DictionaryArray by removing \xe2\x80\xa6DhGet context required to create a <code>PageEncryptor</code> for a columnEfDetermines whether <code>value</code> contains no more than <code>precision</code> \xe2\x80\xa600DbGiven a <code>MetadataSuffixFetch</code>, parse and return the \xe2\x80\xa6BgProcess primitive array values to bytesChValidates the Decimal Array, if the value of slot is \xe2\x80\xa60BdParses the next double quoted stringBdParses the next single quoted stringBgReturns the repetition level histogram.CgReturns the repetition level histogram for the page \xe2\x80\xa60CeWhen present, there is expected to be one element \xe2\x80\xa6CcSet the encryption metadata for an encrypted columnCaSet the column crypto metadata for a column chunkBnSets optional dictionary page offset in bytes.CfHelper to safely slice bytes with offset calculations.CmReturns the maximum length of truncated min/max values in \xe2\x80\xa6CnSets the max length of min/max statistics in row group and \xe2\x80\xa6ChAccepts a string in ISO8601 standard format and some \xe2\x80\xa60CnPerforms a binary search over a range using a fallible key \xe2\x80\xa6Djconverts a <code>i64</code> representing a <code>duration(s)</code> to \xe2\x80\xa600CbTry deserialize the IPC format bytes into a schemaClUpdate the column index and offset index when adding the \xe2\x80\xa6CnValidates values in this array can be properly interpreted \xe2\x80\xa6EbValidates that <code>value</code> contains no more than <code>precision</code> \xe2\x80\xa6DhValidates that the specified <code>i128</code> value can be properly \xe2\x80\xa61210DfDoes a cheap sanity check that the <code>self.len</code> values in \xe2\x80\xa6CdProvide the FileDecryptionProperties to use when \xe2\x80\xa6CjUpdate the compressed buffer for a page. This might be \xe2\x80\xa6ClMetadata key used to store the name of a type in an Avro \xe2\x80\xa6BbActionBeginSavepointRequestvariantChRequest message for the \xe2\x80\x9cBeginSavepoint\xe2\x80\x9d action. \xe2\x80\xa60BbActionEndTransactionRequestvariantCdRequest message for the \xe2\x80\x9cEndTransaction\xe2\x80\x9d action.0C`Buffer builder for elaspsed time of second unit.000CkThe metadata key for a serialized representation of the \xe2\x80\xa6CkWrapper for a tonic response stream that maps errors to \xe2\x80\xa6CmRetrieves a UTF-8 string with the Arrow format version of \xe2\x80\xa60CnA \xe2\x80\x9ccalendar\xe2\x80\x9d interval in months, days, and nanoseconds \xe2\x80\xa6000CaRetrieves the supported actions for a SQL schema.0CfRetrieves a boolean value indicating whether named \xe2\x80\xa60CkRetrieves a boolean value indicating whether SELECT FOR \xe2\x80\xa60CmRetrieves a boolean value indicating whether specifying a \xe2\x80\xa60ChRetrieves a boolean value indicating whether using a \xe2\x80\xa60AnStruct builder for StructArrayCkBuilder for unshredding struct/object types with nested \xe2\x80\xa6ClLow-level object used to serialize structs to the Thrift \xe2\x80\xa6BfA timestamp microsecond array builder.000BfA timestamp millisecond array builder.000CmExtension type metadata for <code>VariableShapeTensor</code>.0D`A thin <code>VariantBuilderExt</code> wrapper that hides the \xe2\x80\xa6FcExtract <code>Schema</code> or <code>RecordBatch</code>es from the <code>FlightData</code> wire \xe2\x80\xa6CaGet the current biggest coalesce batch size limit0BdBiggest coalesce batch size. See \xe2\x80\xa6Cicontains the concatenation of the histograms of all pagesCnSame as repetition_level_histograms except for definitions \xe2\x80\xa6AcBegin a transactionCgReturns true if the endianness of the source system \xe2\x80\xa6DkComputes <code>GeospatialStatistics</code>, if any, and resets internal \xe2\x80\xa6CjRetrieval metadata of key used for signing the footer. \xe2\x80\xa6CkCreates a PrimitiveArray based on an iterator of values \xe2\x80\xa60CkGet a FlightInfo to extract information about the table \xe2\x80\xa6CkReturns 12-byte values representing 3 values of months, \xe2\x80\xa60CmEnsures that this array data has a single child_data with \xe2\x80\xa6DhSimilar to <code>get_typed_column_writer</code> but returns a reference.0CnMacro to generate PrimitiveFromVariant implementations for \xe2\x80\xa6DfReturns <code>PrimitiveDictionaryBuilder</code> of this dictionary \xe2\x80\xa60ClSpecial iterator adapter for extracting i128 values from \xe2\x80\xa6CmMacro to generate type-safe get_xxx methods for primitive \xe2\x80\xa6ClComputes the logical nulls for a sparse union, optimized \xe2\x80\xa6Bdtreat missing null_counts as 0 nullsCjExtracts the null count statistics from an iterator of \xe2\x80\xa6DiCreate <code>ParquetMetaData</code> from thrift input. Note that this \xe2\x80\xa6Cicontains the concatenation of the histograms of all pagesCfContains repetition level histograms for each page \xe2\x80\xa6BgEnable/disable backward compatible LZ4.CnSets the false positive probability for bloom filter for a \xe2\x80\xa6CmSets the number of distinct values for bloom filter for a \xe2\x80\xa6BfSets total uncompressed size in bytes.CkSubtract the given IntervalMonthDayNanoType to an arrow \xe2\x80\xa60CeTruncate a UTF-8 slice and increment it\xe2\x80\x99s final \xe2\x80\xa6Dkconverts a <code>i64</code> representing a <code>duration(ms)</code> to \xe2\x80\xa600DhCreate a <code>RecordBatch</code> from an iterable list of tuples of the0CiReturns the unscaled integer representation for Arrow \xe2\x80\xa6CkEnables unique field key validation for objects created \xe2\x80\xa6CkEnables validation for unique field keys when inserting \xe2\x80\xa6CjEnables validation of unique field keys in nested objects.021CkWriter may optionally provide pre-calculated statistics \xe2\x80\xa6BcActionBeginTransactionResultvariantBnThe result of a \xe2\x80\x9cBeginTransaction\xe2\x80\x9d action.0BcDoPutPreparedStatementResultvariantEaAn <em>optional</em> response returned when <code>DoPut</code> is called with \xe2\x80\xa60CfThe canonical byte slice corresponding to an empty \xe2\x80\xa600CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60DiBuilder for <code>DictionaryArray</code> of <code>GenericByteArray</code>000CjBuffer builder for \xe2\x80\x9ccalendar\xe2\x80\x9d interval in days and \xe2\x80\xa6000DiBuilder for <code>DictionaryArray</code> of <code>LargeBinaryArray</code>000DiBuilder for <code>DictionaryArray</code> of <code>LargeStringArray</code>000CgRetrieves a boolean value indicating whether stored \xe2\x80\xa60CnTime32(Second) to Avro time-millis (int), via safe scaling \xe2\x80\xa6CaBuffer builder for timestamp type of second unit.000DhNested message and enum types in <code>ActionEndSavepointRequest</code>.DkApply a bitwise operation <code>op</code> to four inputs and return the \xe2\x80\xa600EbCasts a typed arrow <code>Array</code> to a <code>VariantArray</code>. This is \xe2\x80\xa600CmReturns the maximum length of truncated min/max values in \xe2\x80\xa6CkSets the max length of min/max statistics in the column \xe2\x80\xa6CiComputes the strides required assuming a column major \xe2\x80\xa6ClCreate string array to be used by run array builder. The \xe2\x80\xa6CnCreates a random (but fixed-seeded) array of a given size, \xe2\x80\xa6DkGiven a shredded variant field \xe2\x80\x93 a <code>(value?, typed_value?)</code>\xe2\x80\xa6CmGet a FlightInfo to extract information about primary and \xe2\x80\xa6ClTrue if the given precision and scale are valid for this \xe2\x80\xa600DiPerform <code>left * right</code> operation on two decimal arrays. If \xe2\x80\xa6DdExtract the <code>is_max_value_exact</code> flags from row group \xe2\x80\xa6DdExtract the <code>is_min_value_exact</code> flags from row group \xe2\x80\xa6ClVerifies that a buffer of bytes contains a size prefixed \xe2\x80\xa600CgTakes/filters a list array\xe2\x80\x99s inner data using the \xe2\x80\xa6EcReturns the <code>CanonicalExtensionType</code> of this <code>Field</code>, if set.0ClCreate a new InMemoryRowGroup, and fill it with provided \xe2\x80\xa6DeCreate a new <code>ParquetDecoderBuilder</code> for configuring a \xe2\x80\xa60ClUpdates geospatial statistics for the provided array and \xe2\x80\xa6CnSum the provided page variable_length_bytes into the chunk \xe2\x80\xa6DgValidates that the specified <code>i32</code> value can be properly \xe2\x80\xa60DgValidates that the specified <code>i64</code> value can be properly \xe2\x80\xa60EfReturns <code>true</code> if <code>Statistics</code> are to be written to the page \xe2\x80\xa6EgReturns <code>Some(true)</code> if <code>Statistics</code> are to be written to the \xe2\x80\xa6BjWrite statistics to the data page headers?CcDefault name for the root record in an Avro schema.BdActionBeginTransactionRequestvariantCjRequest message for the \xe2\x80\x9cBeginTransaction\xe2\x80\x9d action. \xe2\x80\xa60BdCommandPreparedStatementQueryvariantCmRepresents an instance of executing a prepared statement. \xe2\x80\xa60BdCommandStatementSubstraitPlanvariantCnRepresents a Substrait plan. Used in the command member of \xe2\x80\xa60DfDefault value for <code>WriterProperties::bloom_filter_position</code>DfDefault value for <code>WriterProperties::offset_index_disabled</code>CiError message if nanosecond conversion request beyond \xe2\x80\xa6BnColumn reader for fixed length byte array typeBnColumn writer for fixed length byte array typeCkAll fields contains nulls, so we can skip the selection \xe2\x80\xa6ClRetrieves a boolean value indicating whether columns may \xe2\x80\xa60CmBuffer builder for 64-bit elaspsed time since midnight of \xe2\x80\xa6000CmAppend views to self.views, copying data from the buffers \xe2\x80\xa6CmHelper method to convert Parquet time (microseconds since \xe2\x80\xa6CmHelper method to convert Parquet time (milliseconds since \xe2\x80\xa6EeCreates a random <code>GenericBinaryArray</code> of a given <code>size</code> and \xe2\x80\xa6AoLength of the definition levelsCnReturns encoding for a data page, when dictionary encoding \xe2\x80\xa6DiReturns function to extract relevant <code>DatePart</code> from types \xe2\x80\xa6CjGet a FlightInfo to extract information about exported \xe2\x80\xa6CjGet a FlightInfo to extract information about imported \xe2\x80\xa6DiReturns true if the specified <code>i128</code> value can be properly \xe2\x80\xa60CnCompute the exact maximum base\xe2\x80\x9110 precision that fits in \xe2\x80\xa6DkConvert a parquet <code>SchemaDescriptor</code> to <code>FieldLevels</code>CaParse human-readable interval string to Arrow \xe2\x80\xa60AoLength of the repetition levelsCiSets flag to enable/disable dictionary encoding for a \xe2\x80\xa6D`Sets <code>EnabledStatistics</code> level for a specific column.CjSets best effort maximum number of rows in a data page \xe2\x80\xa6CcSet the encryption metadata for an encrypted columnClVerifies that a buffer of bytes contains a size prefixed \xe2\x80\xa6DcSplit <code>RecordBatch</code> so it hopefully fits into a gRPC \xe2\x80\xa6DkValidates that the specified <code>i256</code> of value can be properly \xe2\x80\xa60CiSet the maximum size (per row group) of the predicate \xe2\x80\xa6CjMetadata key used to represent Avro enum symbols in an \xe2\x80\xa6BeCommandPreparedStatementUpdatevariantCmRepresents a SQL update query. Used in the command member \xe2\x80\xa60ClA lexicographical comparator that wraps given array data \xe2\x80\xa600CeBuffer builder for \xe2\x80\x9ccalendar\xe2\x80\x9d interval in months.000Eh<code>MAX_DECIMAL_FOR_EACH_PRECISION[p-1]</code> holds the maximum <code>i128</code> \xe2\x80\xa60Eh<code>MIN_DECIMAL_FOR_EACH_PRECISION[p-1]</code> holds the minimum <code>i128</code> \xe2\x80\xa60Cenon-nullable aggregation requires fewer temporary \xe2\x80\xa6CmRetrieves this database\xe2\x80\x99s default transaction isolation \xe2\x80\xa60C`Retrieves the supported SQL positioned commands.0CmBuffer builder for 32-bit elaspsed time since midnight of \xe2\x80\xa6000CmBuffer builder for 64-bit elaspsed time since midnight of \xe2\x80\xa6000CkBuilder for arrays that only have value column (already \xe2\x80\xa6BdNested message and enum types in \xe2\x80\xa6CmHelper function that takes a primitive array and casts to \xe2\x80\xa6CmCreates a random (but fixed-seeded) dictionary array of a \xe2\x80\xa6DeEquivalent to <code>garbage_collect_dictionary</code> but without \xe2\x80\xa6C`Get a FlightInfo for executing a substrait plan.CeGet a FlightInfo to extract information about the \xe2\x80\xa6ClComputes the logical nulls for a sparse union, optimized \xe2\x80\xa6CcParses given string to specified decimal native \xe2\x80\xa6BhSets optional repetition level histogramCkSets best effort maximum dictionary page size, in bytes \xe2\x80\xa6C`Sets dictionary page size limit for this column.2ClSets the max length of min/max value fields in row group \xe2\x80\xa6CjA weak heuristic of whether to merge dictionary values \xe2\x80\xa6ClCreate an array from an iterable argument of sparse byte \xe2\x80\xa60CnMetadata key used to store the default value of a field in \xe2\x80\xa6CbDictionary array builder with simple O(1) indexingCeBuffer builder for elaspsed time of nanoseconds unit.000CaRetrieves an int32 indicating the timeout (in \xe2\x80\xa60BkA synchronous builder used to construct \xe2\x80\xa6DiA builder for reading parquet files from an <code>async</code> source \xe2\x80\xa6ClRetrieves a boolean value indicating whether expressions \xe2\x80\xa60CjTimestamp(Second) to Avro timestamp-millis (long), via \xe2\x80\xa6CjBuilder for converting variant values to arrow Decimal \xe2\x80\xa6BhCast the array from interval to durationBlBind parameters to given prepared statement.ClConvert the value at a specific index in the given array \xe2\x80\xa6CgGet a FlightInfo to extract information about cross \xe2\x80\xa6CmInfer the fields of a JSON file by reading all items from \xe2\x80\xa60CjInfer the fields of a JSON file by reading the first n \xe2\x80\xa60EfOld versions of parquet stored statistics in <code>min</code> and <code>max</code> \xe2\x80\xa60DjIf <code>true</code> the statistics are compatible with the deprecated \xe2\x80\xa60DhReturns true if the specified <code>i32</code> value can be properly \xe2\x80\xa60DhReturns true if the specified <code>i64</code> value can be properly \xe2\x80\xa60j(min, max)0CiAssumes, without verification, that a buffer of bytes \xe2\x80\xa6ClVerifies, with the given options, that a buffer of bytes \xe2\x80\xa6BiSet the biggest coalesce batch size limit0CgSets whether a bloom filter should be written for a \xe2\x80\xa6EbAttempts to interpet <code>metadata</code> and <code>value</code> as a variant \xe2\x80\xa60CmReturns the number of bytes of variable length data after \xe2\x80\xa6ClOptional vector of unencoded page sizes, one per page in \xe2\x80\xa60CaUnencoded/uncompressed size for BYTE_ARRAY types.CkThe number of physical bytes stored for BYTE_ARRAY data \xe2\x80\xa6BiInitialize the definition level histogram0ChProvide decryption properties for decoding encrypted \xe2\x80\xa6CnProvide the file decryption properties to use when reading \xe2\x80\xa6CmSets FileEncryptionProperties (defaults to <code>None</code>)BiInitialize the repetition level histogram0CfBuffer builder for elaspsed time of microseconds unit.000CfBuffer builder for elaspsed time of milliseconds unit.000DmBuilder for <code>DictionaryArray</code> of <code>FixedSizeBinaryArray</code>000Eg<code>MAX_DECIMAL32_FOR_EACH_PRECISION[p]</code> holds the maximum <code>i32</code> \xe2\x80\xa60Eg<code>MAX_DECIMAL64_FOR_EACH_PRECISION[p]</code> holds the maximum <code>i64</code> \xe2\x80\xa60Df<code>MIN_DECIMAL32_FOR_EACH_PRECISION[p]</code> holds the minimum \xe2\x80\xa60Eg<code>MIN_DECIMAL64_FOR_EACH_PRECISION[p]</code> holds the minimum <code>i64</code> \xe2\x80\xa60CkRetrieves a boolean value indicating whether correlated \xe2\x80\xa60ClRetrieves a boolean value indicating whether, when table \xe2\x80\xa60CeBuffer builder for timestamp type of nanosecond unit.000ClWrites out the header byte for a variant object or list, \xe2\x80\xa6DcHelper function to cast from one <code>BinaryArray</code> or \xe2\x80\x98\xe2\x80\xa6CnHelper function to cast from \xe2\x80\x98FixedSizeBinaryArray\xe2\x80\x99 to \xe2\x80\xa6FdCreates a <code>PrimitiveArray</code> of a given <code>size</code> and <code>null_density</code> \xe2\x80\xa6CjCreates a random (but fixed-seeded) array of rand size \xe2\x80\xa6BiExecute an update SQL prepared statement.CmCopies Arrow schema metadata entries to the provided JSON \xe2\x80\xa6DhReturn true if the specified <code>i256</code> value can be properly \xe2\x80\xa60DjDecodes <code>ParquetMetaData</code> from the provided bytes, handling \xe2\x80\xa6ClSets the max length of min/max value fields when writing \xe2\x80\xa6Deenable/disable writing <code>Statistics</code> in the page header \xe2\x80\xa6CkSets whether to write statistics in the page header for \xe2\x80\xa6CfTry deserialize flat buffer format bytes into a schemaDdDecodes the app_metadata stored in a <code>PutResult</code> as a \xe2\x80\xa6CmSet the coalesce batch size limit (default <code>None</code>)0CmSet the statistics converter to treat missing null counts \xe2\x80\xa6AeDefault value for \xe2\x80\xa6CaRetrieves an int32 indicating the timeout (in \xe2\x80\xa60ChDefault target size for encoded <code>FlightData</code>.CkBuffer builder \xe2\x80\x9ccalendar\xe2\x80\x9d interval in months, days, \xe2\x80\xa6000Eh<code>MAX_DECIMAL128_FOR_EACH_PRECISION[p]</code> holds the maximum <code>i128</code>\xe2\x80\xa60Eh<code>MAX_DECIMAL256_FOR_EACH_PRECISION[p]</code> holds the maximum <code>i256</code>\xe2\x80\xa60Ef<code>MIN_DECIMAL_FOR_EACH_PRECISION[p]</code> holds the minimum <code>i128</code> \xe2\x80\xa60Eh<code>MIN_DECIMAL256_FOR_EACH_PRECISION[p]</code> holds the minimum <code>i256</code>\xe2\x80\xa60DkMaps an iterator of <code>ParquetStatistics</code> into an iterator of `\xe2\x80\xa60ClBuilder for converting variant values to primitive Arrow \xe2\x80\xa6CfBuffer builder for timestamp type of microsecond unit.000CfBuffer builder for timestamp type of millisecond unit.000CiRecursively visits a data type, ensuring that it only \xe2\x80\xa6CiReturns dictionary page size limit for a specific column.CnCreates a random (but fixed-seeded) array of a given size, \xe2\x80\xa6ChExclude leaves belonging to roots that span multiple \xe2\x80\xa60BmRead bloom filter for a column in a row group000CnFactory function to create the appropriate row builder for \xe2\x80\xa6DgCreate a visual representation of <code>RecordBatch</code>es with a \xe2\x80\xa60ClConvert the value at a specific index in the given array \xe2\x80\xa6CiUpdates histogram values using provided definition levelsCiUpdates histogram values using provided repetition levelsEhSet whether to write the deprecated <code>min</code> and <code>max</code> fields for \xe2\x80\xa6AeDefault value for \xe2\x80\xa6AfDefault values for \xe2\x80\xa6CmRetrieves a string value indicating the maximum supported \xe2\x80\xa60CmRetrieves a string value indicating the minimum supported \xe2\x80\xa60CkRun-end encoded array builder with efficient sequential \xe2\x80\xa6CmHelper method to convert Parquet timestamp into a string. \xe2\x80\xa60AkClose a prepared statement.CnGet a FlightInfo for executing an already created prepared \xe2\x80\xa6CmConvert parquet schema to arrow schema including optional \xe2\x80\xa6DeCreate a visual representation of <code>RecordBatch</code>es with \xe2\x80\xa60DkCreate a visual representation of <code>ArrayRef</code> with formatting \xe2\x80\xa60BjActionClosePreparedStatementRequestvariantChRequest message for the \xe2\x80\x9cClosePreparedStatement\xe2\x80\x9d \xe2\x80\xa60BjActionCreatePreparedStatementResultvariantClWrap the result of a \xe2\x80\x9cCreatePreparedStatement\xe2\x80\x9d or \xe2\x80\x9c\xe2\x80\xa60CnIf the filter selects more than this fraction of rows, use \xe2\x80\xa6CnThe schema for GetTables with <code>table_schema</code> columnCmAppend views to self.views, copying data from the buffers \xe2\x80\xa6BaSigned comparison of bytes arraysCeCreate a prepared statement from given SQL statement.ClComputes the logical nulls for a sparse union, optimized \xe2\x80\xa6ClConvert the value at a specific index in the given array \xe2\x80\xa6Chgiven a Bytes buffer, try to read out a bloom filter \xe2\x80\xa6CfSets optional length of variable length data in bytes.ClVerifies that a buffer of bytes contains a size prefixed \xe2\x80\xa6BkActionCreatePreparedStatementRequestvariantCiRequest message for the \xe2\x80\x9cCreatePreparedStatement\xe2\x80\x9d \xe2\x80\xa60AeDefault value for \xe2\x80\xa60ChMutates writer metadata by storing the encoded Arrow \xe2\x80\xa6ClAppend views to self.views, updating the buffer index if \xe2\x80\xa6CaParse human-readable interval string to Arrow \xe2\x80\xa60EhValidate that <code>precision</code> and <code>scale</code> are valid for <code>T</code>00CfBuilder for creating VariantArray output (for path \xe2\x80\xa6FdCreates a <code>PrimitiveArray</code> of a given <code>size</code> and <code>null_density</code> \xe2\x80\xa6CjCreates a random (but fixed-seeded) array of rand size \xe2\x80\xa6CfSets dictionary page size limit for a specific column.DaThe schema for GetTables without <code>table_schema</code> columnCmWrites out the offsets for an array of offsets, including \xe2\x80\xa6CjAppend the unencoded byte array data bytes of the next \xe2\x80\xa6ChPack a data type into a dictionary array passing the \xe2\x80\xa6CiAssumes, without verification, that a buffer of bytes \xe2\x80\xa6CkVerifies, with the given verifier options, that a buffer of1010CgRetrieves a boolean value indicating whether a data \xe2\x80\xa60CfRetrieves the supported transactions isolation levels.0ChRetrieves a boolean value indicating whether the SQL \xe2\x80\xa60CnCreates a random (but fixed-seeded) array of a given size, \xe2\x80\xa6DkCreate a <code>Buffer</code> where <code>value</code> slice is repeated \xe2\x80\xa6CbConverts a schema to an IPC message along with \xe2\x80\xa6DjSets whether to write <code>Statistics</code> in the page header for a \xe2\x80\xa687CnTakes/filters a fixed size list array\xe2\x80\x99s inner data using \xe2\x80\xa6BoActionCreatePreparedSubstraitPlanRequestvariantCmRequest message for the \xe2\x80\x9cCreatePreparedSubstraitPlan\xe2\x80\x9d \xe2\x80\xa6099CjC Data Integration entrypoint to export a batch from a \xe2\x80\xa6BaCreate a prepared substrait plan.ClRetrieves a boolean value indicating whether, when table \xe2\x80\xa60CmC Data Integration entrypoint to export the schema from a \xe2\x80\xa6Ckgiven an initial offset, and a byte buffer, try to read \xe2\x80\xa6CmRetrieves a boolean value indicating whether transactions \xe2\x80\xa60CiRetrieves a boolean value indicating whether invoking \xe2\x80\xa60ClA top-level variant shredder \xe2\x80\x93 appending NULL produces \xe2\x80\xa6ClCreates longer string array with same prefix, the prefix \xe2\x80\xa6CiCreates a primitive row builder, returning Err if the \xe2\x80\xa6CiAssumes, without verification, that a buffer of bytes \xe2\x80\xa6CkVerifies, with the given verifier options, that a buffer ofCnReturns an int32 bitmask value concurrency types supported \xe2\x80\xa6000CjCreates longer string view array with same prefix, the \xe2\x80\xa6CdA C-ABI for exporting a RecordBatch from a JSON fileCgCast the array from interval day time to month day nanoCfA C-ABI for exporting an Arrow schema from a JSON fileDgreturn an output array that has <code>value</code> in all locations \xe2\x80\xa60CiCast the array from interval year month to month day nano6666EeCreates a random <code>GenericBinaryArray</code> of a given <code>size</code> and \xe2\x80\xa6EeCreates a random <code>GenericStringArray</code> of a given <code>size</code> and \xe2\x80\xa6CdA C-ABI to compare a RecordBatch against a JSON fileCfA C-ABI to compare an Arrow schema against a JSON file")