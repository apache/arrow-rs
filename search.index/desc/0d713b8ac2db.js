rd_("Bg<code>f16</code> Euler\xe2\x80\x99s number (\xe2\x84\xaf)0CfThe underlying value type of <code>Self::Values</code>CbThe concrete type of reader returned by this traitBkThe physical type of the Parquet data type.CkCalculate the final mmin and mmax values for geometries \xe2\x80\xa6AhUnion of all m intervalsCdCalculate the final xmin and xmax for geometries \xe2\x80\xa6CdCalculate the final ymin and ymax for geometries \xe2\x80\xa6AhUnion of all y intervalsCdCalculate the final zmin and zmax for geometries \xe2\x80\xa6AhUnion of all z intervalsBjUse a Confluent Schema Registry 32-bit ID.CgRepresents a 32 bit fingerprint not based on a hash \xe2\x80\xa6AlA 32-bit Schema Registry ID.Clno additional data is needed (e.g. the indexes weren\xe2\x80\x99t \xe2\x80\xa6AjContains the success value000000000000000000BgAn enumeration of arithmetic operationsBl<code>f16</code> Archimedes\xe2\x80\x99 constant (\xcf\x80)0AnAn Arrow <code>TimeZone</code>00Ae0.1.0 (October 2016).Ch0.2.0 (February 2017). Non-backwards compatible with V1.Cj0.3.0 -&gt; 0.7.1 (May - December 2017). Non-backwards \xe2\x80\xa6Cj= 0.8.0 (December 2017). Non-backwards compatible with V3.Ci= 1.0.0 (July 2020). Backwards compatible with V4 (V5 \xe2\x80\xa6nXz compressionDgPerform <code>left == right</code> operation on two <code>Datum</code>.0BoReturns a \xe2\x80\x9ccompacted\xe2\x80\x9d version of this array0DiPerform <code>left &gt; right</code> operation on two <code>Datum</code>.0kUpper bound0BfA unique identifier for the dictionaryBhThe unique identifier for the dictionaryCnThe known dictionary id in the application where this data \xe2\x80\xa6AnReturns id value for the type.DiThe field\xe2\x80\x99s <code>id</code>. May be computed from delta or directly \xe2\x80\xa6CdChecks whether the message is of type <code>M</code>kLower bound0DiPerform <code>left &lt; right</code> operation on two <code>Datum</code>.0CiPerform an infallible binary operation on potentially \xe2\x80\xa6DgPerforms <code>OR</code> operation on two arrays. If either left or \xe2\x80\xa600oSelect all rowsCoAn implementation of the protobuf <code>Any</code> message typeBhAn opaque command to generate a dataset.0BnDay of the month, in range <code>1..=31</code>0eA Day10Cm\xe2\x80\x9cEnd of file\xe2\x80\x9d Parquet error. Returned when IO related \xe2\x80\xa6BjWrite Bloom Filters at the end of the file0AhContains the error value000000000000000000CgA 32-bit float or the low-bits of a 64-bit float if \xe2\x80\xa6AoThe high bits of a 64-bit floatAgA 32-bit signed integerAfThe high bits of a i64Ajint: 32-bit signed integerAlRepresents an integer value.AfSigned integer INT_32.0AeDecoding a key stringAmLZ4 compression, (deprecated)oLZO compressioncLZ4cLZOCha map is converted as an optional field containing a \xe2\x80\xa6ChA map is converted as an optional field containing a \xe2\x80\xa6CmThe maximum value that can be represented by this integer \xe2\x80\xa6BiThe maximum value that can be represented000100BeLargest finite <code>f16</code> value0B`Use the 128-bit MD5 fingerprint.Ak128-bit MD5 message digest.AjA 128-bit MD5 fingerprint.CmThe minimum value that can be represented by this integer \xe2\x80\xa6BiThe minimum value that can be represented000100BfSmallest finite <code>f16</code> value0CeA Map is a logical nested type that is represented asCfAvro map with value\xe2\x80\x91site nullability and nested planCkMap type: a mapping from strings to values of the same typeClRepresents a JSON object default for an Avro map/struct, \xe2\x80\xa6CiRepresents Avro map type, maps to Arrow\xe2\x80\x99s Map data typeeA map555AiA map of key-value pairs.Dl<code>Map</code> represents a map which contains a list of key-&gt;value \xe2\x80\xa60Bc<code>f16</code> Not a Number (NaN)0Cj\xe2\x80\x9cNot yet implemented\xe2\x80\x9d Parquet error. Returned when \xe2\x80\xa6BhNo dictionary was present in the trackerAkThe multiplicative identityDgThe multiplicative identity for this integer type, i.e. <code>1</code>.CaThe multiplicative identity, i.e. <code>1</code>.022200100Ab<code>f16</code> 10C`Group packed run length encoding. Usable for \xe2\x80\xa6BaGroup packed run length encoding.BaA reference to another named type1BeA comparable representation of a row.Cd<code>Row</code> represents a nested Parquet record.0AoUTF-8 encoded character string.0CkAdditional data is needed, with the range that are requiredCnPerform <code>lhs + rhs</code>, returning an error on overflow0CmInterval addition following Postgres behavior. Fractional \xe2\x80\xa6CjAdds the values from the other histogram to this histogramBjGet a flags value with all known bits set.CnCreate a <code>ProjectionMask</code> which selects all columnsDhPerforms <code>AND</code> operation on two arrays. If either left or \xe2\x80\xa600CkContains Row enum that is used to represent record in Rust.C`Set this sort options to sort in ascending order00CiA scratch buffer when a read is split across multiple \xe2\x80\xa60A`Temporary bufferAjThe underlying data buffer00CjOpaque value used to express a command. Should only be \xe2\x80\xa60BkComparison kernels for <code>Array</code>s.0DdOrder <code>Int96</code> correctly for (deprecated) timestamp types.CmThe 32-bit CRC checksum for the page, to be be calculated \xe2\x80\xa60DhA custom CRS. If unset the defaults to <code>OGC:CRS84</code>, which \xe2\x80\xa6CnA custom CRS. If unset the defaults to <code>OGC:CRS84</code>.Aowhere the iterator currently isAnPerform <code>lhs / rhs</code>0A`N-digit divisionBlOptional documentation string for the recordBeOptional documentation for this fieldCaOptional documentation string describing the enumoEnd line numberDmReturns an error for a given byte <code>b</code> and context <code>ctx</code>CfA 16-bit floating point type implementing the IEEE \xe2\x80\xa600CfContains declarations to bind to the C Data Interface.0000C`The method to format a field at the given index.BhGet Display reference for a given field.1CmFalse positive probability. This should be always between \xe2\x80\xa6nGenerated codeDjReturns the value for this <code>Datum</code> and a boolean indicating \xe2\x80\xa600CeReturns the value for a given metadata key if presentAnReturns the inferred data typeCdgRPC trailers that are known at the end of a stream.BlReturns the tape element at <code>idx</code>BoReturns the histogram value at the given index.CiReturn the data for this column chunk at the given offsetDgReturns element by index in <code>0..self.len()</code>, if any. May \xe2\x80\xa6CmAttempts to retrieve a dictionary entry by index, failing \xe2\x80\xa6CnReturns the value of the field with the specified name, if \xe2\x80\xa6210EgReturn the value of <code>keys</code> (the dictionary key) at index <code>i</code>, \xe2\x80\xa6Bc<code>Field</code> name for map key0100CiReturns the length (i.e., number of elements) of this \xe2\x80\xa6C`Returns the number of array slots in the builderCjThe length of the dictionary is the length of the keys \xe2\x80\xa6AjReturns the current length3B`Sets the length of the ArrayDataBaReturns the length of this array.B`Returns the length of the bufferBhReturn the number of bits in the buffer.CgReturns the current number of array elements in the \xe2\x80\xa6CaReturns the number of binary slots in the builderCaReturns the number of array slots in the builder.599999999CfReturns the length of logical array encoded by the \xe2\x80\xa6:0::;:Agthe length of the arrayBiReturns the number of bytes in the bufferClReturns the length (the number of bytes written) in this \xe2\x80\xa6BlReturns the number of elements in the bufferCmReturns the length of this <code>BooleanBuffer</code> in bitsCjReturns the length of this <code>NullBuffer</code> in bitsCmReturns the logical length of the run-ends stored by this \xe2\x80\xa6B`Returns the number of partitionsCmReturns the number of fields in this <code>UnionFields</code>CiReturns the length (i.e., number of elements) of this \xe2\x80\xa6BaReturns the length of this array.CjThe length of the dictionary is the length of the keys \xe2\x80\xa61;C`Returns the number of array slots in the builderB`Returns the length of the bufferBhReturn the number of bits in the buffer.CgReturns the current number of array elements in the \xe2\x80\xa6CaReturns the number of binary slots in the builderCaReturns the number of array slots in the builder.55555555CfReturns the length of logical array encoded by the \xe2\x80\xa66066BhThe current number of slots in the array0>BiReturns the number of bytes in the bufferClReturns the length (the number of bytes written) in this \xe2\x80\xa6BlReturns the number of elements in the bufferCmReturns the length of this <code>BooleanBuffer</code> in bitsCmReturns the logical length of the run-ends stored by this \xe2\x80\xa69BjLength of the buffer before materializing.;0<CnThe number of bytes visible to this region. This is always \xe2\x80\xa6BnReturns the current number of buffered recordsAfThe number of elementsAgthe length of the arrayCiReturns the length (i.e., number of elements) of this \xe2\x80\xa6B`Sets the length of the ArrayData3AjReturns the current lengthClThe number of unflushed records, including the partially \xe2\x80\xa6B`Returns the number of partitionsCmReturns the number of fields in this <code>UnionFields</code>BgThe number of values in this collectionBbreturn the length of the histogramC`Returns the amount of bytes of the inner source.C`Returns the number of byte arrays in this bufferC`Return the total length of the full column chunkAiThe length of this bufferBjGets length of the underlying byte buffer.BeGet the number of fields in this row.BdGet the number of fields in this row0AoReturn the length of this arrayBiThe number of metadata dictionary entriesCdReturns the number of key-value pairs in this object210ClReturns the maximum value in the array, according to the \xe2\x80\xa600CnDEPRECATED: min and max value of the column. Use min_value \xe2\x80\xa6AnThe \xe2\x80\x98max UUID\xe2\x80\x99 (all ones).BgReturns the maximum of the two numbers.10AlThe midpoint of the intervalClReturns the minimum value in the array, according to the \xe2\x80\xa600BgReturns the minimum of the two numbers.0CnPerform <code>lhs * rhs</code>, returning an error on overflow0CkNumber of distinct values, should be non-negative to be \xe2\x80\xa6DfNegates each element of  <code>array</code>, returning an error on \xe2\x80\xa60DgPerform <code>left != right</code> operation on two <code>Datum</code>.0DgCreate a new <code>GenericByteArray</code> from the provided parts, \xe2\x80\xa6ClAttempt to create a new DictionaryArray with a specified \xe2\x80\xa6DiReturns a new MutableArrayData with capacity to <code>capacity</code> \xe2\x80\xa6DbCreate a new <code>GenericListArray</code> from the provided partsB`Creates a new array data builderEdConstruct a <code>ByteView</code> for data <code>length</code> of bytes with the \xe2\x80\xa6DiCreate a new <code>PrimitiveArray</code> from the provided values and \xe2\x80\xa6DiCreates a new <code>BooleanBufferBuilder</code> with sufficient space \xe2\x80\xa6AlCreates a new empty builder.DeCreate a new builder with space for <code>capacity + 1</code> offsetsDeCreates a new builder with initial capacity for <em>at least</em> \xe2\x80\xa6DkCreate a new <code>GenericByteViewArray</code> from the provided parts, \xe2\x80\xa6BaCreate a new RecordBatchIterator.BnCreates a new <code>GenericByteBuilder</code>.BhCreates a new <code>StructBuilder</code>CbCreates a new <code>GenericByteViewBuilder</code>.DgCreate a new <code>BooleanArray</code> from the provided values and \xe2\x80\xa6EgCreate a new <code>FixedSizeBinaryArray</code> with <code>size</code> element size, \xe2\x80\xa6EeCreate a new <code>FixedSizeListArray</code> with <code>size</code> element size, \xe2\x80\xa6CjCreate a new <code>MapArray</code> from the provided partsCkCreate a new <code>NullArray</code> of the specified lengthDbCreate a new <code>StructArray</code> from the provided parts, \xe2\x80\xa6DfCreate a new <code>GenericListViewArray</code> from the provided partsBmCreates a new <code>RecordBatchOptions</code>CkCreate a new <code>Scalar</code> from an <code>Array</code>AmCreates a new boolean builderCaCreates a new <code>FixedSizeBinaryBuilder</code>DgCreates a new <code>FixedSizeListBuilder</code> from a given values \xe2\x80\xa6CkCreates a new <code>FixedSizeBinaryDictionaryBuilder</code>DkCreates a new <code>GenericListBuilder</code> from a given values array \xe2\x80\xa6BeCreates a new <code>MapBuilder</code>AjCreates a new null builderBeCreates a new primitive array builderCfCreates a new <code>PrimitiveDictionaryBuilder</code>.BnCreates a new <code>PrimitiveRunBuilder</code>CgCreates a new <code>GenericByteDictionaryBuilder</code>C`Creates a new <code>GenericByteRunBuilder</code>DiCreates a new <code>GenericListViewBuilder</code> from a given values \xe2\x80\xa6Aecreate a new iterator0Cmcreates a new <code>FFI_ArrowArray</code> from existing data.EbCreate a new <code>OffsetBuffer</code> from the provided <code>ScalarBuffer</code>ClAllocate a new MutableBuffer with initial capacity to be \xe2\x80\xa6FeCreate a new <code>ScalarBuffer</code> from a <code>Buffer</code>, and an <code>offset</code> and \xe2\x80\xa6FbCreate a new <code>BooleanBuffer</code> from a <code>Buffer</code>, an <code>offset</code> and \xe2\x80\xa6CmCreate a new <code>NullBuffer</code> computing the null countFcCreate a new <code>RunEndBuffer</code> from a <code>ScalarBuffer</code>, an <code>offset</code> \xe2\x80\xa6BhCreate a new <code>BatchCoalescer</code>BjCreates a new iterator from a BooleanArrayDkCreate a new <code>FilterBuilder</code> that can be used to construct a \xe2\x80\xa6BlCreate a new <code>SortOptions</code> structCkCreate a new IntervalParseConfig with the given default \xe2\x80\xa6BnCreate a new <code>IntervalMonthDayNano</code>BiCreate a new <code>IntervalDayTime</code>CkCreates a new field with the given name, data type, and \xe2\x80\xa6EaCreate a new <code>UnionFields</code> from a <code>Fields</code> and array of \xe2\x80\xa6BnCreates a new empty <code>SchemaBuilder</code>DoCreates a new <code>Schema</code> from a sequence of <code>Field</code> values.C`Creates a new <code>FFI_ArrowArrayStream</code>.ClCreate a from a byte array, and and an offset and length \xe2\x80\xa6DhCreate a new <code>BitChunks</code> from a byte array, and an offset \xe2\x80\xa6EdCreate a new <code>BitIterator</code> from the provided <code>buffer</code>, and \xe2\x80\xa6EeCreate a new <code>BitSliceIterator</code> from the provided <code>buffer</code>, \xe2\x80\xa6EhCreate a new <code>BitIndexIterator</code> from the provide <code>buffer</code>, and \xe2\x80\xa6CnCreate a new BitIndexU32Iterator from the provided buffer, \xe2\x80\xa6BfCreate a new <code>StringWriter</code>E`Create a new iterator for <code>&lt;limit&gt;</code> items, but that reports \xe2\x80\xa6BcCreates a new set of format optionsDgCreate a new <code>BooleanArray</code> from the provided values and \xe2\x80\xa6DgCreate a new <code>GenericByteArray</code> from the provided parts, \xe2\x80\xa6ClAttempt to create a new DictionaryArray with a specified \xe2\x80\xa6EgCreate a new <code>FixedSizeBinaryArray</code> with <code>size</code> element size, \xe2\x80\xa6EeCreate a new <code>FixedSizeListArray</code> with <code>size</code> element size, \xe2\x80\xa6DbCreate a new <code>GenericListArray</code> from the provided partsCjCreate a new <code>MapArray</code> from the provided partsCkCreate a new <code>NullArray</code> of the specified lengthDiCreate a new <code>PrimitiveArray</code> from the provided values and \xe2\x80\xa6DbCreate a new <code>StructArray</code> from the provided parts, \xe2\x80\xa6DkCreate a new <code>GenericByteViewArray</code> from the provided parts, \xe2\x80\xa6DfCreate a new <code>GenericListViewArray</code> from the provided partsCmcreates a new <code>FFI_ArrowArray</code> from existing data.Aecreate a new iteratorBaCreate a new RecordBatchIterator.BmCreates a new <code>RecordBatchOptions</code>CkCreate a new <code>Scalar</code> from an <code>Array</code>DiCreates a new <code>BooleanBufferBuilder</code> with sufficient space \xe2\x80\xa6AlCreates a new empty builder.DeCreate a new builder with space for <code>capacity + 1</code> offsetsDeCreates a new builder with initial capacity for <em>at least</em> \xe2\x80\xa6AjCreates a new null builderAmCreates a new boolean builderCaCreates a new <code>FixedSizeBinaryBuilder</code>DgCreates a new <code>FixedSizeListBuilder</code> from a given values \xe2\x80\xa6CkCreates a new <code>FixedSizeBinaryDictionaryBuilder</code>BnCreates a new <code>GenericByteBuilder</code>.DkCreates a new <code>GenericListBuilder</code> from a given values array \xe2\x80\xa6BeCreates a new <code>MapBuilder</code>BeCreates a new primitive array builderCfCreates a new <code>PrimitiveDictionaryBuilder</code>.BnCreates a new <code>PrimitiveRunBuilder</code>BhCreates a new <code>StructBuilder</code>CgCreates a new <code>GenericByteDictionaryBuilder</code>C`Creates a new <code>GenericByteRunBuilder</code>CbCreates a new <code>GenericByteViewBuilder</code>.DiCreates a new <code>GenericListViewBuilder</code> from a given values \xe2\x80\xa6BeCreates a new <code>FieldData</code>.C`Creates a new <code>FFI_ArrowArrayStream</code>.Aecreate a new iteratorBnCreate a new <code>IntervalMonthDayNano</code>BiCreate a new <code>IntervalDayTime</code>CgCreates a new <code>ReaderBuilder</code> with defaults:BkCreate a new builder with default settings.DfConvenience constructor to create a new <code>AvroStreamWriter</code>.DiConvenience constructor \xe2\x80\x93 same as <code>WriterBuilder::build</code> \xe2\x80\xa6CiCreate a new builder from the Avro root and Arrow schema.CiCreates a new <code>AvroSchema</code> from a JSON string.CoCreates an empty <code>SchemaStore</code> using the default \xe2\x80\xa6ClCreate a new <code>AvroDataType</code> with the given parts.DfCreates a new <code>AvroFieldBuilder</code> for a given writer schema.CmCreate a new <code>NullBuffer</code> computing the null countEbCreate a new <code>OffsetBuffer</code> from the provided <code>ScalarBuffer</code>ClAllocate a new MutableBuffer with initial capacity to be \xe2\x80\xa6FeCreate a new <code>ScalarBuffer</code> from a <code>Buffer</code>, and an <code>offset</code> and \xe2\x80\xa6FbCreate a new <code>BooleanBuffer</code> from a <code>Buffer</code>, an <code>offset</code> and \xe2\x80\xa6FcCreate a new <code>RunEndBuffer</code> from a <code>ScalarBuffer</code>, an <code>offset</code> \xe2\x80\xa6DeCreates a new builder with initial capacity for <em>at least</em> \xe2\x80\xa6AlCreates a new empty builder.DeCreate a new builder with space for <code>capacity + 1</code> offsetsDiCreates a new <code>BooleanBufferBuilder</code> with sufficient space \xe2\x80\xa6BnTakes ownership of an allocated memory region,ClCreate a from a byte array, and and an offset and length \xe2\x80\xa6DhCreate a new <code>BitChunks</code> from a byte array, and an offset \xe2\x80\xa6EdCreate a new <code>BitIterator</code> from the provided <code>buffer</code>, and \xe2\x80\xa6EeCreate a new <code>BitSliceIterator</code> from the provided <code>buffer</code>, \xe2\x80\xa6EhCreate a new <code>BitIndexIterator</code> from the provide <code>buffer</code>, and \xe2\x80\xa6CnCreate a new BitIndexU32Iterator from the provided buffer, \xe2\x80\xa6BnCreate a new <code>IntervalMonthDayNano</code>BiCreate a new <code>IntervalDayTime</code>BcCreates a new set of format optionsCkCreate a new IntervalParseConfig with the given default \xe2\x80\xa6CiCreate a new builder for configuring CSV parsing options.CgCreate a new CsvWriter from a writable object, with \xe2\x80\xa6CiCreate a new builder for configuring CSV writing options.Cmcreates a new <code>FFI_ArrowArray</code> from existing data.B`Creates a new array data builderDiReturns a new MutableArrayData with capacity to <code>capacity</code> \xe2\x80\xa6=<;:EdConstruct a <code>ByteView</code> for data <code>length</code> of bytes with the \xe2\x80\xa6FaCreate a new <code>SchemaAsIpc</code> from a <code>Schema</code> and <code>IpcWriteOptions</code>BfCreate a new Action with type and bodyDdCreate a new <code>CancelFlightInfoRequest</code>, providing the \xe2\x80\xa6DgCreate a new <code>RenewFlightEndpointRequest</code>, providing the \xe2\x80\xa6BkCreate a new Result with the specified bodyDfCreate a new <code>CancelFlightInfoResult</code> from the provided \xe2\x80\xa6DjCreate a new, empty <code>FlightInfo</code>, describing where to fetch \xe2\x80\xa6DjCreate a new, empty <code>PollInfo</code>, providing information for a \xe2\x80\xa6DeCreate a new, empty <code>FlightEndpoint</code> that represents a \xe2\x80\xa6B`Create a new <code>Ticket</code>BeCreate a new <code>FlightData</code>.CnCreates a client client with the provided <code>Channel</code>DaCreate a new wrapper around the stream of <code>FlightData</code>DgCreate a new <code>FlightRecordBatchStream</code> from a decoded streamCcCreate a new <code>FlightDataEncoderBuilder</code>.AnCreate a FallibleRequestStreamClCreates a new FlightSql client that connects to a server \xe2\x80\xa6AmCreate a new SQL info builderChCreate a new instance of <code>GetCatalogsBuilder</code>CiCreate a new instance of <code>GetDbSchemasBuilder</code>CjCreate a new instance of <code>GetTableTypesBuilder</code>CfCreate a new instance of <code>GetTablesBuilder</code>CnCreate a new instance of <code>XdbcTypeInfoDataBuilder</code>.AkCreate a new schema encoderDgCreate a new <code>FileDecoder</code> with the given schema and versionCcOptions for creating a new <code>FileReader</code>.BgCreate a new <code>StreamDecoder</code>BlCreate a new <code>DictionaryTracker</code>.E`Create a new <code>ReaderBuilder</code> with the provided <code>SchemaRef</code>BdCreates a new <code>ValueIter</code>DjCreate a new <code>TapeDecoder</code> with the provided batch size and \xe2\x80\xa6CjCreate a new builder for configuring JSON writing options.AfConstruct a new writerBhCreate a new encoder with a null buffer.BlCreate a new <code>SortOptions</code> structCoCreate a new <code>RowConverter</code> with the provided schemaBlCreate a new column with the given data type2CkCreates a new field with the given name, data type, and \xe2\x80\xa6CaReturns a new <code>Opaque</code> extension type.BjReturns a new <code>OpaqueMetadata</code>.EaCreate a new <code>UnionFields</code> from a <code>Fields</code> and array of \xe2\x80\xa6BnCreates a new empty <code>SchemaBuilder</code>DoCreates a new <code>Schema</code> from a sequence of <code>Field</code> values.BhCreate a new <code>BatchCoalescer</code>C`Create a new <code>GenericInProgressArray</code>CbCreate a new <code>InProgressPrimitiveArray</code>ClCapacity controls the number of unique buckets allocated \xe2\x80\xa6BjCreates a new iterator from a BooleanArrayDkCreate a new <code>FilterBuilder</code> that can be used to construct a \xe2\x80\xa6CkReturns a new instance of <code>GenericColumnWriter</code>.ClCreates new column reader based on column descriptor and \xe2\x80\xa6BlCreate a new <code>ColumnValueDecoder</code>DdCreates <code>CompressedPage</code> from a page with potentially \xe2\x80\xa6CaCreates new spec with default page write metrics.CjCreate a new builder from a file metadata, with no row \xe2\x80\xa6BkCreates new builder from schema descriptor.BjCreates new column chunk metadata builder.BcCreates a new column index builder.BcCreates a new offset index builder.CmCreates Parquet metadata from file metadata and a list of \xe2\x80\xa6AkCreate a new key value pairAjCreates new file metadata.DlCreate a new <code>ParquetMetaDataWriter</code> to write to <code>buf</code>BoCreate a new <code>ParquetMetaDataReader</code>D`Create a new <code>TrackedWrite</code> from a <code>Write</code>AhCreates new file writer.CiCreates a new <code>SerializedRowGroupWriter</code> with:EeCreate a new <code>SerializedColumnWriter</code> from a <code>ColumnWriter</code> \xe2\x80\xa6AhCreates new page writer.CcCreates a page iterator for all row groups in file.BhCreates new statistics for a column typeAmCreates new typed statistics.DdCreate a new <code>WriterProperties</code> with the default settingsCmCreates file reader from a Parquet file. Returns an error \xe2\x80\xa6CgCreates new row group reader from a file, row group \xe2\x80\xa6ClCreates a new serialized page reader from a chunk reader \xe2\x80\xa6kNew builderAfCreate a new converterDjCreate a new <code>DeltaByteArrayDecoder</code> with the provided data \xe2\x80\xa6DkCreate a new <code>DictIndexDecoder</code> with the provided data page, \xe2\x80\xa6DiCreate a new <code>ParquetRecordBatchStreamBuilder</code> for reading \xe2\x80\xa6DhCreate a new <code>ParquetRecordBatchReader</code> that will read at \xe2\x80\xa6DfCreate a new <code>ArrowReaderOptions</code> with the default settingsEeCreate a new <code>ArrowPredicateFn</code> that invokes <code>f</code> on the columnsE`Create a new <code>RowFilter</code> from an array of <code>ArrowPredicate</code>BoCreate a new iterator to extract the statistics0000000000000CnCreates a new instance of <code>ArrowReaderMetricsInner</code>DfCreate a new <code>LimitedReadPlanBuilder</code> from the existing \xe2\x80\xa6CoCreate a <code>ReadPlanBuilder</code> with the given batch sizeDhCreates a new <code>ArrowWriterOptions</code> with the default settings.DiCreate a new <code>ArrowRowGroupWriterFactory</code> for the provided \xe2\x80\xa6DhCreate the fallback encoder for the given <code>ColumnDescPtr</code> \xe2\x80\xa6;DcCreates a new <code>ParquetObjectReader</code> for the provided \xe2\x80\xa6DdCreate a new <code>ParquetObjectWriter</code> that writes to the \xe2\x80\xa6BbCreate a new RowGroupReaderBuilderAgCreate a new FilterInfoBmCreate a new <code>GenericRecordReader</code>BoCreates new INT96 type struct with no data set.BhCreates new byte array with no data set.CaCreates new tree builder with default parameters.BlCreates a new iterator of <code>Row</code>s.EbConstructs a <code>Row</code> from the list of <code>fields</code> and returns it.BeCreates new triplet for column readerChCreates new typed triplet iterator based on provided \xe2\x80\xa6CjCreates new primitive type builder with provided field \xe2\x80\xa6ChCreates new group type builder with provided field name.CcCreates new column path from vector of field names.BmCreates new descriptor for leaf-level column.CbCreates new schema descriptor from Parquet schema.DiCreate a new <code>ThriftSliceInputProtocol</code> using the bytes in \xe2\x80\xa6DkCreate a new <code>ThriftCompactOutputProtocol</code> wrapping the byte \xe2\x80\xa6DeCreate a <code>TCompactOutputProtocol</code> that writes bytes to \xe2\x80\xa6CjCreates a new list builder, nested on top of the given \xe2\x80\xa6CkCreates a new read-only metadata builder from the given \xe2\x80\xa6ClCreates a new object builder, nested on top of the given \xe2\x80\xa6CdConstruct a ValueBuffer that will write to a new \xe2\x80\xa6CnCreates a new ParentState instance. The value and metadata \xe2\x80\xa6CgCreate a new VariantBuilder with new underlying buffersCjCreate a new <code>VariantPath</code> from a vector of \xe2\x80\xa6DiInterprets <code>bytes</code> as a variant metadata instance, without \xe2\x80\xa6CmAttempts to interpret a metadata and value buffer pair as \xe2\x80\xa6EbCreate a new <code>ShreddingState</code> from the given <code>value</code> and \xe2\x80\xa6EfCreate a new <code>BorrowedShreddingState</code> from the given <code>value</code> \xe2\x80\xa6DiCreate a new <code>VariantValueArrayBuilder</code> with the specified \xe2\x80\xa6ClConstruct default options to get the specified path as a \xe2\x80\xa6BhCreate an interval from lo and hi values7:98=<;56CoCreates a new iterator over the given <code>VariantArray</code>54ChCreates a new instance from a metadata builder and a \xe2\x80\xa643AoThe \xe2\x80\x98nil UUID\xe2\x80\x99 (all zeros).0DgPerforms unary <code>NOT</code> operation on an arrays. If value is \xe2\x80\xa600DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6CmMacro as a shortcut to generate \xe2\x80\x98not yet implemented\xe2\x80\x99 \xe2\x80\xa6ChContains functions and function factories to compare \xe2\x80\xa6BdPointer into <code>data</code> valid0BmThe raw pointer to be beginning of the regionAnPerform <code>lhs % rhs</code>0BiReturns the row at index <code>row</code>CaGet borrowed <code>Row</code> from owned version.CfRegisters a schema with the store and the provided \xe2\x80\xa6GkCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is \xe2\x80\xa6CmSupport for execute SQL queries using Apache Arrow Flight \xe2\x80\xa6CnPerform <code>lhs - rhs</code>, returning an error on overflow0CeThe intersection of a source flags value with the \xe2\x80\xa6CaReturns the sum of values in the primitive array.00hUse TLS.BaGet a <code>Urn</code> formatter.0Df<code>zip</code>: Combine values from two arrays based on boolean maskBdZip two arrays by some boolean mask.CnCreating output array based on input boolean array and the \xe2\x80\xa6102BfConcatenates one or more parquet filesAiAn embedded BSON documentCgA BSON document embedded within a single BINARY column.AiDecoding the message bodyCfBoolean value (<code>true</code>, <code>false</code>).0A`A BSON document.AeSigned integer INT_8.0CnIndicates that the column can be used in a WHERE clause if \xe2\x80\xa60fA DateCjA date stored as days since Unix epoch, encoded as the \xe2\x80\xa6BcThe decoder produced an output itemCiDate is either a 32-bit or 64-bit signed integer type \xe2\x80\xa6BgA date stored as days since Unix epoch.CnDate without a time of day, stores the number of days from \xe2\x80\xa60AkPrimitive (type_id=1): DATE00ChNo more predicates returns the row filter and cache infoBlan enum is converted into a BYTE_ARRAY fieldBlAn enum is converted into a BYTE_ARRAY fieldDgAvro <code>enum</code> encoder: writes the key (int) as the enum index.CoAvro enum; maps to Arrow Dictionary&lt;Int32, Utf8&gt; with \xe2\x80\xa6B`Enum type: a set of named valuesAjRepresents an enum symbol.BnRepresents an Avro enum, maps to Arrow\xe2\x80\x99s \xe2\x80\xa6nAn enumerationAkA set of predefined values.B`Fail if the table does not existB`Fail if the table already exists10CkIndicates that the column can be used in a WHERE clause \xe2\x80\xa60AlCompute levels and null maskA`Gzip compressiondGZipBmHour of the day, in range <code>0..=23</code>0gAn Hour10BjUse an Apicurio Schema Registry 64-bit ID.CgRepresents a 64 bit fingerprint not based on a hash \xe2\x80\xa6AlA 64-bit Schema Registry ID.CnAt the start of a new row group, or the end of the parquet \xe2\x80\xa6AgA signed 8-bit integer.00BePrimitive (type_id=1): INT(8, SIGNED)00BmThe Arrow type of the element being accessed.00IhCan be one of <code>bool</code>, <code>i32</code>, <code>i64</code>, <code>Int96</code>, <code>f32</code>, <code>f64</code>, <code>ByteArray</code>, \xe2\x80\xa6AiAn embedded JSON documentCeA JSON document embedded within a single UTF8 column.BbThe extension type for \xe2\x80\x98JSON\xe2\x80\x99.0BiThe extension type for <code>JSON</code>.0A`A JSON document.Cka list is converted into an optional field containing a \xe2\x80\xa6CkA list is converted into an optional field containing a \xe2\x80\xa6Ak<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x87 20AmList and LargeList data typesCfA list of some logical data type with variable length.CbArray with item\xe2\x80\x91site nullability and nested planCkRepresents Avro array type, maps to Arrow\xe2\x80\x99s List data \xe2\x80\xa63oDecoding a listBcA row converter for the child fieldBcThe row encoding of the child array55lA list arrayAcA list of elements.Dh<code>List</code> represents a list which contains an array of elements.AfArray (type_id=4): N/A100Aklong: 64-bit signed integerAhRepresents a long value.AfSigned integer INT_64.0CfOnly compute null bitmask - requires max level to be 1BiThe name identifying this extension type.ClSometimes reading page index from parquet file will only \xe2\x80\xa6CkNot defined in the spec, used internally to indicate no \xe2\x80\xa6iNo value.0CgNone (no data was sent in the corresponding FlightData)B`Unknown/not indicated/no supportCgIndicates that column cannot be used in a WHERE clause.10CnNo dictionary was written, the dictionary was identical to \xe2\x80\xa6nSelect no rowsAfCompute no statistics.oNo compression.AeCompute no statisticsiNull typennull: no valueAhRepresents a null value.CkRepresents Avro null type, maps to Arrow\xe2\x80\x99s Null data typeCjThese are stored in the flatbuffer in the Type union belownA null literal55kNull value.0AdPrimitive type: Null00CeCompute page-level and column chunk-level statistics.AhParquet Page definition.BmCompute page-level and chunk-level statisticsCnA named path that identifies a dataset. A path is composed \xe2\x80\xa60ChA row-oriented representation of arrow data, that is \xe2\x80\xa6AlSalt as defined in the spec.AkA split block Bloom filter.AkDo not read the page index.0BbSome value of type <code>T</code>.0AdDecoding sync markerAcA decoded JSON tapeCiTime is either a 32-bit or 64-bit signed integer type \xe2\x80\xa6CfA time stored as <code>TimeUnit</code> since midnight.CjPrimitive (type_id=1): TIME(isAdjustedToUTC=false, MICROS)00nA true literalAfA type with attributesDcA type definition that is not a variant of <code>ComplexType</code>CkTop-level Type value, enabling extensible type-specific \xe2\x80\xa6ClTypes supported by Parquet.  These types are intended to \xe2\x80\xa6BaRepresentation of a Parquet type.AkTypes supported by Parquet.AiUnsigned integer UINT_32.0BlThe <code>TimeUnit</code> of this timestamp.00Caa BYTE_ARRAY actually contains UTF8 encoded charsCbA BYTE_ARRAY actually contains UTF8 encoded chars.ChA variable-length string in Unicode with UTF-8 encoding.CcString data represented as UTF-8 encoded bytes, \xe2\x80\xa6AkUnicode with UTF-8 encoding22DgAvro <code>uuid</code> logical type encoder (string with RFC\xe2\x80\x914122 \xe2\x80\xa6AnAvro UUID logical type (fixed)CnRepresents Avro Uuid type, a FixedSizeBinary with a length \xe2\x80\xa6BiThe extension type for <code>UUID</code>.000gA UUID.AkPrimitive (type_id=1): UUIDBgA Universally Unique Identifier (UUID).1010Dhweek of the year, in range <code>1..=53</code>, computed as per ISO 86010fA Week10mCalendar year0fA Year10AeThe additive identityDaThe additive identity for this integer type, i.e. <code>0</code>.BjThe additive identity i.e. <code>0</code>.022200100Ab<code>f16</code> 00A`ZSTD compressiondZstdBfA bounding box of geospatial instancesCkReturn the least number of bits needed to represent the \xe2\x80\xa6AnGet the underlying bits value.DfDefines helper functions for downcasting <code>dyn Array</code> to \xe2\x80\xa6DfCast <code>array</code> to the provided data type and return a new \xe2\x80\xa6DdCast kernels to convert <code>ArrayRef</code>  between supported \xe2\x80\xa611210CkReturns the ceil of <code>value</code>/<code>divisor</code>00CiReturns a reference to the underlying <code>Buffer</code>BhThe serialized objects within this blockAithe internal byte buffer.0AbDecoded field dataCcIn progress output array: The data being written TODfContains <code>ArrayData</code>, a generic representation of Arrow \xe2\x80\xa6AkThe data for the dictionaryAmThe data values in the columnBlThe location and size of the tensor\xe2\x80\x99s data0AcThe raw data bufferCjThe row\xe2\x80\x99s bytes, with the lifetime of the underlying \xe2\x80\xa6BoReturns slice of compressed buffer in the page.Df<code>DataRequest</code> tracks and holds data needed to construct \xe2\x80\xa6CcSubset of data pages included in this sparse chunk.CeReturns underlying data as slice of <code>u32</code>.AfReturns slice of data.B`Returns bytes of unscaled value.CaParses a date of the form <code>1997-01-31</code>nNumber of days000000000CaSet this sort options to sort in descending order00BaSeen the end of the inner stream?BoIs this stream done (inner is empty or errored)AnAPIs for reading parquet data.CmSearches for a field by name, returning it along with its \xe2\x80\xa60BjThe fractional component multiplied by \xe2\x80\xa6AoReturns the argument unchangedaConverts a <code>NonNilUuid</code> back into a <code>Uuid</code>.1111111111111111111111111111111ChConvert a parsed rust field AST in to a more easy to \xe2\x80\xa6222222222222222222222222222222212222222222222222222222222222222222222222222222222222222222222222222222222222222222222CiCreate the full interval (that intersects everything, \xe2\x80\xa6BjThe hash function used for Bloom filter. *BgThe hash function used for Bloom filterlServer host.AhA signed 256-bit integer00B`The currently available results.0CmValues are modelled after ODBC\xe2\x80\x99s SQLGetInfo() function. \xe2\x80\xa6CjThe result of the GetFlightInfo RPC that initiated the \xe2\x80\xa610Darequested <code>SqlInfo</code>s. If empty means return all infos.BaCalls <code>U::from(self)</codeiConstructs a new iterator0Aiconstructs a new iterator00CnConstructs a new iterator for iterating over the values of \xe2\x80\xa61111222DdReturns an iterator over the bits in this <code>BooleanBuffer</code>DaReturns an iterator over the bits in this <code>NullBuffer</code>4ClReturns an iterator over the fields and type ids in this \xe2\x80\xa6BcReturns an iterator over the chunksCmReturns an iterator over chunks of 64 bits represented as \xe2\x80\xa6776666666573410DgReturns an iterator over the <code>Row</code> in this <code>Rows</code>BfYield a set of contained flags values.49DcReturns an iterator over the <code>RowSelector</code>s for this \xe2\x80\xa6ClIterates over the values of this list. When working with \xe2\x80\xa6CkIterates over all dictionary entries. When working with \xe2\x80\xa6CnReturns an iterator of (name, value) pairs over the fields \xe2\x80\xa6CaReturns an iterator over the values in this array3210CkReturn a new <code>VariantPath</code> with element appended0dJSONDfReturns the primitive keys of this dictionary as an <code>Array</code>ClReturn an array view of the keys of this dictionary as a \xe2\x80\xa6CjReturns the keys of this <code>TypedDictionaryArray</code>BkReturns a reference to the keys of this mapBhReturns the key array builder of the map44CkThe keys of this dictionary. These are constructed from the0000000054300000000021BhPerform SQL <code>left LIKE right</code>0BmCreate a predicate for the given like patternCjProvide SQL\xe2\x80\x99s LIKE operators for Arrow\xe2\x80\x99s string arraysDgCreates a new instance suitable for a <code>ListBuilder</code>. The \xe2\x80\xa60EfLoads <code>ArrowReaderMetadata</code> from the provided <code>ChunkReader</code>, \xe2\x80\xa6BjDecode a signed long from <code>buf</code>DjA mask containing a <code>1</code> bit where the corresponding byte is \xe2\x80\xa6DjIf <code>Some</code>, a leaf column should be included if the value at \xe2\x80\xa6Cntakes as its argument a single unsigned 32-bit integer and \xe2\x80\xa6DiPerforms an unsigned multiplication of <code>a * b</code> returning a \xe2\x80\xa6B`Returns the name of this schema.DbReturns an immutable reference to the <code>Field</code>\xe2\x80\x99s name.1AbName of the recordBcName of the field within the recordA`Name of the enumAfName of the fixed typeBcReturns the name of this Avro fieldAgName for the savepoint.0AeThe name of the fieldBeThe name of the dictionary index typeBdName is not required, in i.e. a ListAoName of the dimension, optional;:AoName of the field in the schema0BaReturns this type\xe2\x80\x99s field name.AcReturns field name.AdReturns column name.AdReturns schema name.AhThe number of dimensionsClReturns the index of the next field at the same level as \xe2\x80\xa6CkEvaluates to the next element in the iterator or breaks \xe2\x80\xa6B`return the next statistics value0000000000000CmCreate a <code>ProjectionMask</code> which selects no columnsAgFormat string for nullsBiGet the value to represent null in outputB`Creates an all-null row builder.C`Packs a message into an <code>Any</code> messageCeContains Parquet Page definitions and page reader \xe2\x80\xa6AgEncoded dictionary dataCiData type representing a schema and its IPC write optionsClList of strings identifying a particular dataset. Should \xe2\x80\xa60C`Returns <code>ColumnPath</code> for this column.CeThe path of this column. For instance, \xe2\x80\x9ca.b.c.d\xe2\x80\x9d.AoReturn the inner path elements.AdWhat path to extract100CePeek at the head of this stream without advancing it.AiNested plan for this siteCfThe serialized substrait.Plan to create a prepared \xe2\x80\xa60AkA serialized substrait.Plan110CmThis module contains traits for memory pool traits and an \xe2\x80\xa6lServer port.CfExtends the buffer with a new item, increasing its \xe2\x80\xa6EgAppends a <code>FieldRef</code> to this <code>SchemaBuilder</code> without checking \xe2\x80\xa61CcAppend a <code>Row</code> to this <code>Rows</code>1B`Append a new element to the path0DcAssigns a rank to each value in <code>array</code> based on its \xe2\x80\xa6DiProvides <code>rank</code> function to assign a rank to each value in \xe2\x80\xa6110EhReads the next <code>RecordBatch</code> from the Avro file, or <code>Ok(None)</code> \xe2\x80\xa6AmNumber of bytes read into bufDnReads the next <code>RecordBatch</code> returning <code>Ok(None)</code> if EOFCoRead up to <code>num_values</code> values into <code>out</code>DkRead up to <code>len</code> values, returning the number of values read \xe2\x80\xa60DbReads current record as <code>Row</code> from the reader tree. \xe2\x80\xa6Cchow to handle cast failures, either return NULL \xe2\x80\xa600DhIf set to <code>true</code> any formatting errors will be written to \xe2\x80\xa6BfReturn size of this instance in bytes.000CgThe total number of elements in the <code>Tensor</code>BfThe number of bytes in this fixed typeBnReturns the size of this reservation in bytes.0AcLength of dimensionBbThe size of the message flatbufferBjReturns the size of this instance in bytes606666BiNumber of elements contained in the list.CbReturns the total size, in bytes, of the metadata.0DjSkip up to <code>to_skip</code> values, returning the number of values \xe2\x80\xa60BiIf true, skip <code>row_count</code> rowsB`Skip <code>row_count</code> rows1BnSkips <code>level_num</code> definition levelsDhSkip a field with type <code>field_type</code> recursively until the \xe2\x80\xa6CnSort the <code>ArrayRef</code> using <code>SortOptions</code>.BmDefines sort kernel for <code>ArrayRef</code>110oThe sync markerBdReturns the sync token for this fileAiFlushes underlying writerCkTake elements by index from Array, creating a new Array \xe2\x80\xa6AmDefines take kernel for Array110DgReturns true if the byte at <code>idx</code> in the original string \xe2\x80\xa6AmParses a time of any of formsD`Trims this <code>RowSelection</code> removing any trailing skipsBdThe type of this Avro data structureAmThe field\xe2\x80\x99s type definitionDfReturns the enum value of <code>type</code>, or the default if the \xe2\x80\xa6ClData type for this field. Not set if the current element \xe2\x80\xa6Cithe type of the page: indicates which of the *_header \xe2\x80\xa6AaThe unit of time.0BnReturns the current used memory from the pool.0Ca<code>check_valid_utf8</code> validation functionBmUtility functions for working with Arrow datadUUIDCnDon\xe2\x80\x99t preallocate inner buffers and rely on array growth \xe2\x80\xa6BeAn array in the arrow columnar format00CaArray type: a sequence of values of the same typeCfRepresents a JSON array default for an Avro array, \xe2\x80\xa6hAn array4AfUnderlying arrow errorAiBlock-based Bloom filter.CkIndicates that the column can be used In a WHERE clause \xe2\x80\xa60AaA file data blockCnEach block is 256 bits, broken up into eight contiguous \xe2\x80\x9c\xe2\x80\xa6BjThe extension type for <code>Bool8</code>.0CbThe extension type for <code>8-bit Boolean</code>.0Bgbytes: sequence of 8-bit unsigned bytesAiRepresents a bytes value.CjA continuous, fixed-size, immutable memory region that \xe2\x80\xa6AmDecimal backed by byte array.AeGeneral binary value.0AaBzip2 compressionCiCompute column chunk-level statistics but not page-level.CaCompute chunk-level statistics but not page-levelA`An Avro encodingCaA possibly <code>Scalar</code> <code>Array</code>00ChSend only new dictionary values since the last batch \xe2\x80\xa6CnDictionary was updated, ArrayData is the delta between old \xe2\x80\xa6CgThe two arrays are dictionary deltas of each other, \xe2\x80\xa6AbDense union layout00CiFull column chunk and the offset within the original fileCi64\xe2\x80\x91bit Rabin fingerprint as described in the Avro spec.lEmpty objectAhExact element-wise matcheErrorB`32-bit floating point type indexoA false literalCcDescribes a single column in a <code>Schema</code>.BdA field within a <code>Record</code>CmA field represents a named column in a record / row batch \xe2\x80\xa622CfAPI to represent a single field in a <code>Row</code>.BhAccess field with name <code>name</code>100CfAvro <code>fixed</code> encoder (raw bytes, no length)BcFixed type: a fixed-size byte arrayCaRepresents Avro fixed type, maps to Arrow\xe2\x80\x99s \xe2\x80\xa6AkA fixed length binary arrayCeFixed state: All rows have length <code>length</code>BfFlags for <code>FFI_ArrowSchema</code>Clfloat: single precision (32-bit) IEEE 754 floating-point \xe2\x80\xa6AiRepresents a float value.AkStatistics for Float columnBaIEEE 32-bit floating point value.0AlPrimitive (type_id=1): FLOAT00CgStruct, child elements are tuples of field-value pairs.0Ai32-bit integer type indexAi64-bit integer type indexBe96-bit integer type (timestamp) indexAgA signed integer value.CkA signed 8 bit integer value stored as INT32 physical type.BmAccess the list element at <code>index</code>00AhA signed 16-bit integer.00BfPrimitive (type_id=1): INT(16, SIGNED)00AhA signed 32-bit integer.CkRepresents Avro int type, maps to Arrow\xe2\x80\x99s Int32 data type11AkStatistics for Int32 columnBcDecimal backed by <code>i32</code>.BfPrimitive (type_id=1): INT(32, SIGNED)00AhA signed 64-bit integer.CkRepresents Avro long type, maps to Arrow\xe2\x80\x99s Int64 data \xe2\x80\xa611AkStatistics for Int64 columnBcDecimal backed by <code>i64</code>.BfPrimitive (type_id=1): INT(64, SIGNED)00AkStatistics for Int96 columnChRust representation for logical type INT96, value is \xe2\x80\xa6Al<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x87 100BfDecoding the <code>MAGIC</code> prefixCeResolves Avro type names to <code>AvroDataType</code>BoMonth in the year, in range <code>1..=12</code>0gA Month10CcType for owned corresponding to <code>Native</code>00CnDefault encoding. BOOLEAN - 1 bit per value. 0 is false; 1 \xe2\x80\xa6AaDefault encoding.AfDefault byte encoding.CnA type-erased function that compares two array for pointer \xe2\x80\xa6DdThe radix or base of the internal representation of <code>f16</code>0CaUse the 64-bit Rabin fingerprint (default for \xe2\x80\xa6Bk64\xe2\x80\x91bit CRC\xe2\x80\x9164\xe2\x80\x91AVRO Rabin fingerprint.AkA 64-bit Rabin fingerprint.AfSigned integer INT_16.0CbThe builder specific state used by nested builders00jGrammar isBgError from the underlying tonic libraryAhUnsigned integer UINT_8.0AjAn unsigned 8-bit integer.00AiUnsigned integer UINT_64.0CkA nested datatype that can represent slots of differing \xe2\x80\xa6B`Avro union, maps to Arrow Union.ClA union of multiple schemas (e.g., [\xe2\x80\x9cnull\xe2\x80\x9d, \xe2\x80\x9cstring\xe2\x80\xa6CeProvides mapping and shape info for resolving unions.ClRepresents Avro union type, maps to Arrow\xe2\x80\x99s Union data \xe2\x80\xa6CgA union is a complex type with children in Field By \xe2\x80\xa655EeWraps a type implementing <code>ToByteSlice</code> implementing <code>Hash</code> \xe2\x80\xa6AhDecoding a value payloadAnThe next state with no result.DgDefines the low-level <code>Allocation</code> API for shared memory \xe2\x80\xa60EdPerform a potentially vectored <code>op</code> on the provided <code>ArrayOrd</code>CeKernels for operating on <code>PrimitiveArray</code>s0C`Statically typed implementations of Arrow ArraysAnThe concrete array definitions0AfThe array to copy formoThe arrow arrayCjA complete, safe, native Rust implementation of Apache \xe2\x80\xa6EdAPI for reading/writing Arrow <code>RecordBatch</code>es and <code>Array</code>s \xe2\x80\xa6CgConverts this variant to a <code>u8</code> if possible.0CmContains Rust mappings for Thrift definition. This module \xe2\x80\xa6BdThe flatbuffers encoded record batchD`The bitwise or (<code>|</code>) of the bits in two flags values.AnDecoder for <code>Block</code>m8-bit BooleanCnCreates an <code>ArrayData</code>, consuming <code>self</code>CkBuilds this builder creating a new <code>UnionArray</code>.C`Construct the final <code>FilterPredicate</code>1DoBuild a <code>Reader</code> (OCF) from this builder and a <code>BufRead</code>.EgCreate a new <code>Writer</code> with specified <code>AvroFormat</code> and builder \xe2\x80\xa6ElBuild the <code>RecordEncoder</code> by walking the Avro <strong>record</strong> root in \xe2\x80\xa6C`Build an <code>AvroField</code> from the builderCkCreate a new <code>Reader</code> from a non-buffered readerB`Create a new <code>Writer</code>8FkTakes a <code>Stream</code> of <code>Result&lt;RecordBatch&gt;</code> and returns a <code>Stream</code> \xe2\x80\xa6DcBuilds a <code>RecordBatch</code> with the correct schema for a \xe2\x80\xa6CeEncode the contents of this list according to the \xe2\x80\xa6Dcbuilds a <code>RecordBatch</code> with the correct schema for a \xe2\x80\xa600Dcbuilds a <code>RecordBatch</code> for <code>CommandGetTables</code>CfCreate helper structure for handling xdbc metadata \xe2\x80\xa64C`Build <code>FileReader</code> with given reader.DcCreate a <code>Reader</code> with the provided <code>BufRead</code>EgCreate a new <code>Writer</code> with specified <code>JsonFormat</code> and builder \xe2\x80\xa6?BnCreates a new ParquetMetaData from the builderAjBuilds row group metadata.AmBuilds column chunk metadata.AnBuild and get the column indexCaBuild and get the thrift metadata of offset indexClFinalizes the configuration and returns immutable reader \xe2\x80\xa6ClFinalizes the configuration and returns immutable writer \xe2\x80\xa6BlSeal the builder and return the read optionsDdCreate a <code>ParquetPushDecoder</code> with the configured optionsCaBuild a new <code>ParquetRecordBatchStream</code>BmBuild a <code>ParquetRecordBatchReader</code>0CoCreate a final <code>ReadPlan</code> the read plan for the scan23CjCreates new root reader for provided schema and row group.DhCreates a new <code>PrimitiveType</code> instance from the collected \xe2\x80\xa6DcCreates a new <code>GroupType</code> instance from the gathered \xe2\x80\xa6AgBuild the final builderAkBuild the final value array10BcCrate private types for Byte ArraysCjThis module contains an implementation of a contiguous \xe2\x80\xa6AnA buffer of parsed string data0Ce(Only) the bytes that make up this metadata instance.0Clreturns true when every bit that is set in the result of \xe2\x80\xa6CdCheck if an AsBytes value is probably present or \xe2\x80\xa6CbAccesses the child array for <code>type_id</code>.BgReturns the child at the provided indexCgReturns the child of this schema at <code>index</code>.21010DkRegister this <code>Buffer</code> with the provided <code>MemoryPool</code>EbRegister this <code>MutableBuffer</code> with the provided <code>MemoryPool</code>10DoRegister this <code>Bytes</code> with the provided <code>MemoryPool</code>, \xe2\x80\xa6ChRestrict a value to a certain interval unless it is NaN.0BiClear all existing data from this buffer.0BjClears the current contents of the decoderDhClears this <code>TapeDecoder</code> in preparation to read the next \xe2\x80\xa6BnSets the length of this <code>Rows</code> to 0CmWrite footer or termination data, then mark the writer as \xe2\x80\xa6000BmExplicitly shut down and clean up the client.BnClose the prepared statement, so that this \xe2\x80\xa6DhClose this <code>ColumnWriter</code>, returning the metadata for the \xe2\x80\xa6CjFinalizes writes and closes the column writer. Returns \xe2\x80\xa6CmCloses resources and flushes underlying sink. Page writer \xe2\x80\xa6ChCloses and finalises file writer, returning the file \xe2\x80\xa6CfCloses this row group writer and returns row group \xe2\x80\xa6BnClose this <code>SerializedColumnWriter</code>C`Close and finalize the underlying Parquet writerDeClose this column returning the written <code>ArrowColumnChunk</code>AnClose and finalize the writer.CbData type conversions between Avro and Arrow typesCgReturns a reference to the codec used by this data typeCmCompressor library. For LZ4_FRAME, each compressed buffer \xe2\x80\xa6AcCompression codec *DhNumber of rows being selected based on this <code>FilterPredicate</code>BcThe number of objects in this blockBdThe number of elements in the column2Canumber of pages of this type with this encoding *CeContains utility functions for shifting Date objects.Decreate an empty <code>FFI_ArrowArray</code>, which can be used to \xe2\x80\xa6BlCreate an empty <code>FFI_ArrowSchema</code>BgReturns a new empty <code>Fields</code>CdCreate a new <code>UnionFields</code> with no fieldsBdCreates an empty <code>Schema</code>ClCreates a new empty FFI_ArrowArrayStream. Used to import \xe2\x80\xa65405BfGet a flags value with all bits unset.5432CgCreate a new, empty bounder that represents empty inputClCreate an empty interval that intersects nothing (except \xe2\x80\xa6Bg<code>Field</code> name for map entries000CnModule containing functionality to compute array equality. \xe2\x80\xa6BaLogically compares two ArrayData.DhDefines <code>ArrowError</code> for representing failures in various \xe2\x80\xa6AbCommon error typesBoReturns an error reading index <code>idx</code>2CmReturn a future that fetches the specified range of bytes \xe2\x80\xa60DkFetches any additional column data specified in <code>projection</code> \xe2\x80\xa6EeReturns an immutable reference to the <code>FieldRef</code> at index <code>idx</code>DcReturns an immutable reference of a specific <code>Field</code> \xe2\x80\xa6BdReturns the arrow <code>Field</code>21ClGet a field\xe2\x80\x99s value by index in <code>0..self.len()</code>DjReturn a field to represent this VariantArray in a <code>Schema</code> \xe2\x80\xa610BaReturns the flags of this schema.00AdRefer to Arrow FlagsCjCreates new statistics for <code>Float</code> column type.DcProduce a <code>RecordBatch</code> if at least one row is fully \xe2\x80\xa6DaFlush this decoder returning the parsed <code>Block</code> if anyDbFlush this decoder returning the parsed <code>Header</code> if anyCiFlush the decoded records into a <code>RecordBatch</code>CaFlush decoded records to an <code>ArrayRef</code>DaFlushes the currently buffered data to a <code>RecordBatch</code>BjFlushes the current contents of the readerAlFlush the underlying writer.02AiFlushes underlying writerBnFlushes all buffered rows into a new row group0DjPerform <code>left &gt;= right</code> operation on two <code>Datum</code>.0BiPerform SQL <code>left ILIKE right</code>0BnCreate a predicate for the given ilike patternBnGet a reference to a column\xe2\x80\x99s array by name.000ClUse BTreeMap to ensure the values are sorted by value as \xe2\x80\xa60BkReturns the inner <code>ScalarBuffer</code>BeReturns the inner <code>Buffer</code>0BlReturns the inner <code>BooleanBuffer</code>202112BnReturn a reference to the underlying tonic \xe2\x80\xa6A`The inner clientAoThe original FlightData messagelInput streamDeReturn a reference to the underlying <code>FlightServiceClient</code>CdGet an immutable reference to the underlying reader.BmReturns a reference to the underlying writer.0AfThe underlying builder1CoReturns a reference to the underlying <code>StructArray</code>.BgReference to the underlying StructArray1100AcPath to input filesAkPath to input parquet file.CjCreates new statistics for <code>Int32</code> column type.CjCreates new statistics for <code>Int64</code> column type.CjCreates new statistics for <code>Int96</code> column type.AbEquality operation000AmGreater than equals operation000AfGreater than operation000AjLess than equals operation000AcLess than operation000AcNot equal operation000DiThe items to return. If there are fewer items than <code>limit</code> \xe2\x80\xa6BbThe schema for items in this arrayChHow many items will this iterator <em>actually</em> makeDkLimit this <code>RowSelection</code> to only select <code>limit</code> rowsAjThe limit to apply, if anyBgLimit to apply to remaining row groups.CjLimit to apply to remaining row groups (decremented as \xe2\x80\xa6DjPerform <code>left &lt;= right</code> operation on two <code>Datum</code>.0BoMerge another accumulator into this accumulatorAkThe names of the dimensionsBlPerform SQL <code>left NOT LIKE right</code>0CiNodes correspond to the pre-ordered flattened logical \xe2\x80\xa6B`The fields comprising this arrayBmReturns the null buffer of this array if any.DiReturns a reference to the null buffer of this <code>ArrayData</code> \xe2\x80\xa6BeSets the null buffer of the ArrayData22A`The null bitmap.210AaIn progress nulls0BiThe null buffer of the interleaved outputeNulls0CiCreate owned version of the row to detach it from the \xe2\x80\xa6BaParse a string to the native type0CmParse string value in traditional Postgres format such as \xe2\x80\xa6Dg<code>Parser</code> implementations for converting strings to Arrow \xe2\x80\xa6CoParses a slice of <code>StringRecords</code> into a RecordBatchD`Creates a <code>Row</code> from the provided <code>bytes</code>.BcReturns a slice of path components.ChThe valid SQL string to create a prepared statement for.oThe SQL syntax.0100jSQL query.0Bgdata queued up to send but not yet sentChGet the CSV file\xe2\x80\x99s quote character as a byte characterDdOptional quote character. Defaults to <code>b&#39;&quot;&#39;</code>BmSets the values of all histogram levels to 0.ChReset state of record reader. Should be called after \xe2\x80\xa6DiCreate a <code>ProjectionMask</code> which selects only the specified \xe2\x80\xa6BgReturns the decimal scale of this array0C`Number of digits after the decimal point \xe2\x80\x9c.\xe2\x80\x9dClDEPRECATED: Used when this column contains decimal data. \xe2\x80\xa60BdThe number of digits in the decimal.AfReturns decimal scale.CfThe number of digits to the right of the decimal point00AcScale of this type.CiReturns the scale (number of digits after the decimal \xe2\x80\xa6CkReturns the scale of the decimal (how many digits after \xe2\x80\xa60011000AkThe sizes of the dimensionsBoThe dimensions of the tensor, optionally named.BnThe dimensions of the tensor, optionally namedBlThe physical shape of the contained tensors.0CnShifts array by defined number of items (to left or right) \xe2\x80\xa600BmReturns a reference to the sizes of this list0CnReturns a zero-copy slice of this array with the indicated \xe2\x80\xa600CkCreates a zero-copy slice of itself. This creates a new \xe2\x80\xa6111111111111ChReturn a new RecordBatch where each column is sliced \xe2\x80\xa62DiReturns a zero-copy slice of this buffer with length <code>len</code> \xe2\x80\xa6CgReturns a new Buffer that is a slice of this buffer \xe2\x80\xa61FbSlices this <code>BooleanBuffer</code> by the provided <code>offset</code> and <code>length</code>EoSlices this <code>NullBuffer</code> by the provided <code>offset</code> and <code>length</code>FaSlices this <code>RunEndBuffer</code> by the provided <code>offset</code> and <code>length</code>77777777777777751434206DhReturns <code>ByteArray</code> instance with slice of values for a data.AoSlice all the underlying arrays0CcThe number of array slots represented by the bufferChSplits this interval into exactly two non-wraparound \xe2\x80\xa6BdA stack of <code>DecoderState</code>nDecoding stateAaThe decoder state011A`The inner state.AmCurrent state of the decoder.C`Specifies the table to get the primary keys for.CkSpecifies the foreign key table to get the foreign keys \xe2\x80\xa6CkSpecifies the primary key table to get the foreign keys \xe2\x80\xa6AlThe table to load data into.3210DhShare the bearer token with potentially different <code>DoGet</code> \xe2\x80\xa6kAuth token.CiThis is the type of the decoded value if the field is \xe2\x80\xa6CnThe type of data contained in a value cell. Currently only \xe2\x80\xa60ClData type for this field. Not set if the current element \xe2\x80\xa6Cithe type of the page: indicates which of the *_header \xe2\x80\xa6AeType of this column *ClReturns a reference to a typed <code>ColumnWriterImpl</code>CgZero-sized types used to parameterize generic array \xe2\x80\xa60ClContains structs and methods to build Parquet schema and \xe2\x80\xa6CmApplies a unary infallible function to a primitive array, \xe2\x80\xa6BfSee <code>PrimitiveArray::unary</code>001DgComputes the union of the nulls in two optional <code>NullBuffer</code>0D`The bitwise or (<code>|</code>) of the bits in two flags values.AjUnion two projection masksDkCompute the union of two <code>RowSelection</code> For example: self:   \xe2\x80\xa6CnUtilities to assist with reading and writing Arrow data as \xe2\x80\xa6BhIs the information in the builder valid?0BkReturns the element at index <code>i</code>0BeReturns ith value of this list array.CdReturns the primitive value at index <code>i</code>.2CbReturns the boolean value at index <code>i</code>.ClReturns the element at index <code>i</code> as a byte slice.3BdReturns ith value of this map array.CdReturns the array\xe2\x80\x99s value at index <code>i</code>.BjReturns ith value of this list view array.Be<code>Field</code> name for map value805EfReturns a <code>ValueFormatter</code> that implements <code>Display</code> for the \xe2\x80\xa6969588473921160CkMust be a valid serialized protocol buffer of the above \xe2\x80\xa6AdThe underlying value00D`Return the <code>Variant</code> instance stored at the given row0AhReturns the views buffer0AeThe in progress viewsAiThe width of the intervalBcWrite a single batch to the writer.0CdWrites this value to the provided <code>Write</code>11CeSerialize one <code>RecordBatch</code> to the output.1BhWrite a RecordBatch to a writable objectB`Write a record batch to the fileBbWrite a record batch to the streamBkSerialize <code>batch</code> to JSON outputDfWrite the corresponding values to this <code>ColumnValueEncoder</code>BmEncodes the provided <code>RecordBatch</code>BeWrite an <code>ArrowLeafColumn</code>DiGiven an <code>array</code>, write the level data for the elements in \xe2\x80\xa6CaWrite the provided bytes to the underlying writerClEnqueues the provided <code>RecordBatch</code> to be writtenCkWrite the bloom filter data (header and then bitset) to \xe2\x80\xa6CjUnion of all contiguous x intervals that intersect the \xe2\x80\xa6BjAn opaque action specific for the service.0BhAppend to the table if it already exists0AbBrotli compressionChEach constituent buffer is first compressed with the \xe2\x80\xa6BeBinary, Utf8 and LargeUtf8 data typesBfOpaque binary data of variable length.CmRepresents Avro bytes type, maps to Arrow\xe2\x80\x99s Binary data \xe2\x80\xa62AbOpaque binary data22AmPrimitive (type_id=1): BINARY00AfBuffer holds a bitmap.00fBrotliClA contiguous memory region that can be shared with other \xe2\x80\xa600CfA Buffer represents a single contiguous memory segmentChA mask represeting which type_ids matches the target \xe2\x80\xa6AgCommit the transaction.0BcThe config type used by this engineBeCreate the table if it does not exist0CfAn allocation from an external source like the FFI \xe2\x80\xa6DdApproximate number of <code>f16</code> significant digits in base 100B`64-bit floating point type indexClA signed 32-bit date representing the elapsed time since \xe2\x80\xa6ChRepresents Avro date logical type, maps to Arrow\xe2\x80\x99s \xe2\x80\xa611ClA signed 64-bit date representing the elapsed time since \xe2\x80\xa600B`Arithmetic trait for date arrayshA Decade0BhDirect read with no data type promotion.Cmdouble: double precision (64-bit) IEEE 754 floating-point \xe2\x80\xa6AjRepresents a double value.AlStatistics for Double columnBaIEEE 64-bit floating point value.0AmPrimitive (type_id=1): DOUBLE00CmThe enum Either with variants That represents a reference \xe2\x80\xa6DcAn <code>Engine</code> provides low-level encoding and decoding \xe2\x80\xa6CiA cheaply cloneable, owned slice of <code>FieldRef</code>00AcArrow File metadataBiThe format specification for the CSV fileCfGather individual bits from the null buffer of the \xe2\x80\xa6BmA decoded header for an Object Container FileAkDecoding the message headerCjA signed 16 bit integer value stored as INT32 physical \xe2\x80\xa6CjA signed 32 bit integer value stored as INT32 physical \xe2\x80\xa6CjA signed 64 bit integer value stored as INT64 physical \xe2\x80\xa6CgKarney, Charles FF. \xe2\x80\x9cAlgorithms for geodesics.\xe2\x80\x9d \xe2\x80\xa6AeDecoding a key lengthBc<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x88\xf0\x9d\x97\x80\xe2\x82\x82\xe2\x84\xaf0CiLength should return the total number of bytes in the \xe2\x80\xa6gLZ4 RawC`Minute of the hour, in range <code>0..=59</code>0hA Minute10CfCorresponding Rust native type for the primitive type.00CfType for representing its equivalent rust type i.e \xe2\x80\xa601100100CfThe underlying signed integer type (i32, i64, or i128)00oA numeric valueAbDecoding an objectAgObject (type_id=3): N/A00AjType of offset i.e i32/i6400BkThe extension type for <code>Opaque</code>.000AjPrefix for the offset size0Cl\xe2\x80\x9cDecimal32\xe2\x80\x9d, \xe2\x80\x9cDecimal64\xe2\x80\x9d, \xe2\x80\x9cDecimal128\xe2\x80\x9d or \xe2\x80\x9c\xe2\x80\xa6Cg\xe2\x80\x9cBinary\xe2\x80\x9d or \xe2\x80\x9cString\xe2\x80\x9d, for use in error messagesCi\xe2\x80\x9cBinary\xe2\x80\x9d or \xe2\x80\x9cString\xe2\x80\x9d, for use in displayed or \xe2\x80\xa621033210CmSpecialized parsing implementations to convert strings to \xe2\x80\xa60DaImplementation of <code>parse_data_type</code>, modeled after \xe2\x80\xa6ChInternal Schema parser. Traverses message type using \xe2\x80\xa6CdA stack-allocated, fixed-size buffer for the prefix.BeA human readable representation - \xe2\x80\xa60DbA high\xe2\x80\x91level Avro <strong>Object Container File</strong> reader.CeCSV file reader using <code>std::io::BufReader</code>CkReads JSON data with a known schema directly into arrow \xe2\x80\xa6AoReader tree for record assemblyCfRecord type: a sequence of fields with names and typesCbProvides resolution information for record fields.hA recordCjSend dictionary FlightData with every RecordBatch that \xe2\x80\xa6CkSend the entire dictionary every time it is encountered \xe2\x80\xa6ClA specialized <code>Result</code> type for Arrow operations.CdAn opaque result returned after executing an action.0BmResult type for the Apache Arrow Flight crateCeA specialized <code>Result</code> for Parquet errors.BdUse the 256-bit SHA-256 fingerprint.Ag256-bit SHA-256 digest.AnA 256-bit SHA-256 fingerprint.CeSigned (either value or legacy byte-wise) comparison.AbSnappy compressionAe<code>f16</code> \xe2\x88\x9a20EhA wrapper around a single value <code>Array</code> that implements <code>Datum</code>\xe2\x80\xa600AnNon-nested scalar/logical typeCnIf true, all type_ids matches the target type_id If false, \xe2\x80\xa6CnDescribes the meta-data of an ordered sequence of relative \xe2\x80\xa6nAn Avro schemaAhA decoded Schema messagehA schemaBmA Schema describes the columns in a row batch44CbSecond of the minute, in range <code>0..=59</code>0hA SecondA`Time in seconds.2100AmA precomputed array of ranges=fSnappyAcSparse union layout00CkColumn chunk data representing only a subset of data pages.CkString data encoded as UTF-8 bytes, mapped to Arrow\xe2\x80\x99s \xe2\x80\xa6Bbstring: Unicode character sequenceAjRepresents a string value.nA string valueAfA UTF8 encoded string.AmPrimitive (type_id=1): STRING00kStruct typeCgA nested datatype that contains a number of sub-fields.BjRecord/Struct with Avro\xe2\x80\x91ordered childrenCnRepresents Avro record type, maps to Arrow\xe2\x80\x99s Struct data \xe2\x80\xa63CnA row converter for the child fields and the encoding of a \xe2\x80\xa6CnThe row encoding of the child arrays and the encoding of a \xe2\x80\xa644nA struct arrayDbThomas, Paul D. Spheroidal geodesics, reference systems, &amp; \xe2\x80\xa6AiGet tables for a catalog.AiTensor of primitive typesCmAn opaque identifier that the service can use to retrieve \xe2\x80\xa60ClA signed 32-bit time representing the elapsed time since \xe2\x80\xa600ClA signed 64-bit time representing the elapsed time since \xe2\x80\xa600AjAn unsigned integer value.ClAn unsigned 8 bit integer value stored as INT32 physical \xe2\x80\xa6AkAn unsigned 16-bit integer.00AkAn unsigned 32-bit integer.00AkAn unsigned 64-bit integer.00BaNeeded to make flatbuffers happy.AiUnsigned integer UINT_16.0BbThe values encoded by this encoderAdGeneric Avro writer.lA CSV writerDhA JSON writer which serializes <code>RecordBatch</code>es to a stream ofA`xxHash Strategy.CnHash strategy type annotation. xxHash is an extremely fast \xe2\x80\xa6CaWhether to commit/rollback the given transaction.C`Whether to rollback/release the given savepoint.DhReturns the enum value of <code>action</code>, or the default if the \xe2\x80\xa6021C`Appends a boolean <code>v</code> into the bufferBiAppends a boolean value into the builder.DhAppends a value of type <code>T</code> into the builder, growing the \xe2\x80\xa6CgAppends an element (either null or non-null) to the \xe2\x80\xa6BoFinish the current fixed-length list array slotClAppend a value to the array. Return an existing index if \xe2\x80\xa6CbFinish the current variable-length list array slotBaFinish the current map array slotCmAppend a primitive value to the array. Return an existing \xe2\x80\xa632B`Appends a value to this builder.987543216430789Bgregister the specific sql metadata itemlAppend a row000A`Append a new rowE`Convert <code>ArrayRef</code> columns appending to an existing <code>Rows</code>BcAppend statistics for the next pageBnAppends more components to end of column path.BgInput arrays: the data being read FROM.AnThe input arrays downcast to TDkReturns the array as <code>Any</code> so that it can be downcasted to a \xe2\x80\xa6D`Returns the builder as a non-mutable <code>Any</code> reference.00000DaReturns the builder as an non-mutable <code>Any</code> reference.11101011CoReturns the builder as a non-mutable <code>Any</code> reference3232222221222121220BhConvert this Message to <code>Any</code>CmReturn the value as an Any to allow for downcasts without \xe2\x80\xa6CiConverts this variant to an <code>f16</code> if possible.0CiConverts this variant to an <code>f32</code> if possible.0CiConverts this variant to an <code>f64</code> if possible.0DcReturn an integer representation of this <code>EncodingMask</code>.BcReturn the value as i64 if possibleDbDowncast this to a <code>MapArray</code> panicking if not possible00BkReturns writer version as <code>i32</code>.BnReturns a pointer to the start of this buffer.ClReturns a raw pointer to this buffer\xe2\x80\x99s internal memory \xe2\x80\xa610AoReturn the <code>Message</code>DbDowncast this to a <code>RunArray</code> panicking if not possible00CiReturns the underlying Variant short string as a &amp;str0CiConverts this variant to an <code>u16</code> if possible.0CiConverts this variant to an <code>u32</code> if possible.0BcReturn the value as u64 if possibleCiConverts this variant to an <code>u64</code> if possible.0BjGet a borrowed <code>Urn</code> formatter.0DiFunctions for converting data in <code>GenericBinaryArray</code> such \xe2\x80\xa6DhAllies a binary infallable function to two <code>PrimitiveArray</code>s,00CdReturns the bitwise or of all non-null input values.00DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6AfThe blocks in the fileCbReturns a borrowed version of this shredding state0DkThe bounds over which to scan the reader. <code>None</code> starts from \xe2\x80\xa6BdGet a <code>Braced</code> formatter.0AmTypes of shared memory regionEaReturns the <code>buffer</code> as a slice of type <code>T</code> starting at \xe2\x80\xa6BhReturns the buffer at the provided indexBjReturns the underlying <code>Buffer</code>13AfUnderlying data buffer1023AdUnderlying row bytesCeReturns internal byte buffer reference for this page.BiLogic for reading data into arrow buffersAoReturns reference to the chunks0CfA FlightSQL Client <code>FlightSqlServiceClient</code>BcMid Level <code>FlightClient</code>A`State for codecsBfReturns the field at <code>pos</code>.BoGet a reference to a column\xe2\x80\x99s array by index.10BhLow level column reader and writer APIs.CjReturns column chunk metadata for <code>i</code>th column.CkReturns <code>ColumnDescriptor</code> for a field position.CmConcatenate multiple Array of the same type into a single \xe2\x80\xa6BoDefines concat kernel for <code>ArrayRef</code>110BcReturns the config for this engine.AiThe config for these rowsBgFeed a chunk of bytes into the decoder.EbParse <code>Block</code> from <code>buf</code>, returning the number of bytes readEcParse <code>Header</code> from <code>buf</code>, returning the number of bytes readCgDecode <code>count</code> records from <code>buf</code>BlDecode a single record from <code>buf</code>BmDecode the input into a new <code>Vec</code>.DgDecode records from <code>buf</code> returning the number of bytes readDkDecodes records from <code>input</code> returning the number of records \xe2\x80\xa6EcDecoder to create <code>RecordBatch</code> streams from <code>FlightData</code> \xe2\x80\xa6EcTry to read the next <code>RecordBatch</code> from the provided <code>Buffer</code>DbDecode elements from <code>tape</code> starting at the indexes \xe2\x80\xa6DjRead JSON objects from <code>buf</code>, returning the number of bytes \xe2\x80\xa6DnDecodes an array from <code>rows</code> with the provided <code>options</code>DiDecodes a RunEndEncodedArray from <code>rows</code> with the provided \xe2\x80\xa6CkDecode the value from a given buffer for a higher level \xe2\x80\xa6ClThe timestamp bytes to parse minus <code>b&#39;0&#39;</code>CiRetrieve a single stream associated with a particular \xe2\x80\xa60DjMake a <code>DoGet</code> call to the server with the provided ticket, \xe2\x80\xa61CiGiven a flight ticket, request to be sent the stream. \xe2\x80\xa6CiPush a stream to the flight service associated with a \xe2\x80\xa60EfMake a <code>DoPut</code> call to the server with the provided <code>Stream</code> \xe2\x80\xa611CkCreates new statistics for <code>Double</code> column type.BeEncode the value at <code>idx</code>.CjEncode a <code>RecordBatch</code> using this encoder plan.DkEncode arbitrary octets as base64 using the provided <code>Engine</code>\xe2\x80\xa6EcEncoder to create <code>FlightData</code> streams from <code>RecordBatch</code> \xe2\x80\xa6CdEncodes a batch to a number of EncodedData items \xe2\x80\xa6DhEncode the non-null value at index <code>idx</code> to <code>out</code>.0CnEncode the primitive value as bytes, returning a reference \xe2\x80\xa6CoEncode the value at index <code>idx</code> to <code>out</code>.BeVariable length values are encoded asB`Fixed width types are encoded asEcEncodes the provided <code>GenericListArray</code> to <code>out</code> with the \xe2\x80\xa6EeEncodes the provided <code>RunEndEncodedArray</code> to <code>out</code> with the \xe2\x80\xa6EiEncodes the provided <code>values</code> and <code>indices</code> to <code>encoder</code>CbEncode <code>values</code> to the in-progress page0CeEncode the value directly from a higher level encoderBaCommon Parquet errors and macros.CiGet the CSV file\xe2\x80\x99s escape character as a byte characterDaOptional escape character. Defaults to <code>b&#39;\\\\&#39;</code>DgReturns a new <code>NullBuffer</code> where each bit in the current \xe2\x80\xa60ClExtends the in progress array with a region of the input \xe2\x80\xa60D`The bitwise or (<code>|</code>) of the bits in each flags value.CkReturns the fields for the struct this builder is building.D`Returns the <code>Fields</code> of this <code>StructArray</code>DfReturns an immutable reference of the vector of <code>Field</code> \xe2\x80\xa6BnA sequence of fields that describe the schema.2DhMaps field names to <code>FieldData</code> instances which track the \xe2\x80\xa640BcThe fields contained in this recordAgAn array of JSON fieldsAiThe schema for these rows4EcReturns a (flattened) <code>Vec</code> containing all child <code>Field</code>s \xe2\x80\xa665AhTop level parquet schemaCaTop level parquet schema and arrow schema mappingAjFields of this group type.C`The fields of the final <code>StructArray</code>0EeReturns a filtered <code>values</code> <code>Array</code> where the corresponding \xe2\x80\xa6E`Selects rows from <code>values</code> based on this <code>FilterPredicate</code>AfDefines filter kernels2210oOptional filterD`<code>FilterInfo</code> state machine for evaluating row filters1BdThe predicates to evaluate, in orderA`Builds the arrayBdCreates a <code>BooleanBuffer</code>DkBuilds the null buffer and resets the builder. Returns <code>None</code>\xe2\x80\xa6DaTakes the builder itself and returns an <code>OffsetBuffer</code>CdResets this builder and returns an immutable Buffer.BhBuilds the array and reset this builder.D`Builds the <code>GenericByteArray</code> and reset this builder.AaBuilds the array.CkBuilds the <code>StructArray</code> and reset this builder.DcBuilds the <code>GenericByteViewArray</code> and reset this builderBoBuilds the BooleanArray and reset this builder.55DdBuilds the <code>FixedSizeBinaryArray</code> and reset this builder.DdBuilds the <code>FixedSizeListBuilder</code> and reset this builder.77CoBuilds the <code>DictionaryArray</code> and reset this builder.D`Builds the <code>GenericListArray</code> and reset this builder.9B`Builds the <code>MapArray</code>:BlBuilds the NullArray and reset this builder.;CnBuilds the <code>PrimitiveArray</code> and reset this builder.4<CjCreates the RunArray and resets the builder. Panics if \xe2\x80\xa6==50=DdBuilds the <code>GenericListViewArray</code> and reset this builder.>A`Builds the array0DnConsume this <code>SchemaBuilder</code> yielding the final <code>Schema</code>AlReturn the aggregated value.2BdCreates a <code>BooleanBuffer</code>DkBuilds the null buffer and resets the builder. Returns <code>None</code>\xe2\x80\xa6DaTakes the builder itself and returns an <code>OffsetBuffer</code>CdResets this builder and returns an immutable Buffer.BhBuilds the array and reset this builder.AaBuilds the array.1111111111118<BoBuilds the BooleanArray and reset this builder.DdBuilds the <code>FixedSizeBinaryArray</code> and reset this builder.DdBuilds the <code>FixedSizeListBuilder</code> and reset this builder.CoBuilds the <code>DictionaryArray</code> and reset this builder.D`Builds the <code>GenericByteArray</code> and reset this builder.D`Builds the <code>GenericListArray</code> and reset this builder.B`Builds the <code>MapArray</code>CnBuilds the <code>PrimitiveArray</code> and reset this builder.4CjCreates the RunArray and resets the builder. Panics if \xe2\x80\xa6CkBuilds the <code>StructArray</code> and reset this builder.61DcBuilds the <code>GenericByteViewArray</code> and reset this builderDdBuilds the <code>GenericListViewArray</code> and reset this builder.CjFlush remaining buffered data and (for OCF) ensure the \xe2\x80\xa6?DkBuilds the null buffer and resets the builder. Returns <code>None</code>\xe2\x80\xa6DaTakes the builder itself and returns an <code>OffsetBuffer</code>BdCreates a <code>BooleanBuffer</code>CoComplete the construction and build the <code>UnionArray</code>AhSignal the end of streamCjWrite footer and closing tag, then mark the writer as doneCeWrite continuation bytes, and mark the stream as doneBfFinishes the current <code>Tape</code>ClFinishes the output stream. This function must be called \xe2\x80\xa6DnConsume this <code>SchemaBuilder</code> yielding the final <code>Schema</code>CnFinish the currently in-progress array and return it as an \xe2\x80\xa6CcAssembles and writes the final metadata to self.bufB`Write the metadata to the bufferEgReturn the parsed <code>ParquetMetaData</code> struct, leaving <code>None</code> in \xe2\x80\xa6C`Close and finalize the underlying Parquet writer0EhFinish this <code>LevelInfoBuilder</code> returning the <code>ArrayLevels</code> for \xe2\x80\xa6AnClose and finalize the writer.CkFinishes the current metadata dictionary, returning the \xe2\x80\xa6DcCalled by <code>ParentState::finish</code> to apply any pending \xe2\x80\xa6CkFinalizes this list and appends it to its parent, which \xe2\x80\xa6CeFinalizes the metadata dictionary and appends its \xe2\x80\xa6CmFinalizes this object and appends it to its parent, which \xe2\x80\xa6CgMarks the insertion as having succeeded and invokes \xe2\x80\xa6ChFinish the builder and return the metadata and value \xe2\x80\xa6655104632BbReturns the format of this schema.0CiLogic for different Avro container file formats. Avro \xe2\x80\xa6AfFormat of the CSV fileBkDetermines how the byte stream is formatted003ChAutomatically generated code from the Parquet thrift \xe2\x80\xa6CmCreates a ArrayData from the in progress array, consuming \xe2\x80\xa60DiExtract optional <code>Tz</code> from timestamp data types, returning \xe2\x80\xa6AmRead a single <code>u8</code>DeReturns <code>true</code> if id is set, <code>false</code> otherwise.AoDecoder for <code>Header</code>DhReturns <code>true</code> if this writer is configured to write a headerDkCreate and populate <code>BloomFilterHeader</code> from this bitset for \xe2\x80\xa6CnKeep track of the dictionary with the given ID and values. \xe2\x80\xa6D`The bitwise or (<code>|</code>) of the bits in two flags values.CmMark the given <code>Encoding</code> as present in this mask.Cksetting every bit in the block that was also set in the \xe2\x80\xa6BgInsert an AsBytes value into the filterBlAdd a field with key and value to the object0CcWhether all known bits in this flags value are set.BdTests if the UUID is max (all ones).0EmReturns <code>true</code> if this value is <code>NaN</code> and <code>false</code> otherwise.0BeTests if the UUID is nil (all zeros).0CnTest if a given <code>Encoding</code> is present in this mask.DgReturn the expected <code>DataTypeLayout</code> Arrays of this data \xe2\x80\xa600DiCreate a <code>ProjectionMask</code> which selects only the specified \xe2\x80\xa6CmThe descriptors for the physical type of each leaf column \xe2\x80\xa6AoThe length of the string/bytes.CiDefines kernel for length of string arrays and binary \xe2\x80\xa6CjReturns an array of Int32/Int64 denoting the length of \xe2\x80\xa6AjByte length of the buffer.033CnThe number of value slots in the Arrow array at this level \xe2\x80\xa6Clnumber of records / rows. The arrays in the batch should \xe2\x80\xa6ClThe absolute length (in bytes) of the memory buffer. The \xe2\x80\xa645AoLength of the full column chunkBhParquet definition and repetition levelsCbLooks up a schema by its <code>Fingerprint</code>.DaMemory calculations for <code>ParquetMetadata::memory_size</code>CfIndicates the way the record batch body was compressedA`Number of months0000BkCorresponding Rust native type if available0000AfCreates a random UUID.0BmPerform SQL <code>left NOT ILIKE right</code>0CmReturns a new array with the same values and the validity \xe2\x80\xa6CmImplements the <code>nullif</code> function for Arrow arrays.110ClReturns the offset into the underlying data used by this \xe2\x80\xa6CaReturns the offset of this <code>ArrayData</code>B`Sets the offset of the ArrayDataAkThe offset into the buffer.3Agthe offset of the arrayCmReturns the offset of this <code>BooleanBuffer</code> in bitsCjReturns the offset of this <code>NullBuffer</code> in bitsCjReturns the logical offset into the run-ends stored by \xe2\x80\xa673120BjThe offset in number of items (not bytes).547605BiThe offsets for variable-sized data typesClIndex to the start of the RecordBlock (note this is past \xe2\x80\xa6CmThe relative offset into the shared memory page where the \xe2\x80\xa6BjThe offset of the page in the column chunkAnOffset of the page in the fileCmThe current byte offset in the reader Note that offset is \xe2\x80\xa6B`Offset of the page in the file *DkApplies an offset to this <code>RowSelection</code>, skipping the first \xe2\x80\xa6AkThe offset to apply, if anyAkOffset to apply to the nextCkOffset to apply to remaining row groups (decremented as \xe2\x80\xa6CdThe current length of the underlying metadata bufferCaReturns the current size of the underlying buffer01DcSame as <code>op</code> but with a type hint for the returned arrayfOpaqueCbWraps reader in option reader based on repetition.nPath to outputAlPath to output parquet file.AoPacked booleans indicating typeAfAdditional parameters.EdReturns a <code>RowParser</code> that can be used to parse <code>Row</code> from \xe2\x80\xa6BbInternal metadata parsing routinesChParquet schema parser. Provides methods to parse and \xe2\x80\xa6BcFirst 4 bytes of string/bytes data.AjReturns the prefix, if anyCmOptional pre-built, variable-length prefix written before \xe2\x80\xa6122EaUtilities for pretty printing <code>RecordBatch</code>es and <code>Array</code>s.0EeReturns true if this <code>ArrayData</code> is equal to <code>other</code>, using \xe2\x80\xa6EhReturns true if this <code>OffsetBuffer</code> is equal to <code>other</code>, using \xe2\x80\xa6EbReturns true if this <code>Buffer</code> is equal to <code>other</code>, using \xe2\x80\xa6EhReturns true if this <code>ScalarBuffer</code> is equal to <code>other</code>, using \xe2\x80\xa6EcReturns true if this <code>BooleanBuffer</code> is equal to <code>other</code>, \xe2\x80\xa632104BcGenerate a random value of the typeBcReturns the range of each partition0BgThe ranges of data that are needed nextAhThe byte ranges to fetchCjCore functionality for reading Avro data into Arrow arrayskFile reader0jCSV ReaderBaArrow IPC File and Stream ReadersBmFile reader that supports reading and seekingmStream readerkJSON readerAkContains column reader API.ClFile reader API and methods to access file metadata, row \xe2\x80\xa6A`The chunk readerCmContains implementation of record assembly and converting \xe2\x80\xa6AmAvro Decoder for Arrow types.CdContains record-based API for reading Parquet files.CkDefines kernel to extract substrings based on a regular \xe2\x80\xa60DgRemoves and returns the <code>FieldRef</code> as index <code>idx</code>CeThe intersection of a source flags value with the \xe2\x80\xa61ClResizes the buffer, either truncating its contents (with \xe2\x80\xa600BoResize this reservation to a new size in bytes.011DhReturns the enum value of <code>result</code>, or the default if the \xe2\x80\xa6ChCreate a NextState with a result that should be returnedAhresult to return, if anyCjReturns the schema of this <code>RecordBatchReader</code>.CdReturns the <code>Schema</code> of the record batch.BgReturn the schema of the output batches2221BfAvro schema parsing and representationCiReturns the Arrow schema for the rows decoded by this \xe2\x80\xa6CjReturns the Arrow schema discovered from the Avro file \xe2\x80\xa6BfReturns the <code>Schema</code> if anyBnReturns the decoder\xe2\x80\x99s <code>SchemaRef</code>ClReturns the schema of the reader, useful for getting the \xe2\x80\xa60B`Explicit schema for the CSV fileAfSchema of the CSV fileCkThe schema of the dataset in its IPC form: 4 bytes - an \xe2\x80\xa6000BjReturns the current schema for this streamCeReturn schema for the stream, if it has been receivedBaschema, set after the first batchBfOptional schema, if known before data.CmThe db_schema of the destination table to load data into. \xe2\x80\xa6EhReturns the value of <code>schema</code>, or the default value if <code>schema</code>\xe2\x80\xa61BlReturns the DataType created by this builderCnReturn the schema of the RecordBatch that will be returned \xe2\x80\xa60D`Return the <code>Schema</code> for a GetSchema RPC call with \xe2\x80\xa6DhReturns the schema that will result from <code>CommandGetCatalogs</code>222212AnThe Arrow schema for JSON fileAfThe schema of the fileAmReturn the schema of the fileAoReturn the schema of the streamAaThe output schemaCiThe schema that is read from the stream\xe2\x80\x99s first messageBcThe schema of this decoder, if readBhReturn the schema if decoded, else None.1CmReturns the arrow <code>SchemaRef</code> for this arrow file.ChA reference to the schema, used in validating record \xe2\x80\xa6BgReturn the schema of the output batchesA`The input schemaCmParquet schema definitions and methods to print and parse \xe2\x80\xa6DeReturns Parquet <code>Type</code> that describes schema in this file.CgParquet schema for this file.  This schema contains \xe2\x80\xa6CnReturns the arrow <code>SchemaRef</code> for this parquet fileDhReturns the projected <code>SchemaRef</code> for reading the parquet \xe2\x80\xa61A`The Arrow Schema1CfGenerated schema used by <code>row_group_writer</code>0CfThe top-level logical schema (the \xe2\x80\x9cmessage\xe2\x80\x9d type).CjPath to a text file containing a parquet schema definitionEfHelper for branchlessly selecting either <code>a</code> or <code>b</code> based on \xe2\x80\xa6BbSelect <code>row_count</code> rowsAfsender to notify error0DaHelper trait <code>FlightSqlService</code> for implementing a \xe2\x80\xa6DoReturns a number <code>i256</code> representing sign of this <code>i256</code>.0CoReturns a number that represents the sign of <code>self</code>.0BdGet a <code>Simple</code> formatter.0DhReturns a <code>Buffer</code> containing the sliced contents of this \xe2\x80\xa60B`The source array and informationAbThe current sourceAjThe current source, if anyDhReturns the enum value of <code>status</code>, or the default if the \xe2\x80\xa6CjIf true, return error on conversion failure. If false, \xe2\x80\xa600CbReturns string representation of this column path.AjReturns the suffix, if any0Eh<code>GetTablesBuilder</code> for building responses to <code>CommandGetTables</code>\xe2\x80\xa6CmArrow Tensor Type, defined in <code>format/Tensor.fbs</code>.AiCustom thrift definitionsChThis module is the bridge between a Parquet file\xe2\x80\x99s \xe2\x80\xa6BcToken used to retrieve this stream.0D`Converts a <code>f16</code> value into a <code>f32</code> value.0D`Converts a <code>f16</code> value into a <code>f64</code> value.0AnExport to the C Data Interface00AmConvert the decimal to an i32000AmConvert the decimal to an i640AkConvert native type to i64.0011DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6CmPerform a fallible binary operation on potentially scalar \xe2\x80\xa6DcUnpacks the contents of the message if it is of type <code>M</code>CoUpdates the <code>InferredDataType</code> with the given stringBeReturns the values of this dictionaryB`Returns the values of this arrayCbReturns a reference to the dictionary values arrayClReturns the values of this <code>TypedDictionaryArray</code>BnReturns a reference to the values of this list3BcReturns a reference to values arrayCeReturns the values of this <code>TypedRunArray</code>DeReturns the underlying <code>BooleanBuffer</code> holding all the \xe2\x80\xa6BaReturns the values of this array.BoReturns a reference to the values of this list.BmReturns a reference to the values of this map6CgReturns the child array builder as a mutable reference.0BjReturns the value array builder of the map1<DdReturns the packed values of this <code>BooleanBuffer</code> not \xe2\x80\xa6DjReturns the values of this <code>RunEndBuffer</code> not including any \xe2\x80\xa6AbThe column to sort0?CaArray of dictionary values (can be any DataType).00000000AlThe values of the dictionarykValues data00000000000000000000000000000000AkThe values of the run_array<B`Returns the values of this arrayBeReturns the values of this dictionaryCbReturns a reference to the dictionary values arrayClReturns the values of this <code>TypedDictionaryArray</code>7777777776?>BnReturns a reference to the values of this list>4666666666666666666666666666666666BcReturns a reference to values arrayCeReturns the values of this <code>TypedRunArray</code>72??>?BaThe schema for values in this map>=<nThe new valuesCdReturns a reference to the the histogram\xe2\x80\x99s values.AdGet the values arrayCgDefines windowing functions, like <code>shift</code>ing0ChCore functionality for writing Arrow arrays as Avro dataAfThe object to write tojCSV WriterBaArrow IPC File and Stream Writers22BgUnderlying writer to use to write bytes00kJSON WriterAkContains column writer API.Co<code>SerializedFileWriter</code>: Low level Parquet writer APIAiUnderlying Parquet writerCjUnion of all contiguous x intervals to the left of the \xe2\x80\xa6CfThomas, Paul D. Mathematical models for navigation \xe2\x80\xa6DiAn extension trait for <code>dyn Array</code> that provides ergonomic \xe2\x80\xa600DkConverts an instance of data type to a slice of bytes as <code>u8</code>\xe2\x80\xa6AbBoolean type indexEdA boolean datatype representing the values <code>true</code> and <code>false</code>.Agboolean: a binary valueAkRepresents a boolean value.CkRepresents Avro boolean type, maps to Arrow\xe2\x80\x99s Boolean \xe2\x80\xa633AmStatistics for Boolean columnChA wrapper around a slice iterator that provides some \xe2\x80\xa6iA Century0DdHelper to convert to/from protobuf <code>Any</code> message to a \xe2\x80\xa6AmDifferent available commands.BoA complex type such as record, array, map, etc.A`A decimal value.0CjIndicates the number of elapsed days and milliseconds, \xe2\x80\xa600DlAvro decimal logical type (bytes or fixed). <code>size=None</code> =&gt; \xe2\x80\xa6CnRepresents Avro decimal type, maps to Arrow\xe2\x80\x99s Decimal32, \xe2\x80\xa6CmExact decimal value represented as an integer value in two\xe2\x80\xa6CeA decimal value with a specified scale and precision.nDecimal value.0BgRust representation for Decimal values.CjA low\xe2\x80\x91level, push\xe2\x80\x91based decoder from Avro bytes to \xe2\x80\xa6ChA push-based interface for decoding CSV data from an \xe2\x80\xa6CkA low-level interface for reading JSON data from a byte \xe2\x80\xa6AnDeflate compression (RFC 1951)Bf<code>f16</code> machine epsilon value0ChMetrics are collected and stored in an <code>Arc</code>.BmA trait to format array values as JSON values0BgThe end of a list , i.e. <code>]</code>CnRepresents Arrow Features that might not have full support \xe2\x80\xa6CiPlanning filters, but haven\xe2\x80\x99t yet requested data to \xe2\x80\xa6AoA 16-bit floating point number.000BaIEEE 16-bit floating point value.0AoA 32-bit floating point number.CnRepresents Avro float type, maps to Arrow\xe2\x80\x99s Float32 data \xe2\x80\xa611AoA 64-bit floating point number.CjRepresents Avro double type, maps to Arrow\xe2\x80\x99s Float64 \xe2\x80\xa611CmGeneral Parquet error. Returned when code violates normal \xe2\x80\xa6CiExpands to the underlying type (default). This likely \xe2\x80\xa6BkISO 8601 - <code>P198DT72932.972880S</code>0BkIf element in array is utf8 encoded string.00AmA precomputed list of indicesAoInteger logical type annotationCeAn integer with a specified bit width and signedness.AkError during IO operations.00BlInternal key array kind used by Map encoder.Bd<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x88\xf0\x9d\x97\x80\xe2\x82\x81\xe2\x82\x8020Bf<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x88\xf0\x9d\x97\x80\xe2\x82\x81\xe2\x82\x80\xe2\x84\xaf0Bb<code>f16</code> \xf0\x9d\x97\x85\xf0\x9d\x97\x88\xf0\x9d\x97\x80\xe2\x82\x82100A`LZ4 compression.AiA boolean or null literalCeMaximum possible <code>f16</code> power of 2 exponent0DjOne greater than the minimum possible normal <code>f16</code> power of \xe2\x80\xa60AoDecoding the message flatbufferDjThe path element is not present in the <code>typed_value</code> column \xe2\x80\xa6Ac<code>f16</code> -10BiStruct for printing Parquet message type.C`Quarter of the year, in range <code>1..=4</code>00CcWriter actually wrote a union (branch tag present).AgReading data from inputAfRelease the savepoint.C`Drop and recreate the table if it already exists0CfAccess parquet data as an iterator of <code>Row</code>CiLightweight skipper for non\xe2\x80\x91projected writer fields \xe2\x80\xa6AnOptions for CommandGetSqlInfo.0CjA Struct_ in the flatbuffer metadata is the same as an \xe2\x80\xa6CcPath step succeeded, return the new shredding stateBlType alias for <code>Arc&lt;Type&gt;</code>.CmAn unsigned 16 bit integer value stored as INT32 physical \xe2\x80\xa6CmAn unsigned 32 bit integer value stored as INT32 physical \xe2\x80\xa6CmAn unsigned 64 bit integer value stored as INT64 physical \xe2\x80\xa6CjAn unknown but present ColumnOrder. Statistics with an \xe2\x80\xa6AjA unicode escape sequence,AkProtobuf pattern, not used.0BnAny message that is not any FlightSQL command.AhAn unknown logical type.A`A Variant value.AlRepresents a Parquet Variant00CbISO week of the year, in range <code>1..=53</code>00BbISO year, computed as per ISO 860100BnImpl for creating output array based on a maskCcAdvances the buffer by <code>additional</code> bitsCnIncreases the number of elements in the internal buffer by \xe2\x80\xa6CjIncreases the offset of this buffer by <code>offset</code>21012AmAdvance to the next predicateBaAlternative names for this recordCjAlternative names (aliases) for this field (Avro spec: \xe2\x80\xa6AoAlternative names for this enumBeAlternative names for this fixed typeDiTest if all <code>Encoding</code>s in a given set are present in this \xe2\x80\xa6DiPerforms <code>AND_NOT</code> operation on two arrays. If either left \xe2\x80\xa600DeConverts an <code>ArrowPrimitiveType</code> to <code>NaiveDate</code>00CfWraps this <code>i256</code> into an <code>i128</code>0ChConverts this variant to an <code>i8</code> if possible.0CmMacro to coerce a token to an item, specifically to build \xe2\x80\xa6DiCreates iterator of <code>Row</code>s directly from schema descriptor \xe2\x80\xa6BkReturns a mutable reference to a keys arrayDeDowncast this to a <code>GenericListArray</code> panicking if not \xe2\x80\xa600EaConverts this variant to a <code>List</code> if it is a <code>VariantList</code>.0CgConverts this variant to <code>()</code> if it is null.0DeConverts an <code>ArrowPrimitiveType</code> to <code>NaiveTime</code>00Dhif <code>as_type</code> is None, the returned array will itself be a \xe2\x80\xa600DnConvert <code>ByteView</code> to <code>u128</code> by concatenating the fields0BlReturns a 128bit value containing the value.0BmTry to convert the byte array to a utf8 sliceDeConverts this variant to a <code>uuid hyphenated string</code> if \xe2\x80\xa60BoThe <code>RecordBatch</code>es in the JSON fileCeReturns the bitwise and of all non-null input values.00CeReturns the bitwise xor of all non-null input values.00BlModule contains bitwise operations on arrays0CeReturns true if any non-null input value is true, \xe2\x80\xa600EhDefines boolean kernels on Arrow <code>BooleanArray</code>\xe2\x80\x99s, e.g. <code>AND</code>\xe2\x80\xa60ClCreates new statistics for <code>Boolean</code> column type.DlReturns the <code>Buffer</code> storing data for this <code>ArrayData</code>BaSets the buffers of the ArrayDataCjA vector of buffer layout specifications, one for each \xe2\x80\xa6Chreturns all buffers, as organized by Rust (i.e. null \xe2\x80\xa6CmThe buffers that store the actual data for this array, as \xe2\x80\xa624302CkBuffers correspond to the pre-ordered flattened buffer treeBaThe buffers comprising this arrayAbUnderlying buffers0AiThe underlying data storeBoDefines push-based APIs for constructing arraysDkReturns a builder to construct a <code>ArrayData</code> instance of the \xe2\x80\xa6BeReturns a new primitive array builderBcReturns a new boolean array builderB`Returns a new null array builder1024oBuffer builders4BgReturns builder for row group metadata.BjReturns builder for column chunk metadata.CjReturns builder for reader properties with default values.DkReturns a new default <code>WriterPropertiesBuilder</code> for creating \xe2\x80\xa6ClSpecifies the Catalog to search for the tables. An empty \xe2\x80\xa60CkSpecifies the catalog to search for the table. An empty \xe2\x80\xa6CnSpecifies the catalog to search for the foreign key table. \xe2\x80\xa6CnSpecifies the catalog to search for the primary key table. \xe2\x80\xa6CnThe catalog of the destination table to load data into. If \xe2\x80\xa6DfReturns the value of <code>catalog</code>, or the default value if \xe2\x80\xa600000554321AbName of a catalog.0C`How many items this iterator claims it will makeBfReturns the fields of the struct arrayCcGet a reference to all columns in the record batch.10AoThe columns in the record batchBgReturns slice of column chunk metadata.CjMetadata for each column chunk in this row group. This \xe2\x80\xa6DeCreate a <code>ProjectionMask</code> which selects only the named \xe2\x80\xa6BoReturns slice of <code>ColumnDescriptor</code>.AaCompare operationCklexicographically compare values at the wrapped columns \xe2\x80\xa6011100BcComputation kernels on Arrow ArraysCiUtilities for converting between IPC types and native \xe2\x80\xa6DjConvert the specified Arrow <code>Schema</code> to the desired Parquet \xe2\x80\xa6ClThe number of rows decoded, including any in progress if \xe2\x80\xa6ncurrent bufferAoThe currently in progress arrayBhReturn the current predicate to evaluateBlPerform arithmetic operation on a date arrayBfCrate private types for Decimal ArraysEdMaximum and minimum values for <code>Decimal256</code>, <code>Decimal128</code>, \xe2\x80\xa6kThe decoder00CkSpecialized decoders optimised for decoding to arrow formatBhDecoder for the dictionary offsets arrayBeOptional default value for this fieldBdOptional default value for this enumBeReturns default state of the builder.ChReturns the dictionary ID, if this is a dictionary type.CkReturn the sequence of dictionary IDs in the order they \xe2\x80\xa61CiFunctions for printing array values as human-readable \xe2\x80\xa60CkDivision operation, returns (quotient, remainder). This \xe2\x80\xa6ChUnsigned, little-endian, n-digit division with remainderDbCreates a new instance of <code>ArrowReaderMetrics::Enabled</code>DfEncodes <code>RecordBatch</code> into the Avro binary format. Avro \xe2\x80\xa6Bjdo the encoding / tracking of dictionariesBnwrite any bytes needed for the end of each rowDgReturns a reference to the <code>StructArray</code> entries of this mapChReturns both the key and value array builders of the mapDcThe <code>StructArray</code> that is the direct child of this array201CdGet the reference to the key-value pairs in this mapAnExecute a query on the server.CdExecutes the prepared statement query on the server.BnGets a bit in the buffer at <code>index</code>EaReturns whether bit at position <code>i</code> in <code>data</code> is set or not1100BjTry to get a int value at the given index.CiTry getting an <code>i32</code> value at the given index.10BjTry to get a map value at the given index.ChTry getting a <code>map</code> value at the given index.10CbGets a mutable reference to the underlying reader.0CbGets a mutable reference to the underlying writer.00BjGets a reference to the underlying reader.0BjGets a reference to the underlying writer.00B`Headers attached to this stream.AnOptional grpc header metadata.AcAdditional headers.DeChecks if a <code>GenericListArray</code> contains a value in the \xe2\x80\xa6BlThe integer component of the interval amountBbReturns the unscaled integer valueCbReturns the unscaled integer value of the decimal.0011000CmIf isDelta is true the values in the dictionary are to be \xe2\x80\xa6BmReturns true if the page is a dictionary pageChReturns true if the DataType can be represented as a \xe2\x80\xa6CnReturns <code>true</code> if this type is annotated as a list.CkReturns whether the element at index <code>i</code> is nullDjReturns whether the element at <code>index</code> is null according to \xe2\x80\xa60DbReturns <code>true</code> if the value at <code>idx</code> is nullCnReturns a non-null BooleanArray with whether each value of \xe2\x80\xa60BlReturns true if this type is DataType::Null.132DgReturns true if the value should be considered as <code>NULL</code> \xe2\x80\xa65ClReturns whether the value at index <code>idx</code> is null.2CmReturns true, if current value is null. Based on the fact \xe2\x80\xa6AmIs the element at index null?00DhReturns <code>true</code> if this column\xe2\x80\x99s logical type is a UTF-8 \xe2\x80\xa6AoReturns true if zero else false000BcComputation kernels on Arrow ArraysAaDump TLS key log.DbGet an Iterator over the lengths of this <code>OffsetBuffer</code>0EdSort a list of <code>ArrayRef</code> using <code>SortOptions</code> provided for \xe2\x80\xa600CiSpecifies the number of rows in the row group, before \xe2\x80\xa6CnA mapping from the writer\xe2\x80\x99s symbol index to the reader\xe2\x80\x99\xe2\x80\xa6BnReturns max value of the statistics, if known.AfThe message flatbufferCmArrowReaderMetrics for collecting metrics about the Arrow \xe2\x80\xa6gMetricsAeThe metrics collectorBnReturns min value of the statistics, if known.CkShould the strings from the source array be copied into \xe2\x80\xa6EaCreate a new opaque command <code>CMD</code> <code>FlightDescriptor</code> to \xe2\x80\xa6BnCreates a new <code>PyErr</code> of this type.CoCreate a new <code>Field</code> with <code>DataType::Map</code>0EgCreate a new <code>BooleanBuffer</code> of <code>length</code> where all values are \xe2\x80\xa60DkDefines numeric arithmetic kernels on <code>PrimitiveArray</code>, such \xe2\x80\xa60C`Returns a reference to the offsets of this arrayBoReturns a reference to the offsets of this listBnReturns a reference to the offsets of this mapD`Returns the <code>offsets</code> buffer if this is a dense array232102BhOffsets delimiting field start positionsAnOffsets into <code>data</code>0DnRow <code>i</code> has data <code>&amp;buffer[offsets[i]..offsets[i+1]]</code>AlSort options for this column0AbIpc writer optionsAiBackend-specific options.0CnControls how JSON should be encoded, e.g. whether to write \xe2\x80\xa6003lSort optionsCbFlightEndpoints are in the same order as the data.0CcReturns ordinal position of this row group in file.BjOrdinal position of this row group in fileAoRow group ordinal in the file *C`This crate contains the official Native Rust \xe2\x80\xa6AnArbitrary auth/handshake info.000AcThe decoded payloadBcCreate a prepared statement object.CmParquet schema printer. Provides methods to print Parquet \xe2\x80\xa6BnProjects the schema onto the specified columnsCkReturns a new schema with only the specified columns in \xe2\x80\xa610DfTries to create a iterator of <code>Row</code>s using projections. \xe2\x80\xa6AhRead an <code>i8</code>.B`C function to release the stream00DhReserve space to at least <code>additional</code> new bits. Capacity \xe2\x80\xa6DbReserve space for at least <code>additional</code> further offsetsEjReserves memory for <em>at least</em> <code>n</code> more elements of type <code>T</code>.DkEnsures that this buffer has at least <code>self.len + additional</code>\xe2\x80\xa6321BjReserves memory from the pool. Infallible.01234ChThis method reserves capacity for field names in the \xe2\x80\xa60AbReverse the fileds0CiA map from a schema\xe2\x80\x99s fingerprint to the schema itself.BnSets a bit in the buffer at <code>index</code>CnSets bit at position <code>i</code> for <code>data</code> to 11100fSafety0BfHas the writer output any records yet?00Ec<code>FallibleRequestStream</code> and <code>FallibleTonicResponseStream</code> \xe2\x80\xa6CfThe number of bytes between elements in each dimensionCmNon-negative byte offsets to advance one value cell along \xe2\x80\xa6BlThe symbols (values) that this enum can haveBnTesting utilities for geospatial Parquet typesDcConverts a <code>f16</code> into the underlying bit representation.0BiReturns the underlying data of this array00AnConvert the decimal to an i1280FaConverts this <code>i256</code> into an <code>i128</code> returning <code>None</code> if this \xe2\x80\xa6011AnConvert the decimal to an i256000CnModule for transforming a batch of Variants represented as \xe2\x80\xa6CgThis function writes JSON directly to any type that \xe2\x80\xa60CaModule for converting Variant data to JSON formatlRows to skipDcFallible version of <code>get</code>. Returns element by index, \xe2\x80\xa60DgCreate a new <code>GenericByteArray</code> from the provided parts, \xe2\x80\xa6ClAttempt to create a new DictionaryArray with a specified \xe2\x80\xa6ChCreate a new ArrayData, validating that the provided \xe2\x80\xa6DbCreate a new <code>GenericListArray</code> from the provided partsDiCreate a new <code>PrimitiveArray</code> from the provided values and \xe2\x80\xa6CkAttempts to create RunArray using given run_ends (index \xe2\x80\xa6DkCreate a new <code>GenericByteViewArray</code> from the provided parts, \xe2\x80\xa6DkCreate a new <code>FixedSizeBinaryArray</code> from the provided parts, \xe2\x80\xa6DiCreate a new <code>FixedSizeListArray</code> from the provided parts, \xe2\x80\xa6CjCreate a new <code>MapArray</code> from the provided partsDbCreate a new <code>StructArray</code> from the provided parts, \xe2\x80\xa6DkAttempts to create a new <code>UnionArray</code>, validating the inputs \xe2\x80\xa6DfCreate a new <code>GenericListViewArray</code> from the provided partsCmCreates a <code>RecordBatch</code> from a schema and columns.Djcreate a new <code>FFI_ArrowSchema</code>. This fails if the fields\xe2\x80\x99 \xe2\x80\xa6CmCreate a new lex comparator that will wrap the given sort \xe2\x80\xa60CfTry to create a new ScalarZipper from two scalar DatumClCreates a new <code>ArrowArrayStreamReader</code> from a \xe2\x80\xa6BaCreates a new <code>Tensor</code>EdReturns an <code>ArrayFormatter</code> that can be used to format <code>array</code>DgCreate a new <code>GenericByteArray</code> from the provided parts, \xe2\x80\xa6ClAttempt to create a new DictionaryArray with a specified \xe2\x80\xa6>=DbCreate a new <code>GenericListArray</code> from the provided parts=DiCreate a new <code>PrimitiveArray</code> from the provided values and \xe2\x80\xa6=<CkAttempts to create RunArray using given run_ends (index \xe2\x80\xa6DkCreate a new <code>GenericByteViewArray</code> from the provided parts, \xe2\x80\xa6=;<86ChCreate a new ArrayData, validating that the provided \xe2\x80\xa6E`Try to create a <code>MessageBuffer</code> from the provided <code>Buffer</code>CgCreate a reader for decoding arrays from an encoded \xe2\x80\xa6B`Try to create a new file reader.BbTry to create a new stream reader.CjTry to create a new writer, with the schema written as \xe2\x80\xa60ClTry to create IpcWriteOptions, checking for incompatible \xe2\x80\xa6CmCreate a new lex comparator that will wrap the given sort \xe2\x80\xa60Djcreate a new <code>FFI_ArrowSchema</code>. This fails if the fields\xe2\x80\x99 \xe2\x80\xa6ClConstruct this extension type for a field with the given \xe2\x80\xa6C`Returns a new fixed shape tensor extension type.CiReturns metadata for a fixed shape tensor extension type.CcReturns a new variable shape tensor extension type.CjReturns metadata for a variable shape tensor extension \xe2\x80\xa6CfTry to create a new ScalarZipper from two scalar DatumBlCreate a new <code>ColumnValueEncoder</code>BcCreates a new level histogram data.DgCreate a new <code>ParquetMetaDataPushDecoder</code> with the given \xe2\x80\xa6CdTry to decode the footer tail from the given 8 bytesCiCreate a new <code>ParquetRecordBatchReaderBuilder</code>0DhCreate a new <code>ParquetRecordBatchReader</code> from the provided \xe2\x80\xa6BmCreate a new <code>ArrowReaderMetadata</code>DkCreate a new <code>StatisticsConverter</code> to extract statistics for \xe2\x80\xa6B`Try to create a new Arrow writerEcCreate a new <code>LevelInfoBuilder</code> for the given <code>Field</code> and \xe2\x80\xa6BfTry to create a new Async Arrow WriterDbAttempt to create a new <code>EncodingMask</code> from an integer.BlAttempts to create a gzip compression level.BnAttempts to create a brotli compression level.ClAttempts to create a zstd compression level from a given \xe2\x80\xa6CgCreates a new decimal value from the given unscaled \xe2\x80\xa6CkAttempts to create a new instance of this decimal type, \xe2\x80\xa600DbAttempts to interpret <code>value</code> as a variant array value.DbAttempts to interpret <code>bytes</code> as a variant metadata \xe2\x80\xa6EbAttempts to interpet <code>metadata</code> and <code>value</code> as a variant \xe2\x80\xa6DfAttempts to interpret <code>value</code> as a variant short string \xe2\x80\xa6CmAttempts to interpret a metadata and value buffer pair as \xe2\x80\xa6DhCreates a new <code>VariantArray</code> from a <code>StructArray</code>.7DbBuild from the <code>offset_size_minus_one</code> bits (see spec).326CmTries to construct the variant metadata header, which has \xe2\x80\xa66598882EeCreates a new <code>ShreddedVariantFieldArray</code> from a <code>StructArray</code>.DjReturns the <code>type_id</code> for the array slot at <code>index</code>.0AjThe type id for this fieldAkThe type id for union typesCkReturns a reference to an untyped <code>ColumnWriter</code>Dk\xe2\x9a\xa0\xef\xb8\x8f Experimental Support for reading and writing <code>Variant</code>\xe2\x80\xa6CkCreates a new instance suitable for a top-level variant \xe2\x80\xa60CnThe Substrait release, e.g. \xe2\x80\x9c0.12.0\xe2\x80\x9d. This information \xe2\x80\xa60AbThe format versionAmReturns version of this file.AfVersion of this file *AlThe variant protocol version0CcUtilities to traverse against various parquet type.BjSets optional field id and returns itself.0CkUnion of all contiguous x intervals to the right of the \xe2\x80\xa6CmA reference-counted reference to a generic <code>Array</code>00AlDecoding a block byte lengthAoParquet physical type: BoolTypeBeEmbedded BSON logical type annotationD`Helper to access views of <code>GenericByteViewArray</code> (\xe2\x80\xa600mGet catalogs.AnAdvanced to the next predicateCnA service specific expression that can be used to return a \xe2\x80\xa60BdError during CSV-related operations.00AlData page Parquet format v1.CkDatatypes supported by this implementation of Apache Arrow.00CmContains the Parquet physical type information as well as \xe2\x80\xa6CgValid parts to extract from date/time/timestamp arrays.00ChPrimitive (type_id=1): DECIMAL(precision, scale) 32-bits00ChPrimitive (type_id=1): DECIMAL(precision, scale) 64-bits00A`Decoding a batchBcMetrics are not collected (default)ClMeasure of elapsed time in either seconds, milliseconds, \xe2\x80\xa600CjEncodings supported by Parquet.  Not all encodings are \xe2\x80\xa6AoEncodings supported by Parquet.AiAn external error variantBfA reference counted <code>Field</code>00AaFinished decodingAmReached the end of the streamAoThe decoder finished processingBlThe decoder has finished processing all dataC`Finished (or not yet started) reading this groupCnA geospatial feature in the Well-Known Binary (WKB) format \xe2\x80\xa6CdTrait for calculating the size of various containersAlEquality ignoring ASCII caseBi<code>f16</code> positive Infinity (+\xe2\x88\x9e)0AcAn interval of time0CkTrue for 64 bit offset size and false for 32 bit offset \xe2\x80\xa6000AlA signed 8-bit integer type.00CkA best effort interner that maintains a fixed number of \xe2\x80\xa6CmA \xe2\x80\x9ccalendar\xe2\x80\x9d interval which models types that don\xe2\x80\x99t \xe2\x80\xa6ClRepresents Avro duration logical type, maps to Arrow\xe2\x80\x99s \xe2\x80\xa611Bc1D Interval that never wraps aroundEcError during IPC operations in <code>arrow-ipc</code> or <code>arrow-flight</code>.00BeEmbedded JSON logical type annotationCjuser defined key value pairs to add custom metadata to \xe2\x80\xa6BoA key-value pair for <code>FileMetaData</code>.BbWrapper struct to store key valuesCcEncode/decode structs as lists (e.g., [1, \xe2\x80\x9cc\xe2\x80\x9d])Cj(NOT YET FULLY SUPPORTED)  A list of some logical data \xe2\x80\xa6ChRepresents the same logical types that List can, but \xe2\x80\xa611CnA location where a Flight service will accept retrieval of \xe2\x80\xa60AjAn array of key-value maps000BiThe metadata type of this extension type.Ac<code>f16</code> -00BdIndicates that the field is nullableBcNeither a delta, nor an exact matchCfLogical type to annotate a column that is always null.CmThe field is optional (can be null) and each row has 0 or \xe2\x80\xa600CiRead the page index if it exists, otherwise do not error.0DdOwned version of a <code>Row</code> that can be moved/cloned freely.CkAvailable data pages for Parquet file format. Note that \xe2\x80\xa6C`The information to process a long-running query.0CfThe field is repeated and can contain 0 or more valuesCgThe field is repeated and can contain 0 or more values.0CmThis field is required (can not be null) and each row has \xe2\x80\xa600CfA plan reading specific rows from a Parquet Row Group.0BiDictionary was replaced with the new dataCjRequire the page index to exist, and error if it does not.0CeResolves Avro type names to <code>AvroDataType</code>AjRoll back the transaction.0AiRoll back to a savepoint.BbAn iterator over <code>Rows</code>BbAn array of run-end encoded values000BkAn allocation using <code>std::alloc</code>AlTime logical type annotationChAn absolute length of time in seconds, milliseconds, \xe2\x80\xa600DiTime unit for <code>Time</code> and <code>Timestamp</code> logical types.BkA direct type name (primitive or reference)DfEither a <code>PrimitiveType</code> or a reference to a previously \xe2\x80\xa6BjAn <code>Offset</code> for <code>Tz</code>00ChUnsigned (depending on physical type either value or \xe2\x80\xa6BdAn arrow utf8 array with i32 offsets00CgA variable-length string in Unicode with UTF-8 encodingCjString data represented as UTF-8 encoded bytes with an \xe2\x80\xa6C`Logically the same as Utf8, but the internal \xe2\x80\xa622CfReturns a slice containing every variant of this enum.00000Cchttps://en.wikipedia.org/wiki/Vincenty%27s_formulaeAgDecoding a value lengthCgVariable state: The length of row <code>i</code> is \xe2\x80\xa6CiFor forward compatibility; used when an unknown union \xe2\x80\xa6AaUnknown algorithmCbPhantom so we can use the same struct for both \xe2\x80\xa6Dkreturns a <code>RowSelection</code> representing rows that are selected \xe2\x80\xa6DnAppends n <code>additional</code> bits of value <code>v</code> into the bufferDdAppends a value of type <code>T</code> into the builder N times, \xe2\x80\xa61CkAppend a value multiple times to the array. This is the \xe2\x80\xa60021200012D`Applies <code>op</code> to possibly scalar <code>ArrayOrd</code>DeDowncast this to a <code>GenericByteArray</code> panicking if not \xe2\x80\xa600BjReturns slice of bytes for this data type.CbReturns a slice of 16 octets containing the value.0CiConverts this variant to an <code>i16</code> if possible.0CiConverts this variant to an <code>i32</code> if possible.0CiConverts this variant to an <code>i64</code> if possible.0AgReturns the packed bitsBiReturns the inner bitmap builder as sliceBkView the contents of this buffer as a sliceBlReturns the byte slice stored in this bufferCbReturns the data stored in this buffer as a slice.43210234BeReturn the current buffer as a slice.DdDowncast this to a <code>UnionArray</code> panicking if not possible00CjConvert to usize according to the <code>as</code> operator00CnNumber of bits per value. The only accepted widths are 128 \xe2\x80\xa6BgUtils for working with packed bit masks000AkUtils for working with bits00CgReturns true if all non-null input values are true, \xe2\x80\xa600AnStores the value for booleans.DhWhether <code>arrow_ord::rank</code> can rank an array of given data \xe2\x80\xa6CgReturns the capacity of the buffer, in bits (not bytes)CkReturns the actual capacity (number of elements) of the \xe2\x80\xa6CmReturns the capacity of this builder measured in slots of \xe2\x80\xa60CmReturns the capacity of this buffer. For externally owned \xe2\x80\xa6CdReturns the total capacity in this buffer, in bytes.4322ChReturns the number of rows that can be added to this \xe2\x80\xa6ClReturns the maximum memory that can be reserved from the \xe2\x80\xa60325DcInitial capacity of the <code>bitmap_builder</code>, when it is \xe2\x80\xa607CiReturns the number of records that can be read before \xe2\x80\xa6BoReturns an iterator to the schema\xe2\x80\x99s children.0AcThe children fieldsBeThe children columns for nested typesCnchildren apply only to nested data types like Struct, List \xe2\x80\xa63CbReturns the floating point category of the number.0Eg<code>BatchCoalescer</code>  concatenates multiple <code>RecordBatch</code>es after \xe2\x80\xa60ChFlush any buffered data to the underlying writer and \xe2\x80\xa6CiCompress the data in input buffer and write to output \xe2\x80\xa6DbReturns true if all nulls in <code>other</code> also exist in selfBnPerform SQL <code>CONTAINS(left, right)</code>DeCheck to see if <code>self</code> is a superset of <code>other</code>E`Check to see if <code>self</code> is a superset of <code>other</code> field. \xe2\x80\xa61DmCheck to see if <code>self</code> is a superset of <code>other</code> schema.4CmWhether all set bits in a source flags value are also set \xe2\x80\xa623314DkReturns a number composed of the magnitude of <code>self</code> and the \xe2\x80\xa60BoUtilities to generate random arrays and batchesAaOffsets into dataCnReturns the pointer to the start of the buffer without the \xe2\x80\xa60AgThe name of dimension iDcCreates a new instance of <code>ArrowReaderMetrics::Disabled</code>CgA utility method which detects input type and calls \xe2\x80\xa6EdPerform <code>left IS DISTINCT FROM right</code> operation on two <code>Datum</code>0EeFlush the data written by <code>sync_writer</code> into the <code>async_writer</code>DcDowncast this <code>RunArray</code> to a <code>TypedRunArray</code>0BnGet the reference to the elements in this listBdReturns encoding for values in page.BhReturns this page <code>Encoding</code>.B`Encoding for values in this page00BcEncoding using this dictionary pageBfReturns encoding for a column, if set.BjReturns optional encoding for this column.BbEncoding used for this data page *BeEncoding using this dictionary page *BeEncoding used for data in this page *Afencoding of the page *CdReturns a string representation for a given encodingCgEncoding used for all columns, if dictionary is not \xe2\x80\xa6CnA list of endpoints associated with the flight. To consume \xe2\x80\xa60CbCreate a FlightEndpoint with a ticket and locationCbEvaluate this predicate against the given haystack0DbEvaluate this predicate for the given <code>RecordBatch</code> \xe2\x80\xa60BaFeatures used in the stream/file.CjWhen the original schema supports field ids, this will \xe2\x80\xa60CmThe field id encountered when parsing the unknown logical \xe2\x80\xa6BoAn indicator of whether the stream is complete.CnWhether the writer footer has been written, and the writer \xe2\x80\xa60AgIs the writer finished?00BjThe foreign table name. It cannot be null.0BiPerform an arithmetic operation on floatsCjConstructs a 16-bit floating point value from a 32-bit \xe2\x80\xa60AlConvert a decimal from a f640DiCreate an optional i256 from the provided <code>f64</code>. Returning \xe2\x80\xa6011CjConstructs a 16-bit floating point value from a 64-bit \xe2\x80\xa60BjImport ArrayData from the C Data Interface00GbConverts an <code>i32</code> to a <code>CancelStatus</code>, or <code>None</code> if <code>value</code> is not \xe2\x80\xa6G`Converts an <code>i32</code> to a <code>DescriptorType</code>, or <code>None</code> if <code>value</code> is \xe2\x80\xa6FoConverts an <code>i32</code> to a <code>SqlInfo</code>, or <code>None</code> if <code>value</code> is not a \xe2\x80\xa6FcConverts an <code>i32</code> to a <code>SqlSupportedTransaction</code>, or <code>None</code> if \xe2\x80\xa6FdConverts an <code>i32</code> to a <code>SqlSupportedCaseSensitivity</code>, or <code>None</code> \xe2\x80\xa6GaConverts an <code>i32</code> to a <code>SqlNullOrdering</code>, or <code>None</code> if <code>value</code> is \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>SupportedSqlGrammar</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6EeConverts an <code>i32</code> to a <code>SupportedAnsi92SqlGrammarLevel</code>, or \xe2\x80\xa6FeConverts an <code>i32</code> to a <code>SqlOuterJoinsSupportLevel</code>, or <code>None</code> if \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>SqlSupportedGroupBy</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6FcConverts an <code>i32</code> to a <code>SqlSupportedElementActions</code>, or <code>None</code> \xe2\x80\xa6EeConverts an <code>i32</code> to a <code>SqlSupportedPositionedCommands</code>, or \xe2\x80\xa6FbConverts an <code>i32</code> to a <code>SqlSupportedSubqueries</code>, or <code>None</code> if \xe2\x80\xa6GaConverts an <code>i32</code> to a <code>SqlSupportedUnions</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6FeConverts an <code>i32</code> to a <code>SqlTransactionIsolationLevel</code>, or <code>None</code> \xe2\x80\xa6FdConverts an <code>i32</code> to a <code>SqlSupportedTransactions</code>, or <code>None</code> if \xe2\x80\xa6FeConverts an <code>i32</code> to a <code>SqlSupportedResultSetType</code>, or <code>None</code> if \xe2\x80\xa6EgConverts an <code>i32</code> to a <code>SqlSupportedResultSetConcurrency</code>, or \xe2\x80\xa6GaConverts an <code>i32</code> to a <code>SqlSupportsConvert</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>XdbcDataType</code>, or <code>None</code> if <code>value</code> is not \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>XdbcDatetimeSubcode</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6G`Converts an <code>i32</code> to a <code>Nullable</code>, or <code>None</code> if <code>value</code> is not a \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>Searchable</code>, or <code>None</code> if <code>value</code> is not a \xe2\x80\xa6G`Converts an <code>i32</code> to a <code>UpdateDeleteRules</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6G`Converts an <code>i32</code> to a <code>EndTransaction</code>, or <code>None</code> if <code>value</code> is \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>TableNotExistOption</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6G`Converts an <code>i32</code> to a <code>TableExistsOption</code>, or <code>None</code> if <code>value</code> \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>EndSavepoint</code>, or <code>None</code> if <code>value</code> is not \xe2\x80\xa6GbConverts an <code>i32</code> to a <code>CancelResult</code>, or <code>None</code> if <code>value</code> is not \xe2\x80\xa6C`Creates new decimal value from <code>i32</code>.C`Creates new decimal value from <code>i64</code>.CmTakes ownership of the pointed to <code>FFI_ArrowArray</code>CnTakes ownership of the pointed to <code>FFI_ArrowSchema</code>DcTakes ownership of the pointed to <code>FFI_ArrowArrayStream</code>DkCreates a new <code>ArrowArrayStreamReader</code> from a raw pointer of \xe2\x80\xa6321032CiCreates a GenericBinaryArray from a vector of byte slicesDoCreate a <code>Buffer</code> from the provided <code>Vec</code> without copying110CjWidening left shift of an N-digit array by at most 63 bitsClNarrowing right shift of an (N+1)-digit array by at most \xe2\x80\xa6BnTry to get a boolean value at the given index.ClTry getting a <code>boolean</code> value at the given index.10BkTry to get a byte value at the given index.CiTry getting a <code>byte</code> value at the given index.10AhGet the keys of the map.0BkTry to get a list value at the given index.CiTry getting a <code>list</code> value at the given index.10BkTry to get a long value at the given index.CiTry getting an <code>i64</code> value at the given index.10BlC function to get next array from the stream00BlReturn a new Variant with the path followed.0DeGet a <code>Read</code> instance starting at the provided file offsetBkTry to get a uint value at the given index.ChTry getting a <code>u32</code> value at the given index.10CnCheck whether there is more data to read from this column, \xe2\x80\xa6CjReturns true, if current reader has more values, false \xe2\x80\xa6CmProvides check on values/levels left without invoking the \xe2\x80\xa6CnQuick check if iterator has more values/levels to read. It \xe2\x80\xa6CaFind the index of the column with the given name.0BhConvert the command to <code>Any</code>.CcConverts self into a <code>Vec</code>, if possible.0CjReturns true if all data within this string array is ASCIICcReturns true if all data within this array is ASCII01110001EhReturns whether the <code>UnionArray</code> is dense (or sparse if <code>false</code>\xe2\x80\xa60BdReturns whether this array is empty.B`Whether this dictionary is emptyAhReturns true if len is 0CdReturns whether this <code>ArrayData</code> is empty3AeReturns true if emptyAnCheck if the builder is empty.BmReturns whether the internal buffer is empty.BmReturns whether number of array slots is zero077Ajwhether the array is emptyBdReturns true if the buffer is empty.BlReturns whether this buffer is empty or not.AnReturns if the buffer is emptyChReturns true if this <code>BooleanBuffer</code> is emptyCeReturns true if this <code>NullBuffer</code> is emptyBdReturns true if this buffer is emptyBkReturns true if this contains no partitionsBjReturns true if there is any buffered dataBjReturns <code>true</code> if this is emptyBdReturns whether this array is empty.0B`Whether this dictionary is empty1;?>=<6:9875=>?BdReturns true if the decoder is empty<CdReturns whether this <code>ArrayData</code> is emptyAhReturns true if len is 0DiTrue if there are no records to flush, i.e. <code>Self::len</code> is \xe2\x80\xa68BoWhether all bits in this flags value are unset.78Bareturns if the histogram is emptyBiChecks if the underlying buffer is empty.AkIs the array of zero lengthCdTrue if this metadata dictionary contains no entriesCfReturns true if the object contains no key-value pairsCjTrue if this interval is empty (i.e. intersects no values)321EeReturns <code>true</code> if this type is a group type, <code>false</code> otherwise.CoReturns whether the element at index <code>i</code> is not nullBnGets a bit in the buffer at <code>index</code>DoReturns whether the element at <code>index</code> is <em>not</em> null, the \xe2\x80\xa60DfReturns <code>true</code> if the value at <code>idx</code> is not null12023EjReturns <code>true</code> if <code>value</code> is a variant of <code>CancelStatus</code>.ElReturns <code>true</code> if <code>value</code> is a variant of <code>DescriptorType</code>.EeReturns <code>true</code> if <code>value</code> is a variant of <code>SqlInfo</code>.DcReturns <code>true</code> if <code>value</code> is a variant of \xe2\x80\xa60EmReturns <code>true</code> if <code>value</code> is a variant of <code>SqlNullOrdering</code>.FaReturns <code>true</code> if <code>value</code> is a variant of <code>SupportedSqlGrammar</code>.22FaReturns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportedGroupBy</code>.333F`Returns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportedUnions</code>.4444F`Returns <code>true</code> if <code>value</code> is a variant of <code>SqlSupportsConvert</code>.EjReturns <code>true</code> if <code>value</code> is a variant of <code>XdbcDataType</code>.FaReturns <code>true</code> if <code>value</code> is a variant of <code>XdbcDatetimeSubcode</code>.EfReturns <code>true</code> if <code>value</code> is a variant of <code>Nullable</code>.EhReturns <code>true</code> if <code>value</code> is a variant of <code>Searchable</code>.EoReturns <code>true</code> if <code>value</code> is a variant of <code>UpdateDeleteRules</code>.ElReturns <code>true</code> if <code>value</code> is a variant of <code>EndTransaction</code>.FaReturns <code>true</code> if <code>value</code> is a variant of <code>TableNotExistOption</code>.EoReturns <code>true</code> if <code>value</code> is a variant of <code>TableExistsOption</code>.EjReturns <code>true</code> if <code>value</code> is a variant of <code>EndSavepoint</code>.EjReturns <code>true</code> if <code>value</code> is a variant of <code>CancelResult</code>.BiIs the element at index valid (not null)?00CbFallible iteration over the elements of this list.CmReturns an iterator that attempts to visit all dictionary \xe2\x80\xa6CbFallible iteration over the fields of this object.210BjIdiomatic iterators for <code>Array</code>0BjReturns the data type of the map\xe2\x80\x99s keys.0AnNumber of list items per valueChA list of URIs where this ticket can be redeemed via \xe2\x80\xa60EcConstructs a <code>Map</code> from the list of <code>entries</code> and returns it.BgThe raw binary data of the metadata mapDbReturns the metadata in the schema as <code>Key-Value</code> pairsDjReturns the immutable reference to the <code>Field</code>\xe2\x80\x99s optional \xe2\x80\xa6CgReturns an immutable reference to the Map of custom \xe2\x80\xa60ChA map of key-value pairs containing additional metadata.3CeReturns an iterator over the meta keys in this headerCjReturn a reference to gRPC metadata included with each \xe2\x80\xa6CjOptional grpc header metadata to include with each requestCmBuilders and function for building responses to FlightSQL \xe2\x80\xa6BdAn array of metadata key-value pairsBbThe metadata for the field, if anyCnA map of key-value pairs containing additional custom meta \xe2\x80\xa67:90CiReturns a reference to the metadata of this extension \xe2\x80\xa6BdThe metadata of this extension type.000::9AnMetadata for this column chunkAdParquet metadata APIBiGet metadata information about this file.BnGet metadata information about this row group.DdReturns a reference to the <code>ParquetMetaData</code> for this \xe2\x80\xa60BeThe Parquet Metadata, if known apriorAiThe Parquet file metadataCgReturn the metadata dictionary associated with this \xe2\x80\xa60BcThe metadata column of this variant0CfCreates a new field that has additional dictionary \xe2\x80\xa60DhCreate a <code>DataType::List</code> with elements of the specified typeD`Create a new <code>Field</code> with <code>DataType::List</code>01BkCreates a nested list builder. See e.g. \xe2\x80\xa6CkReturns a list builder that can be used to append a new \xe2\x80\xa60EbCreate an <code>ListBuilder</code> for creating <code>Variant::List</code> values.22011BnCreate a new DecodedFlightData with no payloadEcCreate a new <code>GenericByteArray</code> of length <code>len</code> where all \xe2\x80\xa6FeReturns a new <code>ArrayData</code> valid for <code>data_type</code> containing <code>len</code> \xe2\x80\xa6EcCreate a new <code>GenericListArray</code> of length <code>len</code> where all \xe2\x80\xa6DjCreate a new <code>PrimitiveArray</code> of the given length where all \xe2\x80\xa6EgCreate a new <code>GenericByteViewArray</code> of length <code>len</code> where all \xe2\x80\xa6EgCreate a new <code>BooleanArray</code> with length <code>len</code> consisting only \xe2\x80\xa6EgCreate a new <code>FixedSizeBinaryArray</code> of length <code>len</code> where all \xe2\x80\xa6EeCreate a new <code>FixedSizeListArray</code> of length <code>len</code> where all \xe2\x80\xa6EeCreate a new <code>StructArray</code> of length <code>len</code> where all values \xe2\x80\xa6EgCreate a new <code>GenericListViewArray</code> of length <code>len</code> where all \xe2\x80\xa6Chcreates a new MutableBuffer with capacity and length \xe2\x80\xa6EhCreate a new <code>NullBuffer</code> of length <code>len</code> where all values are \xe2\x80\xa66;549837201:DkResets the state of this <code>PageMetrics</code> to the initial state. \xe2\x80\xa6E`Create a new named path <code>PATH</code> <code>FlightDescriptor</code> that \xe2\x80\xa6AeDescribes a view type0CmReturns if the field is semantically nullable, regardless \xe2\x80\xa60AkThe nullability of the type0AmWhether the field is nullableCjWhether or not this field can contain nulls. Should be \xe2\x80\xa63BjReturns the number of rows in each column.0AkThe number of rows bufferedAjReturns the number of rowsD`Returns the number of <code>Row</code> in this <code>Rows</code>BkThe number of rows within the page if knownAkNumber of rows in this pageBcReturns number of rows in the file.BaNumber of rows in this row group.CnNumber of rows in this data page. Every page must begin at \xe2\x80\xa6BbNumber of rows in this row group *AmNumber of rows in this file *BiGet the number of rows in this collectionDkCompute an optimised representation of the provided <code>filter</code> \xe2\x80\xa60B`Parses the next i8 integer valueB`Parses the next u8 integer valueiPassword.BiThe parent table name. It cannot be null.0BcReturns the current cursor positionClQuery progress. If known, must be in [0.0, 1.0] but need \xe2\x80\xa6DgReturns the value of <code>progress</code>, or the default value if \xe2\x80\xa61CoGenerate a new <code>FlightError::ProtocolError</code> variant.AiRead an <code>i16</code>.AiRead an <code>i32</code>.AiRead an <code>i64</code>.CfRead a ULEB128 encoded unsigned varint from the input.AhReceiver for FlightErrorCeRegisters a schema with the store and returns its \xe2\x80\xa6AfUnderlying data streamDgCalled by <code>ParentState::drop</code> to revert any changes that \xe2\x80\xa600C`Returns a reference to <code>RunEndBuffer</code>CgReturns the run_ends of this <code>TypedRunArray</code>10BnUtil function to set bits in a slice of bytes.000CaSet data for this <code>ColumnLevelDecoder</code>AiSet the current data pageAnSets data for this INT96 type.BbSet data from another byte buffer.CcEstablish the data that will be decoded in a bufferAoSet the current dictionary pageBgSet the name of this <code>Field</code>0CbSets <code>type</code> to the provided enum value.CaLeft shift of an N-digit array by at most 63 bitsAnSkip a ULEB128 encoded varint.DdHelpers for building responses to <code>CommandGetSqlInfo</code> \xe2\x80\xa6Bo<code>take</code> implementation for run arraysCfDefines temporal kernels for time and date related \xe2\x80\xa60AmTimezone for timestamp arraysBiReturns the timezone of this array if any10CmThe timezone is an optional string indicating the name of \xe2\x80\xa6AmConvert native type to isize.00CnConverts this INT96 into an i64 representing the number of \xe2\x80\xa6CjReturns this <code>i256</code> as a low u128 and high i128CfTurns a IntervalDayTimeType into a tuple of (days, \xe2\x80\xa6CmTurns a IntervalMonthDayNanoType into a tuple of (months, \xe2\x80\xa6102AmConvert native type to usize.00CiHelper to extract HTTP/gRPC trailers from a tonic stream.BaTrailers attached to this stream.AoOptional grpc trailer metadata.BiTruncates the builder to the given length0CdShorten this BufferBuilder to <code>len</code> itemsBoTruncates this buffer to <code>len</code> bytes2210122Cgbuilds a StructArray from a vector of names and arrays.AgSee CDataInterface docs010EbConverts an <code>ArrowSchema</code> to <code>AvroSchema</code>, delegating to \xe2\x80\xa6DfCreates a <code>SchemaStore</code> from a HashMap of schemas. Each \xe2\x80\xa622CjAttempts to (asynchronously) parse the footer metadata \xe2\x80\xa6DkIf <code>validate_utf8</code> this verifies that the first character of \xe2\x80\xa6CgReturns the <code>type_ids</code> buffer for this array0Aitype_url for this MessageAlGet the URL for the command.ClA URL/resource name that uniquely identifies the type of \xe2\x80\xa6iUsername.ClConvert from usize according to the <code>as</code> operator00Dh\xe2\x80\x9ccheap\xe2\x80\x9d validation of an <code>ArrayData</code>. Ensures buffers areDjVerifies that every consecutive pair of <code>offsets</code> denotes a \xe2\x80\xa6CiVerifies that the provided buffers are valid for this \xe2\x80\xa610102DcReturns the packed validity of this <code>NullBuffer</code> not \xe2\x80\xa60BlThe validity bitmap to determine null valuesBlThis field only applies to the view type \xe2\x80\xa600BnWrite a zig-zag encoded <code>i8</code> value.BlCache and allocation multiple alignment size00CfA generic representation of Arrow array data which \xe2\x80\xa600CnAn iterator that returns Some(T) or None, that can be used \xe2\x80\xa600AlAn Arrow file in JSON formatClA struct that represents an Arrow file with a schema and \xe2\x80\xa6BeError during Avro-related operations.00BaA named <code>AvroDataType</code>B`A message for doing simple auth.0C`Iterates over an arbitrarily aligned byte buffer00C`<strong>Deprecated</strong> Bit-packed encoding.ClThe result of checking which type_ids matches the target \xe2\x80\xa6oCSV file readerAoStatistics for ByteArray columnBjRust representation for BYTE_ARRAY and \xe2\x80\xa6oPredicate cacheCmThe cancellation request is complete. Subsequent requests \xe2\x80\xa600BnError during casting from one type to another.00AgData type of the array.Cithe corresponding Arrow data type of this primitive type.00AjDatatype of array elements01100BaThe corresponding Arrow data type32110BjDay of year, in range <code>1..=366</code>00AmGet db schemas for a catalog.CiPrimitive (type_id=1): DECIMAL(precision, scale) 128-bits00CiExact 32-bit width decimal value with precision and scale00CiExact 64-bit width decimal value with precision and scale00BiThe end of an object, i.e. <code>}</code>Ae<code>f16</code> 1/\xcf\x800Ae<code>f16</code> 2/\xcf\x800Ae<code>f16</code> \xcf\x80/20Ae<code>f16</code> \xcf\x80/30Ae<code>f16</code> \xcf\x80/40Ae<code>f16</code> \xcf\x80/60Ae<code>f16</code> \xcf\x80/80Dg<code>FieldData</code> is a helper struct to track the state of the \xe2\x80\xa6CgData structures for describing a table row batch (a \xe2\x80\xa6CnPer\xe2\x80\x91site encoder plan for a field. This mirrors the Avro \xe2\x80\xa6B`Parquet physical type: FloatTypeCkA geospatial feature in the WKB format with an explicit \xe2\x80\xa6CaRepresents a group of fields (similar to struct).BjRepresents a valid gzip compression level.AkSigned 16-bit integer type.00AkSigned 32-bit integer type.00B`Parquet physical type: Int32TypeAkSigned 64-bit integer type.00B`Parquet physical type: Int64TypeC`A <code>PrimitiveArray</code> of <code>i8</code>000B`Parquet physical type: Int96TypeCdPromotes an <code>int</code> to a <code>long</code>.BlProduces JSON output as a single JSON array.BeError during JSON-related operations.00CmA list of some logical data type with variable length and \xe2\x80\xa6CfSame as List, but with 64-bit offsets, allowing to \xe2\x80\xa611AbA large list arrayCkA variable-length string in Unicode with UFT-8 encoding \xe2\x80\xa6CfSame as Utf8, but with 64-bit offsets, allowing to \xe2\x80\xa611DkA <code>GenericListArray</code> of variable size lists, storing offsets \xe2\x80\xa6000B`Internal state for list building00CjMaximum no of digits after the decimal point (note the \xe2\x80\xa600DgThe multiplicative inverse for this integer type, i.e. <code>-1</code>.CaThe multiplicative inverse, i.e. <code>-1</code>.000100BgThe ranges of data necessary to proceedAlResult of a state transitionAgAn array of null values000C`The nulls are encoded as the first union variantEkA wrapper over <code>Option&lt;Regex&gt;</code> to check if the value is <code>NULL</code>.AhA string based predicateBnA primitive type like null, boolean, int, etc.AgA primitive, leaf arrayClIndicates that the writer\xe2\x80\x99s type should be promoted to \xe2\x80\xa6CmDefines the type of promotion to be applied during schema \xe2\x80\xa6ClThe response message associated with the submission of a \xe2\x80\xa60C`Order should match <code>InferredDataType</code>BmThe config of a given set of <code>Row</code>CgFilter applied <em>during</em> the parquet read process0ClInterface for reading data pages from the columns of one \xe2\x80\xa6EhA <code>RowParser</code> can be created from a <code>RowConverter</code> and used to \xe2\x80\xa6C`Edges are interpolated as geodesics on a sphere.AkTransactions and savepoints0CgA reference-counted reference to a <code>Schema</code>.00CiConfigure the data type and sort order for a given columnBjSort order for page and column statistics.CeKnow what data to actually read, after all predicatesBiThe start of a list , i.e. <code>[</code>BfNo additional codec state is necessaryBhNo additional encoder state is necessaryCmData structures for dense tensors Shape data for a single \xe2\x80\xa6BfA timestamp with an optional timezone.ChTimestamp is a 64-bit signed integer representing an \xe2\x80\xa611CmA timestamp stored as <code>TimeUnit</code> since Unix epoch.ClTo avoid generating take implementations for every index \xe2\x80\xa6CaCreate a new PyArrow object from a arrow-rs type.CnSplits a strings like Dictionary(Int32, Int64) into tokens \xe2\x80\xa6CkTokenizer to split message type string into tokens that \xe2\x80\xa6AlUnsigned 8-bit integer type.00AhComparison is undefined.CiUndefined column order, means legacy behaviour before \xe2\x80\xa6AmSparse or Dense union layouts00CfJSON file reader that produces a serde_json::Value \xe2\x80\xa60CkIndicates the number of elapsed whole months, stored as \xe2\x80\xa600AeZStandard compressionBjRepresents a valid zstd compression level.CbComputes the covering range of two optional rangesBgDefines aggregations over Arrow arrays.ClGeneric aggregation for any primitive type. Returns None \xe2\x80\xa61BaThe algorithm for setting bits. *CkAn optional algorithm can be set to correctly interpret \xe2\x80\xa6AoThe algorithm for setting bits.CfThe alignment required by Rust for an array of the \xe2\x80\xa600CjWrite padding after memory buffers to this multiple of \xe2\x80\xa6B`Returns the total allocated sizeCiTransfer data between the Arrow memory format and CSV \xe2\x80\xa6B`Support for the Arrow IPC FormatAfArrow ordering kernelsClA comparable row-oriented representation of a collection \xe2\x80\xa6DgDowncast this to a <code>GenericBinaryArray</code> panicking if not \xe2\x80\xa600BmGet a borrowed <code>Braced</code> formatter.0EdInterpret this <code>i256</code> as 4 <code>u64</code> digits, least significant \xe2\x80\xa6BjReturns the four field values of the UUID.0CoConverts this variant to an <code>Object</code> if it is an \xe2\x80\xa60BmGet a borrowed <code>Simple</code> formatter.0DgDowncast this to a <code>GenericStringArray</code> panicking if not \xe2\x80\xa600CmConverts this variant to a <code>&amp;str</code> if possible.0DeDowncast this to a <code>StructArray</code> panicking if not possible00CaReturns the current available memory in the pool.0CjaxisOrder stores the sequence in which dimensions were \xe2\x80\xa6AjIs the beginning-of-writerClReturns a slice of this buffer starting at a certain bit \xe2\x80\xa60BjThe bit width of the dictionary index typeBbThe number of bits in the integer.AiNumber of bytes per valueAjCanonical extension types.CnCast the container type of List/Largelist array along with \xe2\x80\xa6AlReturns the number of chunks0Amnumber of complete u64 chunks0AaCompleted batchesAacompleted buffersCdCopy rows from the current source array into the \xe2\x80\xa6CkThe actual batch of Arrow data. Preferably handled with \xe2\x80\xa60CoReturns a reference to the <code>DataType</code> of this array.DoReturns a reference to the <code>DataType</code> of this <code>ArrayData</code>CjCreates a new array data builder from an existing one, \xe2\x80\xa62EdReturns an immutable reference to the <code>Field</code>\xe2\x80\x99s  <code>DataType</code>.BhThe data type of the <code>Tensor</code>4DfThe Arrow data type represented in the <code>values_buffer</code>, \xe2\x80\xa6BeReturns the <code>AvroDataType</code>mThe data type650BoSpecifies the data type to search for the info.DhReturns the value of <code>data_type</code>, or the default value if \xe2\x80\xa61AiThe data type of the type0iData type8AfData type of the arrayCmData types that connect Parquet physical types with their \xe2\x80\xa6CmReturns a new DataType representing this VariantArray\xe2\x80\x99s \xe2\x80\xa60BoDefines the logical data types of Arrow arrays.CiGiven an array, return a new array with the extracted \xe2\x80\xa600CjSpecifies the schema to search for the table. An empty \xe2\x80\xa6CmSpecifies the schema to search for the foreign key table. \xe2\x80\xa6CmSpecifies the schema to search for the primary key table. \xe2\x80\xa6DhReturns the value of <code>db_schema</code>, or the default value if \xe2\x80\xa600321AlThe current definition levelCiGet the CSV file\xe2\x80\x99s column delimiter as a byte characterD`Optional column delimiter. Defaults to <code>b&#39;,&#39;</code>ofield delimiterBdExplicit names to tensor dimensions.000CmFlight services can support an arbitrary number of simple \xe2\x80\xa60EgMake a <code>DoAction</code> call to the server and returning a <code>Stream</code> \xe2\x80\xa61CkDoAction allows a flight client to do a specific action \xe2\x80\xa6CmThe order of encodings within the generated metadata does \xe2\x80\xa60BcAll encodings used for this column.CmSet of all encodings used for this column. The purpose is \xe2\x80\xa6DhReturn an iterator over all <code>Encoding</code>s present in this mask.BnPerform SQL <code>ENDSWITH(left, right)</code>DjThis is faster than <code>[u8]::ends_with</code> for small slices. See \xe2\x80\xa61DjThis is faster than <code>str::ends_with</code> for small strings. See \xe2\x80\xa6BhExpand this interval by a given distanceA`Extension types.EbReturns a mutable reference to the <code>FieldRef</code> at index <code>idx</code>0BfFile where the column chunk is stored.CmFile where column data is stored.  If not set, assumed to \xe2\x80\xa6AjConvert from a bits value.CkConstructs a 16-bit floating point value from the raw bits.0DcCreates iterator of <code>Row</code>s for all row groups in a file.CgCreate an <code>i256</code> value from a 128-bit value.0D`The bitwise or (<code>|</code>) of the bits in each flags value.CjModule for transforming a batch of JSON strings into a \xe2\x80\xa6BjModule for parsing JSON strings as VariantClGet a flags value with the bits of a flag with the given \xe2\x80\xa6BcCreates a UUID from a 128bit value.0CdGenerate a random value within the range of the typeCkReturns the bytes for the given range from the internal \xe2\x80\xa6CcGet a range of data in memory as <code>Bytes</code>BhRetrieve the bytes in <code>range</code>BlTry to get a bytes value at the given index.CjTry getting a <code>bytes</code> value at the given index.10CmAttempts to retrieve a dictionary entry and its field id, \xe2\x80\xa60EeRead exactly <code>n</code> bytes from the buffer (e.g. for Avro <code>fixed</code>).BlTry to get a float value at the given index.ChTry getting a <code>f32</code> value at the given index.10BlTry to get a group value at the given index.CjTry getting a <code>group</code> value at the given index.10CjGets scale of this primitive type. Note that this will \xe2\x80\xa6BlTry to get a short value at the given index.CiTry getting an <code>i16</code> value at the given index.10BlTry to get a ubyte value at the given index.CgTry getting a <code>u8</code> value at the given index.10BlTry to get a ulong value at the given index.ChTry getting a <code>u64</code> value at the given index.10CmReturns the value at the given index Useful if we want to \xe2\x80\xa60CiHandshake between client and server. Depending on the \xe2\x80\xa60CnPerform an Arrow Flight handshake with the server, sending \xe2\x80\xa61DiPerform a <code>handshake</code> with the server, passing credentials \xe2\x80\xa6BjReturns whether the encoder has any nulls.CnReturn the size of any bytes allocated on the heap by this \xe2\x80\xa6DkReturns the enum value of <code>if_exists</code>, or the default if the \xe2\x80\xa6BoTry and increment the bytes from right to left.CmThe dictionary indices are constrained to be non-negative \xe2\x80\xa6CfWe want to decode the offsets in chunks so we will \xe2\x80\xa6CfReturn a mutable reference to the underlying tonic \xe2\x80\xa6C`Return a mutable reference to the underlying \xe2\x80\xa6CaGet a mutable reference to the underlying reader.CeReturns a mutable reference to the underlying writer.00AnIntersect two projection masksBiReturns the underlying data of this array00CjBy default, dictionaries are not ordered, or the order \xe2\x80\xa6EbReturns <code>true</code> if this number is neither infinite nor <code>NaN</code>.0CmReturns true if this type is nested (List, FixedSizeList, \xe2\x80\xa60DfReturns <code>true</code> if the number is neither zero, infinite, \xe2\x80\xa60DgReturns <code>true</code> if this type is the top-level schema type \xe2\x80\xa6BkWhether the dictionary index type is signedCaReturns true if this is <code>Self::SIGNED</code>AnWhether the integer is signed.AiIs dictionary page sortedChIf true, the entries in the dictionary are sorted in \xe2\x80\xa6CmReturn min/max elements inside ColumnIndex are ordered or \xe2\x80\xa61CaWhether the dictionary keys are sorted and unique0CjGets the key field from the entries of a map.  For all \xe2\x80\xa6CfReturn an iterator over the keys (indexes into the \xe2\x80\xa60CjHelper to normalize a type path by extracting the most \xe2\x80\xa6ChReturns the product of all the elements in tensor shape.0BgListen on a port and return the addressEcConstructs a <code>List</code> from the list of <code>fields</code> and returns it.CkCreate a view based on the given data, block id and offset.000DkReturns the max of values in the array of <code>ArrowNumericType</code> \xe2\x80\xa600CiReturns the maximum run-end encoded in the underlying \xe2\x80\xa60CnReturns the max value for the page indexed by <code>idx</code>0CnLower and upper bound values for the column, determined by \xe2\x80\xa6CiColumn metadata for this chunk. Some writers may also \xe2\x80\xa6DkReturns the min of values in the array of <code>ArrowNumericType</code> \xe2\x80\xa600CnReturns the min value for the page indexed by <code>idx</code>0ChOptional namespace for the record, provides a way to \xe2\x80\xa6ClOptional namespace for the enum, provides organizational \xe2\x80\xa6BeOptional namespace for the fixed typeBbCreates a new dense array builder.0CoReturns a new empty ArrayData valid for <code>data_type</code>.CjDescribes arrays which have no data of their own (e.g. \xe2\x80\xa6BmCreates a new empty <code>RecordBatch</code>.DbCreate a new <code>OffsetBuffer</code> containing a single 0 value1032DaCreate a new <code>Field</code> with <code>DataType::Union</code>0EgCreate a new <code>BooleanBuffer</code> of <code>length</code> where all values are \xe2\x80\xa60EhCreate a new <code>NullBuffer</code> of length <code>len</code> where all values are \xe2\x80\xa60Bgreturns the next char, and consuming itDgNormalize a semi-structured <code>RecordBatch</code> into a flat table.CbNormalize a <code>Schema</code> into a flat table.10AmThe size of bitset in bytes *AkThe size of bitset in bytesDiReturns the number of <code>Unicode Scalar Value</code> in the string \xe2\x80\xa600BbNumber of null values in this pageCgNumber of NULL values, in this data page. Number of \xe2\x80\xa6AkReturns the number of pages0CiComputes an occupancy mask for this dictionary\xe2\x80\x99s values0CcBuild one entry of the polynomial\xe2\x80\x91division table.CaLogical \xe2\x80\x98or\xe2\x80\x99 boolean values with Kleene logic00CkIf a column contains nulls, more level data may be read \xe2\x80\xa6AbReturns page type.BlReturns <code>PageType</code> for this page.AnThe type of page being writtenAnthe page type (data/dic/\xe2\x80\xa6) *BhParse a hex character to <code>u8</code>BaParses the next i32 integer valueAmParses the next integer valueDgParses a <code>Uuid</code> from a string of hexadecimal digits with \xe2\x80\xa60CnGiven a list of lexicographically sorted columns, computes \xe2\x80\xa6CbDefines partition kernel for <code>ArrayRef</code>110DkReturns the result of decoding the next <code>FlightData</code> message \xe2\x80\xa6DjReturns the next <code>RecordBatch</code> available in this stream, or \xe2\x80\xa6BkReturns the decimal precision of this array0AnTotal number of decimal digitsBbThe location of the decimal point.AjReturns decimal precision.BhThe total number of digits in the number00AgPrecision of this type.BiPush data, and transition state if neededCmPush new data buffers that can be used to satisfy pending \xe2\x80\xa60ClRead a boolean list element. This should not be used for \xe2\x80\xa6BbRead a single byte from the input.CgInvokes underlying typed triplet iterator to buffer \xe2\x80\xa6ClAdvances to the next triplet. Returns true, if there are \xe2\x80\xa6Eh<code>ReadPlan</code> and <code>ReadPlanBuilder</code> for determining which rows to \xe2\x80\xa6BfReturns the number of values remainingAlThe current repetition levelCmOptional row count, useful for specifying a row count for \xe2\x80\xa60BfThe number of rows in this RecordBatch101AbThe number of rowsBcReturns the number of selected rows1CdTotal number of rows in the row group before the \xe2\x80\xa6BcThe number of rows in the row groupDfReturns row group metadata for <code>i</code>th position. Position \xe2\x80\xa6ChReturns the run array of this <code>TypedRunArray</code>mThe run array10CiThe current implementation of comparison of run array \xe2\x80\xa6BfCurrent to apply, includes all filtersBnRow ranges to be selected from the data sourceBeReturns the current selection, if any21CcRemaining selection to apply to the next row groupsAoOptional row selection to applyCiReturns self type <code>Type</code> for this leaf column.ChSerialize <code>rows</code> to this <code>Decoder</code>DdWrites any type that implements <code>Serialize</code> into this \xe2\x80\xa6EfSerialize the tape element at index <code>idx</code> to <code>out</code> returning \xe2\x80\xa6BjSee to a specific <code>RecordBatch</code>BbSet auth token to the given value.Bdreport whatever the iterator says toCcSplits <code>len</code> bytes from <code>src</code>DoSplits off the first <code>row_count</code> from this <code>RowSelection</code>C`write any bytes needed for the start of each rowCeDefines kernel to extract a substring of an Array \xe2\x80\xa6DkReturns an <code>ArrayRef</code> with substrings of all the elements in \xe2\x80\xa601BgReturns the sum of values in the array.00DbPerform a take operation on <code>buffer</code> with the given \xe2\x80\xa6Cf<code>take</code> implementation for dictionary arraysCbReturns an iterator that returns the values of \xe2\x80\xa6000000000C`<code>take</code> implementation for list arraysCkStore ingested data in a temporary table. The effect of \xe2\x80\xa60AlUtils to make testing easierCnConverts this INT96 into an i64 representing the number of \xe2\x80\xa60CiTurns a IntervalYearMonthType type into an i32 of months.0DfReturns the ordering between <code>self</code> and <code>other</code>.0BbLow-level array data abstractions.DiTry to build the next <code>ParquetRecordBatchReader</code> from this \xe2\x80\xa6DiFallible version of <code>field</code>. Returns field value by index, \xe2\x80\xa60BoMerge this field into self if it is compatible.EcAppends a <code>FieldRef</code> to this <code>SchemaBuilder</code> checking for \xe2\x80\xa6CmMerge schema into self if it is compatible. Struct fields \xe2\x80\xa62210CnAttempts to parse the footer metadata (and optionally page \xe2\x80\xa6DgParses a <code>Uuid</code> from a string of hexadecimal digits with \xe2\x80\xa60CnApplies a unary fallible function to all valid values in a \xe2\x80\xa6BjSee <code>PrimitiveArray::try_unary</code>001D`Return the <code>Variant</code> instance stored at the given row0AdThe name of the type0C`Name of the unknown type in the external system.ChReturns the name of the unknown type in the external \xe2\x80\xa601CiApplies an unary and infallible function to a mutable \xe2\x80\xa6CkApplies a unary and infallible function to the array in \xe2\x80\xa6BjSee <code>PrimitiveArray::unary_mut</code>0021CmApplies a unary and nullable function to all valid values \xe2\x80\xa60CnSets bit at position <code>i</code> for <code>data</code> to 000AkCalled when a map type hit.ClAdd the current available results for the poll call as a \xe2\x80\xa6AjSet the name of the schemaChSet the name of the <code>Field</code> and returns self.110BmOverrides the string used to represent a null0BiSet the value to represent null in outputCbWrites the given buf bytes to the internal buffer.0BoWrite a zig-zag encoded <code>i16</code> value.BoWrite a zig-zag encoded <code>i32</code> value.BoWrite a zig-zag encoded <code>i64</code> value.CmWrite the given <code>u64</code> as a ULEB128 encoded varint.DbHelpers for <code>CommandGetXdbcTypeInfo</code> metadata requests.CjDescribes an available action, including both the name \xe2\x80\xa60CkThe owner of an allocation. The trait implementation is \xe2\x80\xa60CcBuffer is always null. Unused currently in Rust \xe2\x80\xa600DiMany different operations in the <code>arrow</code> crate return this \xe2\x80\xa600ClArrow error. Returned when reading into arrow or writing \xe2\x80\xa6CbAdditional attributes within a <code>Schema</code>CfA wrapper around a byte slice, providing low-level \xe2\x80\xa6ClFormat abstraction implemented by each container\xe2\x80\x90level \xe2\x80\xa6CcA wrapper for an Avro schema in its JSON string \xe2\x80\xa6D`Alias for an Avro <strong>Object Container File</strong> writer.CkBit packed encoding.  This can only be used if the data \xe2\x80\xa6C`<strong>Deprecated</strong> Bit-packed encoding.BnThe block size of the variable length encodingAeByte array type indexBfAn arrow binary array with i32 offsets00BfOpaque binary data of variable length.CbLogically the same as Binary, but the internal \xe2\x80\xa611AfDecoding a block countCbLayout specification for a single data type buffer00CkThe cancellation request is in progress. The client may \xe2\x80\xa600ClDefine capacities to pre-allocate for child data or data \xe2\x80\xa60CgRepresents the location of a column in a Parquet schemaAlData page Parquet format v2.Cj32-bit date type: the elapsed time since UNIX epoch in \xe2\x80\xa600Cj64-bit date type: the elapsed time since UNIX epoch in \xe2\x80\xa600CjExact 128-bit width decimal value with precision and scale00CjExact 256-bit width decimal value with precision and scale00oDictionary typeEfA dictionary encoded array (<code>key_type</code>, <code>value_type</code>), where \xe2\x80\xa61CnA row converter for the dictionary values and the encoding \xe2\x80\xa6CnThe encoding of the child array and the encoding of a null \xe2\x80\xa622DaUnrecoverable errors associated with <code>do_put</code> requestsBaParquet physical type: DoubleTypeBmEndianness of the platform producing the dataAaArrow File ReaderCmParquet file reader API. With this, user can get metadata \xe2\x80\xa6AaArrow File WriterCfState machine for evaluating a sequence of predicates.CkEach element is a fixed width primitive, with the given \xe2\x80\xa600CeA batch of Arrow data as part of a stream of batches.0CmThe access coordinates for retrieval of a dataset. With a \xe2\x80\xa60CkParsed Parquet footer tail (last 8 bytes of a Parquet file)0CkWriter wrote a single (non-union) value resolved to the \xe2\x80\xa6BnControls the action of the variant_get kernel.00CaA <code>PrimitiveArray</code> of <code>i16</code>000CaA <code>PrimitiveArray</code> of <code>i32</code>000CaA <code>PrimitiveArray</code> of <code>i64</code>000AgTensor of type Int8TypeEdGeneric Avro <code>int</code> encoder for primitive arrays with <code>i32</code> \xe2\x80\xa6CePromotes an <code>int</code> to a <code>float</code>.BlCommon functionality for interleaving arraysBdArithmetic trait for interval arraysDiIpcMessage represents a <code>Schema</code> in the format expected in \xe2\x80\xa6ChRepresentation of a fully parsed IpcMessage from the \xe2\x80\xa6CgThis trait defines how to format a sequence of JSON \xe2\x80\xa6CfMaximum possible <code>f16</code> power of 10 exponent0BaThe max <code>usize</code> offset000CmMinimum possible normal <code>f16</code> power of 10 exponent0BaBuilder for <code>MapArray</code>000CcA pool of memory that can be reserved and released.0AhNanosecond of the second0lA NanosecondAdTime in nanoseconds.2100DeA <code>BooleanBuffer</code> used to encode validity for Arrow arrays00CaThe nulls are encoded as the second union variantClEncode/decode structs as objects (e.g., {\xe2\x80\x9ca\xe2\x80\x9d: 1, \xe2\x80\x9cb\xe2\x80\xa6DjWrapper for thrift <code>double</code> fields. This is used to provide \xe2\x80\xa6ClAPI for reading pages from a column chunk. This offers a \xe2\x80\xa6BhAPI for writing pages in a column chunk.BcError during parsing from a string.00ChA computed set of partitions, see <code>partition</code>00ChReturns a <code>ReaderFactory</code> and an optional \xe2\x80\xa6CjTrait implemented for objects that can be deserialized \xe2\x80\xa6CdInternal iterator of <code>Row</code>s for a reader.CfType alias for thrift <code>FieldRepetitionType</code>BmOne column to be used in lexicographical sort00CmStrongly typed statistics for a column chunk within a row \xe2\x80\xa6ChStatistics per row group and per page All fields are \xe2\x80\xa6C`Empty structs to use as logical type annotationsCmString data encoded as UTF-8 bytes, but mapped to Arrow\xe2\x80\x99\xe2\x80\xa6CkSpecifies what is considered valid JSON when reading or \xe2\x80\xa6A`Get table types.CmRepresents Avro time-micros logical type, maps to Arrow\xe2\x80\x99\xe2\x80\xa6C`The total number of microseconds since midnight.0CmRepresents Avro time-millis logical type, maps to Arrow\xe2\x80\x99\xe2\x80\xa6C`The total number of milliseconds since midnight.0AmUnsigned 16-bit integer type.00AmUnsigned 32-bit integer type.00AmUnsigned 64-bit integer type.00C`A <code>PrimitiveArray</code> of <code>u8</code>000C`<code>DataType</code> for the output union arrayBcAn array of values of varying types000CjDecoder for zig-zag encoded variable length (VLW) integersCkA buffer of view type byte arrays that can be converted \xe2\x80\xa6jAAD prefix0lAAD prefix *0AlAccumulate a non-null value.AkPerform <code>a += b</code>CaAdds a single buffer to the ArrayData\xe2\x80\x99s buffers0CiAdd the specified header with value to all subsequent \xe2\x80\xa6AjAdditional JSON attributesCbLogical \xe2\x80\x98and\xe2\x80\x99 boolean values with Kleene logic00CkAppends a single row at the given index to the supplied \xe2\x80\xa6ChAppends a single row at the given value index to the \xe2\x80\xa6CmConvert data to / from the Apache Arrow memory format and \xe2\x80\xa6CmFunctions for converting from one data type to another in \xe2\x80\xa6CgLow-level array data abstractions for Apache Arrow RustCkArrow buffers to be written, should be an empty vec for \xe2\x80\xa6CjTransfer data between the Arrow memory format and JSON \xe2\x80\xa6ClReturns the builder as a mutable <code>Any</code> reference.00000CmReturns the builder as an mutable <code>Any</code> reference.11101011CkReturns the builder as a mutable <code>Any</code> reference22222221222121220DfDowncast this to a <code>BooleanArray</code> panicking if not possible00CiConverts this variant to a <code>bool</code> if possible.0EdDowncast this to a <code>MapArray</code> returning <code>None</code> if not possible00CmReturn the value as an mutable Any to allow for downcasts \xe2\x80\xa6CmReturns a mutable raw pointer to this buffer\xe2\x80\x99s internal \xe2\x80\xa60EdDowncast this to a <code>RunArray</code> returning <code>None</code> if not possible00BoAdditional attributes associated with this typeBeAdditional attributes for this recordBcAdditional attributes for this enumBdAdditional attributes for this arrayBbAdditional attributes for this mapBiAdditional attributes for this fixed typeDfBase64 decode each element of <code>array</code> with the provided \xe2\x80\xa6EeBas64 encode each element of <code>array</code> with the provided <code>Engine</code>BaBasic information about the type.0ChReturns the configured maximum number of rows per batch.AkNumber of records per batchC`Batch size (number of records to load each time)B`Number of rows to read per batchCjthe target batch size (and thus size for views allocation)0BhThe number of rows to read in each batchCfReturn the number of rows to read in each output batch1AeThe output batch sizeAfThe batch size to readjbatch sizeBaUtils to make benchmarking easierCmApplies a binary and infallible function to values in two \xe2\x80\xa600DjReturns a <code>BitChunks</code> instance which can be used to iterate \xe2\x80\xa6000CjReturns an array of Int32/Int64 denoting the number of \xe2\x80\xa60Cjoffset inside a byte, guaranteed to be between 0 and 7 \xe2\x80\xa60ChThe helper function for bitwise operation with two arrayDhPerform <code>left | right</code> operation on two arrays. If either \xe2\x80\xa60CmLength of the data (this is aligned so there can be a gap \xe2\x80\xa6DgReturns the length, in bytes, of the buffer <code>i</code> (indexed \xe2\x80\xa6CnCreates new statistics for <code>ByteArray</code> column type.CnReturns the offset and length in bytes of the column chunk \xe2\x80\xa6BbThe width of each element in bytes00CeReturns an iterator over the bytes of this array, \xe2\x80\xa60BbPreviously computed filter resultsAiAny cached filter results0Dg<code>Parser</code> implementations for converting strings to Arrow \xe2\x80\xa6CiCheck if a hash is in the filter. May return true for \xe2\x80\xa6DhReturns a slice of children <code>ArrayData</code>. This will be non \xe2\x80\xa6BdSets the child data of the ArrayDataAmThe child(ren) of this array.210ClIf parent sort order is descending we need to invert the \xe2\x80\xa6BkComputes the rank for a set of child valuesCfThe ordinal position of the column (in this row group)ChThe ordinal position of the column (in this row group) *CjPerform <code>op</code> on the provided <code>Datum</code>BkComparison kernels for <code>Array</code>s.DgThe bitwise negation (<code>!</code>) of the bits in a flags value, \xe2\x80\xa6AiCounts the number of ones0CdString message for application that wrote this file.BgReturns <code>created_by</code> string.CmString for application that wrote this file.  This should \xe2\x80\xa6Cn<code>GetDbSchemasBuilder</code> for building responses to \xe2\x80\xa6BnPerform arithmetic operation on decimal arraysDdDecode the <code>input</code> into the supplied <code>buffer</code>.CkDecompress the data in input buffer and write to output \xe2\x80\xa6AkArray\xe2\x80\x99s definition levelsBcWhether to sort in descending order000CjIf true, indicates this column is sorted in descending \xe2\x80\xa60Cbcleared after the first FlightData message is sentCaOptional flight descriptor, if known before data.AmReturns the dictionary if anyCmReturns the reference to the underlying dictionary of the \xe2\x80\xa6AdThe dictionary array0212CnThe child data of the <code>Array</code> in Dictionary arrays.AlThe dictionary for the fieldC`Present only if the field is dictionary encoded.4BeDictionary utilities for Arrow arraysCeThe intersection of a source flags value with the \xe2\x80\xa6BgThe number of dimensions of the tensor.ChReturns the number of dimensions in this fixed shape \xe2\x80\xa60ClReturns the number of dimensions  in this variable shape \xe2\x80\xa62EgReturns an empty <code>Rows</code> with capacity for <code>row_capacity</code> rows \xe2\x80\xa6BkEncryption support for Thrift serializationC`write any bytes needed for the start of each rowCnendianness of the buffer it is Little Endian by default if \xe2\x80\xa6CgExtends the in-progress array by the indexes in the \xe2\x80\xa6ChContains declarations to bind to the C Stream Interface.00BjReturns field name for the current reader.CmRetrieves the field name for a given field id, which must \xe2\x80\xa6CkGet a field\xe2\x80\x99s name by index in <code>0..self.len()</code>110CgThe data type of the field, can be any valid JSON valueAgThe type for the field.CiThe catalog name where the foreign table is. An empty \xe2\x80\xa6DiReturns the value of <code>fk_catalog</code>, or the default value if \xe2\x80\xa61DdConvert a <code>RecordBatch</code> to an <code>ArrowJsonBatch</code>ChCreate a new Buffer from a (internal) <code>Bytes</code>0ClAllocates a new MutableBuffer from given <code>Bytes</code>.CfCreates new decimal value from <code>ByteArray</code>.BhCreates a UUID using the supplied bytes.0CgCreate an i256 from the provided low u128 and high i128011CkApplies a unary infallible function to each value in an \xe2\x80\xa6DkCreate a <code>BooleanArray</code> by evaluating the operation for each \xe2\x80\xa601BfConvert native integer type from usize00CkCreates a PrimitiveArray based on a constant value with \xe2\x80\xa60CiReturns the chunks from the buffers that satisfy this \xe2\x80\xa6BmTry to get a double value at the given index.ChTry getting a <code>f64</code> value at the given index.10CmGets the fields from this group type. Note that this will \xe2\x80\xa6CbGets an offset into the dictionary entry by index.BhC function to get schema from the stream00CmFor a given FlightDescriptor, get the Schema as described \xe2\x80\xa60DfMake a <code>GetSchema</code> call to the server with the provided \xe2\x80\xa61BmReturns the string for the given string indexBmTry to get a string value at the given index.CkTry getting a <code>string</code> value at the given index.10AiRequest a list of tables.BmTry to get a ushort value at the given index.ChTry getting a <code>u16</code> value at the given index.10AjGet the values of the map.0CnWhether to write column names as file headers. Defaults to \xe2\x80\xa6ohas header lineBhGet a <code>Hyphenated</code> formatter.0B`The type of the dictionary indexBbThe type of values in indptrBufferCjCSF is a generalization of compressed sparse row (CSR) \xe2\x80\xa6CfHelper method to further unwrap leaf_type() to get \xe2\x80\xa6Acinput CSV file pathBkPerform an arithmetic operation on integersDiTakes elements by index from a list of <code>Array</code>, creating a \xe2\x80\xa6BhInterleave elements from multiple arrays110CmWhether any set bits in a source flags value are also set \xe2\x80\xa6EhConverts this into an <code>ArrayRef</code> with the provided <code>data_type</code> \xe2\x80\xa600CnConsumes self and returns the underlying byte value of the \xe2\x80\xa60AgReturns the inner arrayCkReturns the inner <code>ScalarBuffer</code>, consuming selfCeReturns the inner <code>Buffer</code>, consuming self0BlReturns the inner <code>BooleanBuffer</code>23CkConsume the writer, returning the underlying output object.13223DkUnwraps this <code>Writer&lt;W&gt;</code>, returning the underlying writer.CgConsume this client and return the underlying tonic \xe2\x80\xa6DbConsume self and return the wrapped <code>FlightDataDecoder</code>CaConsume this client and return the underlying \xe2\x80\xa6DlConvert this stream into a <code>Streaming&lt;FlightData&gt;</code>. Any \xe2\x80\xa6AnUnwraps the underlying writer.BbUnwraps the the underlying writer.DjUnwraps this <code>Writer&lt;W&gt;</code>, returning the underlying writerBgReturn the inner vector, consuming selfAnReturns the underlying writer.CiWrites the file footer and returns the underlying writer.CkFlushes any outstanding data and returns the underlying \xe2\x80\xa6DiConsumes the <code>AsyncArrowWriter</code> and returns the underlying \xe2\x80\xa6CgConsume the writer and return the underlying BufWriter.CdReturns the inner buffer, consuming self without \xe2\x80\xa6BmReturns the underlying buffer, consuming selfCjReturns the inner <code>StructArray</code>, consuming self1200CaDeconstruct this array into its constituent parts00000000000CdReturn the schema, columns and row count of this \xe2\x80\xa61111111111110CdReturns true if this type is integer: (Int*, UInt*).0CmReturns true if this type is numeric: (UInt*, Int*, Float*\xe2\x80\xa60CkCurrently exists for compatibility purposes with Arrow IPC.AcValues are ordered.000000001000000000BaWhether the dictionary is orderedBlYield a set of contained named flags values.CdSet to true if the keys within each value are sortedCoReturns a new <code>ArrowReaderMetadata</code> for this builderEaIf <code>value</code> is present in <code>values</code> (aka the dictionary), \xe2\x80\xa60DdConstructs an array using the input <code>data</code>. Returns a \xe2\x80\xa600CjCreates a ArrowTimestampType::Native from the provided \xe2\x80\xa60BgCreates a IntervalYearMonthType::NativeBeCreates a IntervalDayTimeType::NativeBjCreates a IntervalMonthDayNanoType::Native3210ClReturns the maximum value in the binary array, according \xe2\x80\xa600ClReturns the maximum value in the string array, according \xe2\x80\xa600CiReturns an array containing the max values for each page.ClReads the entire next message from the underlying reader \xe2\x80\xa6B`Scenario for testing middleware.BfMiddleware test for the Flight server.ClReturns the minimum value in the binary array, according \xe2\x80\xa600ClReturns the minimum value in the string array, according \xe2\x80\xa600CiReturns an array containing the min values for each page.CnTwo lists containing lower and upper bounds for the values \xe2\x80\xa6ClDescribes a basic numeric array where each element has a \xe2\x80\xa60BmCreates a nested object builder. See e.g. \xe2\x80\xa6CnReturns an object builder that can be used to append a new \xe2\x80\xa60EbCreate an <code>ObjectBuilder</code> for creating <code>Variant::Object</code> \xe2\x80\xa622011CdCreate a new <code>Scalar</code> from <code>v</code>ChCreate a new <code>Scalar</code> from <code>value</code>0000010000DaCreate a new DecodedFlightData with a <code>Schema</code> payloadBcCreates a new sparse array builder.0DbCreate a new <code>Field</code> with <code>DataType::Struct</code>0ElCreate a new <code>OffsetBuffer</code> containing <code>len + 1</code> <code>0</code> values0EfReturns the next <code>RecordBatch</code> from the reader, or <code>None</code> if \xe2\x80\xa6Cireturn the next token, or an error if there are none leftBiContains the <code>NullArray</code> type.AnReturns the current null countBoReturns the total number of nulls in this arrayBdSets the null count of the ArrayDataClReturns the total number of physical null values in this \xe2\x80\xa60Akthe null count of the arrayCgReturns the null count for this <code>NullBuffer</code>2101435CmThe number of observed nulls. Fields with null_count == 0 \xe2\x80\xa6ClReturns the number of null values in the page indexed by \xe2\x80\xa60BcCount of null values in the column.CmA list of Boolean values to determine the validity of the \xe2\x80\xa6CoCheck if the string matches this pattern for <code>NULL</code>.CdThe value to represent null entries, defaults to \xe2\x80\xa6B`Optional value to represent nullBhSet this sort options to sort nulls last00ClReturns the number of fields for the struct this builder \xe2\x80\xa60BmThe number of levels within the page if knownBeReturns the number of buffered valuesAiNumber of values in page.BfReturns number of values in this page.B`The number of values in the pageAmNumber of values in this page00BlTotal number of values in this column chunk.BbNumber of values in the dictionaryCeNumber of values, including NULLs, in this data page.BdNumber of values in the dictionary *CgNumber of values, including NULLs, in this data page. *BaNumber of values in this column *ClReturn number of values stored in buffer. If the parquet \xe2\x80\xa6BnNumber of buffered levels / null-padded values0ChPage Index of \xe2\x80\x9cColumn Index Layout to Support Page \xe2\x80\xa6CcThe index of the data page within this column chunk0BoRetrieve the currently set page index behavior.CiParse <code>s</code> with any sign and leading 0s removedDkParses the List type (called after <code>List</code> has been consumed) \xe2\x80\xa6EdParses a <code>AvroDataType</code> from the provided <code>Schema</code> and the \xe2\x80\xa6Ckparse the characters in val starting at pos, until the nextChThe catalog name where the parent table is. An empty \xe2\x80\xa6DiReturns the value of <code>pk_catalog</code>, or the default value if \xe2\x80\xa61BeA list of <code>ArrowPredicate</code>AlReturns the inner predicates1CmOptional projection for which columns to load (zero-based \xe2\x80\xa60CfProjection (subset of columns) to read, if any See \xe2\x80\xa6AcOptional projection2DfReturns the <code>ProjectionMask</code> that describes the columns \xe2\x80\xa60CfWhat columns to project (produce in each output batch)BkThe projection mask (which columns to read)EaConfiguration via <code>WriterProperties</code> and <code>ReaderProperties</code>BlReturns a reference to the writer propertiesEbReturns the offset, in bytes, of <code>Self::ptr</code> to <code>Self::data</code>0ClPush all the rows from <code>batch</code> into the Coalescer0ChAdds a column of fixed-length elements, each of size \xe2\x80\xa6CjPushes a single range of data into the decoder\xe2\x80\x99s buffer.BiPush data into the decoder for processingBgRead a single RecordBatch from the fileAoRead the data for a given blockBlRead a Thrift encoded binary from the input.DdReads current record as <code>Field</code> from the reader tree. \xe2\x80\xa6BjControls decoding of page-level statisticsDiTransforms a like <code>pattern</code> to a regex compatible pattern. \xe2\x80\xa6BdArray\xe2\x80\x99s optional repetition levelsBjReturns repetition for the current reader.CcReturns <code>Repetition</code> value for the type.BlReturn a reference to the current row groupsBiReturns slice of row groups in this file.AbRow group metadataAiRow groups in this file *BjOptional list of row group indices to scanBjThe row groups that have not yet been readDcReturns a reference to the <code>Schema</code> of the record batch.0AnWhether the type is searchable0CdSets <code>action</code> to the provided enum value.0AaSet header value.CdSets <code>result</code> to the provided enum value.DiReturns a <code>BitSliceIterator</code> yielding contiguous ranges of \xe2\x80\xa60AeSet the source array.CdSets <code>status</code> to the provided enum value.BlSkip the next <code>n</code> bytes of input.CjReturns the current values buffer and null buffer as a \xe2\x80\xa60BiSort the <code>ArrayRef</code> partially.00CeReturns sort order associated with this column order.BfReturns the sort order for this columnC`Writes magic bytes at the beginning of the file.BiReturns optional <code>Statistics</code>.BaOptional statistics for this page0CiContains definitions for working with Parquet statistics.CmReturns statistics that are set for this column chunk, or \xe2\x80\xa6BoOptional statistics for the data in this page *0Bioptional statistics for this column chunkDe<code>StatisticsConverter</code> to convert statistics in parquet \xe2\x80\xa6AkPerform <code>a -= b</code>CeThe intersection of a source flags value with the \xe2\x80\xa6Cb<code>take</code> implementation for string arraysCbtake the current state, leaving None in its place.BaMark this column index as invalidCmConvert the implemented type into a Python object without \xe2\x80\xa6CnConverts this INT96 into an i64 representing the number of \xe2\x80\xa6CjReturns a 128bit little-endian value containing the value.0BmThe total number of rows in this column chunkCkReturns the number of non null, true values within this \xe2\x80\xa60DhApplies the provided fallible binary operation across <code>a</code> \xe2\x80\xa600CnTry to decode the metadata from the pushed data, returning \xe2\x80\xa6ClAttempt to decode the next batch of data, or return what \xe2\x80\xa6BlAdd a field with key and value to the object0DjCreates a new instance suitable for an <code>ObjectBuilder</code>. The \xe2\x80\xa60DgSame as <code>try_op</code> but with a type hint for the returned arrayBlReturns the names of the types in the union.0CiReturns type scale for this column. Note that it will \xe2\x80\xa6BjView buffer as a slice of a specific type.CdView buffer as a immutable slice of a specific type.10CjReturns true if type info should be included in visual \xe2\x80\xa60BkShow types in visual representation batchesD`Return one unsigned little-endian value from <code>bytes</code>.CaUpdate this bounder with one WKB-encoded geometryAjReturns the raw value dataAkReturns the raw value data.10CcReturns the size for value at index <code>i</code>.0BoReturns a clone of the value type of this list.00BlReturns the data type of the map\xe2\x80\x99s values.111101BlThe data type of individual tensor elements.0CiReturns the value type of the individual tensor elements.101CiReturns the child array builder as an immutable reference000BlDefault implementation when visiting a list.DaOverride the field passed to <code>FixedSizeListArray::new</code>CoOverride the field passed to <code>GenericListArray::new</code>DfBy default a nullable field is created with the name <code>item</code>210CnBuilder style API for adding a field with key and value to \xe2\x80\xa60CiAdd an array to this struct array as a field with the \xe2\x80\xa6AkSet the flags of the schema00C`Provide a limit to the number of rows to be readBgSet the limit to apply to the read planBjSet the null buffer for this struct array.CnSpecify a custom quote character, defaults to double quote \xe2\x80\xa6CeSet the given character as the CSV file\xe2\x80\x99s quote \xe2\x80\xa6ChSet the CSV file\xe2\x80\x99s quote character as a byte characterCjAdd a range predicate on filtering row groups if their \xe2\x80\xa6ClSets scale for Parquet DECIMAL physical type and returns \xe2\x80\xa6CkBuilder-style API for appending a value to the list and \xe2\x80\xa6000AfWrite a boolean value.BiWrite a single byte to the output stream.CbWrites <code>c</code> as UTF-8 to <code>out</code>CkWrite a primitive array, as defined by <code>is_leaf</code>DcWrite <code>range</code> elements from ListArray <code>array</code>DjEncode a single Avro-<code>long</code> using ZigZag + variable length, \xe2\x80\xa6CfWrites a page into the output stream/sink. Returns \xe2\x80\xa6CjThe data necessary to write a primitive Arrow array to \xe2\x80\xa6DeA JSON writer which serializes <code>RecordBatch</code>es to JSON \xe2\x80\xa6BkEncodes <code>RecordBatch</code> to parquetB`Represents a literal Avro value.AaWidth of the type00CfAn iterator that is untruthful about its actual lengthEeA <code>GenericBinaryArray</code> of <code>[u8]</code> using <code>i32</code> offsets000BnIterator over the bits within a packed bitmask000Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600BePrimitive (type_id=1): BOOLEAN (true)00AbA boolean datatype00CfBounding box for GEOMETRY or GEOGRAPHY type in the \xe2\x80\xa6BlRepresents a valid brotli compression level.CkCastOptions provides a way to override the default cast \xe2\x80\xa600BkOptions for controlling the behavior of \xe2\x80\xa600DgGenerates <code>Read</code>ers to read chunks of a Parquet data source.AoCommon bits of the column indexChOptional statistics for each data page in a ColumnChunk.CgColumn order that specifies what method was used to \xe2\x80\xa6nA complex typeBgSupported block compression algorithms.CiContains in-progress state to construct InMemoryRowGroupsEaA <code>PrimitiveArray</code> of days since UNIX epoch stored as <code>i32</code>000DiA <code>PrimitiveArray</code> of milliseconds since UNIX epoch stored \xe2\x80\xa6000CmA utility trait that provides checked conversions between \xe2\x80\xa6000DjA trait over the decimal types, used by <code>PrimitiveArray</code> to \xe2\x80\xa600AoDecimal logical type annotationBaAn error occurred during decodingAfDecoding state machineBhA dictionary encoder for byte array dataAnError returned by i256::DivRemCdServer streaming response type for the DoGet method.0CdServer streaming response type for the DoPut method.0ClStores the encoded data, which is an crate::Message, and \xe2\x80\xa6EiAvro <code>enum</code> encoder for Arrow <code>DictionaryArray&lt;Int32, Utf8&gt;</code>.CaProvides mapping information for resolving enums.CgHolds the mapping information for resolving Avro enums.BiThe length of the parquet footer in bytesCfWhat ranges to fetch for the columns in this row groupClSchema information necessary to decode a parquet file as \xe2\x80\xa6CiA low-level, push-based interface for reading an IPC fileEg<code>FilterBytes</code> is created from a source <code>GenericByteArray</code> and \xe2\x80\xa6CeA schema fingerprint in one of the supported formats.BhErrors for the Apache Arrow Flight crateBb16-bit floating point number type.00Bb32-bit floating point number type.00Bb64-bit floating point number type.00DaEither an <code>ArrowError</code> or <code>std::fmt::Error</code>CfTrait for converting Python objects to arrow-rs types.CkGroup (struct) reader with type information, definition \xe2\x80\xa6AhTensor of type Int16TypeAhTensor of type Int32TypeAhTensor of type Int64TypeBeA signed 8-bit integer array builder.000CfPromotes an <code>int</code> to a <code>double</code>.BoConvert an arrow-rs type into a PyArrow object.CiOpaque binary data of variable length and 64-bit offsets.ChSame as Binary, but with 64-bit offsets, allowing to \xe2\x80\xa611BbBuilder for <code>ListArray</code>00CiA builder for creating <code>Variant::List</code> values.00AcLogging CLI config.CkLogical types used by version 2.4.0+ of the Parquet format.EeGeneric Avro <code>long</code> encoder for primitive arrays with <code>i64</code> \xe2\x80\xa6CePromotes a <code>long</code> to a <code>float</code>.CmTrait for type-safe access of an index for a <code>Map</code>0AhList of key-value pairs.0AgMemory or buffer error.00AiMicrosecond of the second0mA MicrosecondAeTime in microseconds.2100AiMillisecond of the second0mA MillisecondAeTime in milliseconds.2100BaNumber of nanoseconds in a second000DjThe path element is not present in the <code>typed_value</code> column \xe2\x80\xa6BbBuilder for <code>NullArray</code>000CiAvro types are not nullable, with nullability instead \xe2\x80\xa6BbInternal state for object building00CeOptional offsets for each data page in a ColumnChunk.AjParquet format version 1.0AjParquet format version 2.0ClTracks information needed to correctly finalize a nested \xe2\x80\xa600DhA newtype wrapper for types implementing <code>FromPyArrow</code> or \xe2\x80\xa6CcA collection of options for reading a Parquet file.CjA two-dimensional batch of column-oriented data with a \xe2\x80\xa6000AgA decoded Record batch.nA record batchCmA data header describing the shared memory layout of a \xe2\x80\x9c\xe2\x80\xa6ClTrait for type-safe convenient access to fields within a \xe2\x80\xa60Ef<code>RowSelection</code> is a collection of <code>RowSelector</code> used to skip \xe2\x80\xa60DbSchemaAsIpc represents a pairing of a <code>Schema</code> with \xe2\x80\xa6BgError during schema-related operations.00ChAn in-memory cache of Avro schemas, indexed by their \xe2\x80\xa6B`Short String (type_id=2): STRINGBbA Variant <code>ShortString</code>1010CdOptions that define the sort order of a given column000CkIndicates whether the Flight SQL Server supports CREATE \xe2\x80\xa60DbA builder for <code>SqlInfoData</code> which is used to create \xe2\x80\xa60CaSomething that can be converted into u32 (the \xe2\x80\xa6CnRetrieves a UTF-8 string list with values of the supported \xe2\x80\xa60BkThe start of an object, i.e. <code>{</code>EdA <code>GenericStringArray</code> of <code>str</code> using <code>i32</code> offsets000AcAn array of structs000gA time.CnThe total number of microseconds since midnight. The value \xe2\x80\xa6fA timeCnThe total number of milliseconds since midnight. The value \xe2\x80\xa6CgOptions that define how <code>take</code> should behave00CfImplements a state machine for decoding JSON to a tapeCfWe decode JSON to a flattened tape representation, \xe2\x80\xa6BeArithmetic trait for timestamp arraysCjAllows conversion from supported Arrow types to a byte \xe2\x80\xa600CkTransactions, but not savepoints. A savepoint is a mark \xe2\x80\xa60DgTree builder for <code>Reader</code> enum. Serves as a container of \xe2\x80\xa6CeHigh level API wrapper on column reader. Provides \xe2\x80\xa6ClA utility trait to help user to traverse against parquet \xe2\x80\xa6CaA <code>PrimitiveArray</code> of <code>u16</code>000CaA <code>PrimitiveArray</code> of <code>u32</code>000CaA <code>PrimitiveArray</code> of <code>u64</code>000AhTensor of type UInt8TypeDfA cheaply cloneable, owned collection of <code>FieldRef</code> and \xe2\x80\xa600ClThe cancellation status is unknown. Servers should avoid \xe2\x80\xa60CnDo not use. Servers should error if this is specified by a \xe2\x80\xa60001CmAvro UUID logical type encoder: Arrow FixedSizeBinary(16) \xe2\x80\xa6Ak<code>Variant</code> Array.00CjRepresents a qualified path to a potential subfield or \xe2\x80\xa600BhEmbedded Variant logical type annotationBiArrow Variant <code>ExtensionType</code>.00CmTrait implemented by objects that are to be serialized to \xe2\x80\xa6CbAdds multiple buffers to the ArrayData\xe2\x80\x99s buffers0AjChecked addition operation000DoAligns the provided <code>nulls</code> to the provided <code>data_offset</code>BcCreate a Variant from a JSON string0DgAppends a <code>false</code> into the builder to indicate that this \xe2\x80\xa6BeAppend a null value into the builder.BeAppends a null element to the struct.BdAppend a null value into the builderBdAppends a null slot into the builderBaAppend a null value to the array.1CeAppend a null to this <code>GenericListBuilder</code>222CmAppends null to the logical array encoded by the run-ends \xe2\x80\xa63CjAppends null to the logical array encoded by the RunArray.CiAppend a null to this <code>GenericListViewBuilder</code>ClAppends a null to this builder, encoding the null in the \xe2\x80\xa6:66569466386271BnAppends a null to this <code>FieldData</code>.1AdAppend a null record<CnAppends a NULL value to this builder. The semantics depend \xe2\x80\xa6CmA NULL object field is interpreted as missing, so nothing \xe2\x80\xa6CbVariant arrays cannot encode NULL values, only \xe2\x80\xa6DgVariant values cannot encode NULL, only <code>Variant::Null</code>. \xe2\x80\xa6CmAppending NULL to a variant array produces an actual NULL \xe2\x80\xa6BbAppends a null row to the builder.B`Append a null row to the builder65436210BhArrow arithmetic and aggregation kernelsClThe central type in Apache Arrow are arrays, which are a \xe2\x80\xa6DiReturn the arrow schema\xe2\x80\x99s [<code>Field]</code> of the column in the \xe2\x80\xa6CiThe field (with data type) of the column in the Arrow \xe2\x80\xa6CmIndex of the Arrow field/column associated with this Avro \xe2\x80\xa6DiConverts an <code>ArrowPrimitiveType</code> to <code>NaiveDateTime</code>00CiConverts this variant to tuple with a 4-byte unscaled \xe2\x80\xa60CjConverts this variant to tuple with an 8-byte unscaled \xe2\x80\xa60DdConverts an <code>ArrowPrimitiveType</code> to <code>Duration</code>00EgDowncast this to a <code>GenericListArray</code> returning <code>None</code> if not \xe2\x80\xa600CmString value of the enum field names used in the ProtoBuf \xe2\x80\xa60000000000000000000000000000CnConverts this variant to a <code>NaiveTime</code> if possible.0BnReturns two 64bit values containing the value.0CnConverts this variant to a <code>&amp;[u8]</code> if possible.0CkReturns a reference to the parsed Avro container\xe2\x80\x91file \xe2\x80\xa6CnProvide SQL\xe2\x80\x99s CONTAINS, STARTS_WITH, ENDS_WITH operators \xe2\x80\xa6CnConverts an overflowing binary operation on scalars to one \xe2\x80\xa6DlPerform <code>left &amp; right</code> operation on two arrays. If either \xe2\x80\xa60DjPerform <code>!array</code> operation on array. If array value is null \xe2\x80\xa60DhPerform <code>left ^ right</code> operation on two arrays. If either \xe2\x80\xa60BgCreate an IPC Field from an Arrow FieldCaBuild the full 256\xe2\x80\x91entry table at compile time.DkCreates a thin <code>VariantBuilderExt</code> wrapper for this builder, \xe2\x80\xa60DkComputes the absolute value of this i256 returning <code>None</code> if \xe2\x80\xa6AkComputes the absolute value000100AiPerforms checked addition0000000AiPerforms checked division0000000AoPerforms checked multiplication0000000DoNegates this i256 returning <code>None</code> if <code>Self == Self::MIN</code>AaNegates the value000100AoPerforms checked exponentiation0000000AjPerforms checked remainder0000000AlPerforms checked subtraction0000000AeClear the auth token.lClient args.BdPath (or identifier) of this column.AkThe column size of the type0BgType of this column. Must be primitive.BoReturns mutable slice of column chunk metadata.BjCompression codec implementations for AvroC`Returns the <code>CompressionCodec</code> if anyBhOptional compression of the message bodyAjOptional compression codecAlCompression for this column.BgReturns compression codec for a column.CcReturns optional compression codec for this column.BjThe compression used in the Bloom filter *BhThe compression used in the Bloom filterCgReturns a string representation for a given compressionBaCompression used for all columns.BlConvert raw bytes into <code>ArrayRef</code>CcReturn a mutable reference to the current predicateBkHeader for message data as described in \xe2\x80\xa60AkDate format for date arraysChGet the CSV file\xe2\x80\x99s date format if set, defaults to \xe2\x80\xa6CdThe date format for date arrays, defaults to RFC3339BdOptional date format for date arrays0CiGet the JSON file\xe2\x80\x99s date format if set, defaults to \xe2\x80\xa61BmDecodes a <code>BooleanArray</code> from rowsCcDecodes a Date from the value section of a variant.CdDecodes an Int8 from the value section of a variant.DaDecodes a <code>Page</code> from the provided <code>buffer</code>CcDecodes a UUID from the value section of a variant.BkReturns the number of bytes of encoded dataAjChecked division operation000CmOpen a bidirectional data channel for a given descriptor. \xe2\x80\xa60DgMake a <code>DoExchange</code> call to the server with the provided \xe2\x80\xa61CnReturns the length of the encoded representation of a byte \xe2\x80\xa6CnReturns the total encoded length (including null byte) for \xe2\x80\xa6ClReturns the number of non null, false values within this \xe2\x80\xa60BnReturns file offset of this row group in file.DgByte offset of <code>ColumnMetaData</code> in <code>file_path()</code>.CkWe can\xe2\x80\x99t infer from file offset of first column since \xe2\x80\xa6CjDeprecated: Byte offset in file_path to the ColumnMetaDataCmByte offset from beginning of file to first page (data or \xe2\x80\xa6EgFilter the packed bitmask <code>buffer</code>, with <code>predicate</code> starting \xe2\x80\xa6Cc<code>filter</code> implementation for dictionariesCmReturns the fingerprint of the schema, computed using the \xe2\x80\xa6DiCreate a <code>BooleanArray</code> by evaluating the binary operation \xe2\x80\xa60CfCreate a new Rows instance from the given binary data.EdInterpret 4 <code>u64</code> digits, least significant first, as a <code>i256</code>EkCreates a new <code>StructBuilder</code> from <code>Fields</code> and <code>capacity</code>0BfCreates a UUID from four field values.0CjCreate an integer value from its representation as string.0EbReturns whether bit at position <code>i</code> in <code>data</code> is set or not.00BnTry to get a decimal value at the given index.ClTry getting a <code>decimal</code> value at the given index.10BnTry to get a float16 value at the given index.ChTry getting a <code>f16</code> value at the given index.10ClIf the UUID is the correct version (v1, or v6) this will \xe2\x80\xa60CoHelper function that gets offset from an <code>ArrayData</code>BjReturns the variant of the UUID structure.0B`Returns the version of the UUID.0ClWhether file should be written with headers, defaults to \xe2\x80\xa6BgScratch space for decoding VLQ integersB`The in-progress row group if anyBcThe type of values in indicesBuffer0BdThe type of values in indicesBuffersAmInsert a hash into the filterCaPerform arithmetic operation on an interval arrayCcReturns the inner filter, consuming this FilterInfoAiAn encoded crate::MessageCjThis flag is true if and only if the indices matrix is \xe2\x80\xa6AoCheck if the stream is finishedC`Returns true if this type is floating: (Float*).0EcReturns <code>true</code> if this value is \xc2\xb1\xe2\x88\x9e and <code>false</code>. otherwise.0CoReturns <code>true</code> if this <code>i256</code> is negative0CnReturns a non-null BooleanArray with whether each value of \xe2\x80\xa600DhReturns <code>false</code> if the array is guaranteed to not contain \xe2\x80\xa60CoIndicates whether this <code>Field</code> supports null values.10DkReturns <code>true</code> if this type is repeated or optional. If this \xe2\x80\xa6CoReturns <code>true</code> if this <code>i256</code> is positive0BcWhether the array has been released00CiReturns true if this type is temporal: (Date*, Time*, \xe2\x80\xa60ChReturns an iterator over chunks of 64 bits, with the \xe2\x80\xa60BaThe Avro schema as a JSON string.BfLimits the output of value to limit\xe2\x80\xa6AcCurrent line numberAgThe current line numberCmCalculates the logical length of the array encoded by the \xe2\x80\xa60DnConstructs a serialized prefix represented as a <code>Vec&lt;u8&gt;</code> \xe2\x80\xa6BnReturns the maximum value in the boolean array00BhReturns the estimated total memory usageBiReturns the estimated total memory usage.DeEstimate of the bytes allocated to store <code>ParquetMetadata</code>DbEstimated memory usage, in bytes, of this <code>ArrowWriter</code>CgReturns the estimated total memory usage by the writer.1C`Compute a new interval that is the union of bothBoReturns the minimum value in the boolean array.00AkChecked remainder operation000B`Checked multiplication operation000AeNumber of nanoseconds0000Clreturns a DecodeResults that describes needing the given \xe2\x80\xa6AjChecked negation operation000Edcreates 2 <code>MutableBuffer</code>s with a given <code>capacity</code> (in slots).EgCreate a new <code>BooleanArray</code> from <code>&amp;[u8]</code> This method uses \xe2\x80\xa60DfReturn a new buffer, with a capacity of at least <code>min_size</code>CkReturns the next column writer, if available; otherwise \xe2\x80\xa6AgReturns the next offsetBkReturns array of null counts, one per page.CiA list containing the number of null values for each pageCjNullability/order for this site (None for required fields)C`Returns the nullability status of this data typeBiSet this sort options to sort nulls firstAkWhether to sort nulls first01010CkIf true, nulls will come before non-null values, otherwise,0BhReturn the number of batches in the fileAmReturns the number of buffers00C`Return the number of fields in this struct arrayCbReturns the number of columns in the record batch.10BeThe expected number of fields per rowBdNumber of columns in this row group.ChGet the total number of column chunks in this row group.BeReturns number of leaf-level columns.BkReturns number of records stored in buffer.AjNumber of buffered records0CdNote: This is <code>offset_size_minus_one</code> + 1CaThe current offset into <code>self.offsets</code>Ahoutput Parquet file pathDeParse nanoseconds from the first <code>N</code> values in digits, \xe2\x80\xa6B`Checked exponentiation operation000CbPrints index information for a single column chunkBiPush a slice of <code>length</code> bytes00BjPush the data into the decoder\xe2\x80\x99s buffer.BiPush data into the decoder for processingCaRead a buffer based on offset and length From \xe2\x80\xa6CfRead a Thrift <code>double</code> as <code>f64</code>.ClRead the Avro file header (magic, metadata, sync marker) \xe2\x80\xa6BoRead a Thrift binary as a UTF-8 encoded string.DhRead an object of type <code>Self</code> from the input protocol object.EfRead a varint from <code>buf</code> returning the decoded <code>u64</code> and the \xe2\x80\xa6CjBuilds tree of readers for the current schema recursively.BlMemory reservation for tracking memory usage00BdReturns schema as <code>Type</code>.DhComputes the length of each encoded <code>Rows</code> and returns an \xe2\x80\xa6CnGiven an offset index, return the byte ranges for all data \xe2\x80\xa6CaSet the root schema element name (defaults to \xe2\x80\xa6BbName of the root schema in ParquetDlReturns <code>true</code> if this <code>RowSelection</code> selects any rowsCaReturns true if the current plan selects any rowsCiSets bit at position <code>i</code> for <code>data</code>00CjReturns an iterator over the set bit positions in this \xe2\x80\xa60B`Sets ordinal for this row group.AeSkip a thrift binary.CkFor fields present in the writer\xe2\x80\x99s schema but not the \xe2\x80\xa6BiSkips over <code>num_values</code> valuesAcSparse tensor indexCjTemporary workaround due to lack of stable const array \xe2\x80\xa6CjSplits string into tokens; input string can already be \xe2\x80\xa6C`Perform SQL <code>STARTSWITH(left, right)</code>DhThis is faster than <code>[u8]::starts_with</code> for small slices. \xe2\x80\xa61DhThis is faster than <code>str::starts_with</code> for small strings. \xe2\x80\xa6ClReturns if this writer is configured to write structs as \xe2\x80\xa6ClWhether to encode structs as JSON objects or JSON arrays \xe2\x80\xa6CiGet whether to encode structs as JSON objects or JSON \xe2\x80\xa61AmChecked subtraction operation000CaReturns the sum of values in the primitive array.00AgThe decoded sync markerCmReturn a reference to the 16\xe2\x80\x91byte sync marker generated \xe2\x80\xa6DgReturn the 16\xe2\x80\x91byte sync marker (OCF) or <code>None</code> (binary \xe2\x80\xa6AfUnderlying sync writerCkSpecifies a filter of table types which must match. The \xe2\x80\xa60Co<code>GetTableTypesBuilder</code> for building responses to \xe2\x80\xa61DoFor each ArrayRef in the <code>Vec&lt;ArrayRef&gt;</code>, take elements by \xe2\x80\xa600AkTime format for time arraysCjGet the CSV file\xe2\x80\x99s datetime time if set, defaults to \xe2\x80\xa6CdThe time format for time arrays, defaults to RFC3339BdOptional time format for time arrays0CkGet the JSON file\xe2\x80\x99s datetime time if set, defaults to \xe2\x80\xa61CnReturn the memory representation of this integer as a byte \xe2\x80\xa60CkReturns the memory representation of the underlying bit \xe2\x80\xa60CeReturns the bytes of the UUID in little-endian order.0221111CkCreates a new UnshredVariantRowBuilder from shredding stateCkTry to reallocate the underlying memory region to a new \xe2\x80\xa6ClIf type is FIXED_LEN_BYTE_ARRAY, this is the byte length \xe2\x80\xa60CjReturns type length for this column. Note that it will \xe2\x80\xa6AdLength of this type.DfPerform a conditional update of <code>cur</code>, skipping any NaN \xe2\x80\xa6ClGets the value field from the entries of a map.  For all \xe2\x80\xa6DeReturn a reference to the value field of the <code>StructArray</code>CaReturn a reference to the value field, if present01100CiRange of values for a timestamp in seconds. The range \xe2\x80\xa6CnRange of values for a timestamp in milliseconds. The range \xe2\x80\xa6CnRange of values for a timestamp in microseconds. The range \xe2\x80\xa6CmRange of values for a timestamp in nanoseconds. The range \xe2\x80\xa6ClRange of values representing the elapsed time since UNIX \xe2\x80\xa6CmRange of values  representing the elapsed time since UNIX \xe2\x80\xa6CgRange of values representing the elapsed time since \xe2\x80\xa6000CjReturns the range of values for <code>impl</code>\xe2\x80\x99d typeBnReturns the sizes values in the offsets buffer0CkReturns an array with the specified path extracted from \xe2\x80\xa600AlName of the external system.BhReturns the name of the external system.01mVisit a pointEcSet the bits in the range of <code>[0, end)</code> to 0 (if <code>val</code> is \xe2\x80\xa60EhSet the bounds over which to scan the reader. <code>start</code> and <code>end</code>\xe2\x80\xa6CjSpecify an escape character, defaults to <code>None</code>CfSet the given character as the CSV file\xe2\x80\x99s escape \xe2\x80\xa6CiSet the CSV file\xe2\x80\x99s escape character as a byte characterClSets a list of fields that should be child nodes of this \xe2\x80\xa6BjOverrides the Format of this ReaderBuilderCjSpecify whether the CSV file has a header, defaults to \xe2\x80\xa6BeSet whether the CSV file has a headerBoSet whether to write the CSV file with a headerCmSets type length and returns itself. This is only applied \xe2\x80\xa6BgSet the <code>Self::offset</code> field0CgProvide an offset to skip over the given number of rowsBhSet the offset to apply to the read planCdOverride the schema of this <code>RecordBatch</code>0CkSpecify a schema for the RecordBatches being sent. If a \xe2\x80\xa6CkProvide a schema hint to use when reading the Parquet file.DcSet the <code>Ticket</code> used to retrieve data from the endpointEhCreate a new <code>DictionaryArray</code> replacing <code>values</code> with the new \xe2\x80\xa6CnReturns a new dictionary with the same keys as the current \xe2\x80\xa61110ClWrites batch of values, definition levels and repetition \xe2\x80\xa6DiSerialize a slice of <code>u8</code>s. This will encode a length, and \xe2\x80\xa6CgA mask consisting of unused bit positions, used for \xe2\x80\xa6CjTrait for dealing with different array builders at runtime00ChA thread-safe, shared reference to the Arrow array data.00AjAn array of N + 1 elementsBoAn Avro datatype mapped to the arrow data modelCeExtension trait for AvroField to add Utf8View supportB`A decoder for <code>Block</code>AjAn array of boolean values000BfPrimitive (type_id=1): BOOLEAN (false)00DfManages allocating new buffers for <code>StringViewArray</code> in \xe2\x80\xa6CgA trait over the variable length bytes view array types00BaThe result of a cancel operation.0BaColumn reader for a Parquet type.CnA collection of <code>ParquetValueType</code> encoded by a \xe2\x80\xa6BaColumn writer for a Parquet type.AiError during computation.00BhDefault values for <code>DataType</code>00AgTensor of type Int8TypeAhTensor of type Int16TypeBcMode of deallocating memory regionsCiWhat data is needed to read the next item from a decoder.CaStates based on https://www.json.org/json-en.htmlCjIndicates that a default value should be used for a field.Bk<code>Display</code> but accepting an indexAnError during division by zero.A`Division by zero11DeThe <code>ElementType</code> to use when a list of this object is \xe2\x80\xa6DdA bitmask representing the <code>Encoding</code>s employed while \xe2\x80\xa6CkPairs a boxed <code>DisplayIndex</code> with its field nameAkArrow to Avro FieldEncoder:BgFile level metadata for a Parquet file.AmDescription for file metadataEhAvro <code>fixed</code> encoder for Arrow <code>FixedSizeBinaryArray</code>. Spec: a \xe2\x80\xa6BmA \xe2\x80\x9cMid level\xe2\x80\x9d Apache Arrow Flight client.CaA <code>PrimitiveArray</code> of <code>f16</code>000CaA <code>PrimitiveArray</code> of <code>f32</code>000CaA <code>PrimitiveArray</code> of <code>f64</code>000BiEmbedded Geometry logical type annotationBfA signed 16-bit integer array builder.000BfA signed 32-bit integer array builder.000BfA signed 64-bit integer array builder.000DkState left during the <code>try_decode</code> method so something valid \xe2\x80\xa6CjRepresents the units of an interval, with each variant \xe2\x80\xa6CkYEAR_MONTH, DAY_TIME, MONTH_DAY_NANO interval in SQL style.100BnExtension type metadata for <code>Json</code>.0DggRPC trailers that are extracted by <code>ExtractTrailersStream</code>.ClThe definition and repetition level of an array within a \xe2\x80\xa6DhTrait for type-safe access of an index for a <code>List</code>. Note \xe2\x80\xa60AaList of elements.0CfPromotes a <code>long</code> to a <code>double</code>.CmHighest valued discriminant in the <code>Encoding</code> enumBbNumber of microseconds in a second000BbNumber of milliseconds in a second000BkThe minimum amount of data in a single readBoSmallest positive normal <code>f16</code> value0Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600AlTime units for logical typesCjA tuple representing (months, days, nanoseconds) in an \xe2\x80\xa6CgA triple of the number of elapsed months, days, and \xe2\x80\xa6100CoIf <code>true</code>, the writer for this format will query \xe2\x80\xa6Bi<code>f16</code> negative infinity (-\xe2\x88\x9e)0ChReturned when a function needs more data to complete \xe2\x80\xa6DoRuntime plan for decoding reader-side <code>[&quot;null&quot;, T]</code> types.ClA non-empty buffer of monotonically increasing, positive \xe2\x80\xa600CfA buffer of variable-sized byte arrays that can be \xe2\x80\xa6CkOptional reader with definition level of a parent and a \xe2\x80\xa6CnAn iterator over pages of one specific column in a parquet \xe2\x80\xa6CnPage location information for <code>OffsetIndexMetaData</code>AlContains metadata for a pageB`Error during Parquet operations.00AiParquet error enumerationEgRead up to <code>num_records</code> records from <code>row_group_reader</code> into \xe2\x80\xa6DiA <code>RecordReader</code> is a stateful column reader that delimits \xe2\x80\xa61CnTrait describing how to write a record (the implementator) \xe2\x80\xa60DbConverts <code>ArrayRef</code> columns into a row-oriented format.BiTrait for formatting fields within a Row.0CbThe current row group being read and the read planDe<code>RowSelection</code> allows selecting or skipping a provided \xe2\x80\xa60DkThe <code>RunArrayIter</code> provides an idiomatic way to iterate over \xe2\x80\xa60CiRun-end encoded values with specific run-end index widthsCmA slice-able buffer of monotonically increasing, positive \xe2\x80\xa600AkGenerated gRPC service nameDiA strongly-typed <code>Buffer</code> supporting zero-copy cloning and \xe2\x80\xa600AdZipper for 2 scalars0BcWrap the result of a getSchema call0CeConverts an slice of a data type to a slice of bytes.CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60AjRepresents a dynamic valueAcArrow Stream ReaderAcArrow Stream WriterBaA single parsed, UTF-8 CSV recordDaA writer that allows writing to a <code>String</code> like an \xe2\x80\xa6DkA wrapper around a <code>Write</code> that keeps track of the number of \xe2\x80\xa6AiTensor of type UInt16TypeAiTensor of type UInt32TypeAiTensor of type UInt64TypeBgAn usigned 8-bit integer array builder.000oNo compression.BiThe compression used in the Bloom filter.BcBuilder for <code>UnionArray</code>000DiWrapper around a <code>Vec&lt;u8&gt;</code> that provides methods for \xe2\x80\xa600BiA buffer that supports padding with nullsBoAn array of Parquet <code>Variant</code> values00ClThe JDBC/ODBC-defined type of any object. All the values \xe2\x80\xa60CiData structure representing type information for xdbc \xe2\x80\xa60CbAdds the given IntervalDayTimeType to an arrow \xe2\x80\xa6000CiAdds the given IntervalDayTimeType to an arrow Date32TypeCiAdds the given IntervalDayTimeType to an arrow Date64Type222210AkWrapping addition operationClPerform <code>lhs + rhs</code>, wrapping on overflow for \xe2\x80\xa61011AmApplication-defined metadata.00000CbReturn the metadata field of the inner flight dataBmoptional metadata to add to schema FlightDataBeMetadata to add to the schema messageCmAppends array values and null to this builder as is (this \xe2\x80\xa6ChAppends an array to the builder. This will flush any \xe2\x80\xa6111110CfAppend a new data block returning the new block offset0CkAppends <code>n</code> <code>null</code>s into the builder.000000CgAppends <code>n</code> no. of null\xe2\x80\x99s into the builderCaAppend <code>n</code> null slots into the builderClInfallibly append <code>n</code> null slots into the builder3333332130BkAppends a slice of booleans into the bufferClAppends a boolean slice into the builder to indicate the \xe2\x80\xa6DjAppends a slice of type <code>T</code>, growing the internal buffer as \xe2\x80\xa6CgAppends a slice of type <code>T</code> into the builder032100123BaAppends a value into the builder.B`Appends a value into the builderCgAppends a value of type <code>T</code> into the builderBfAppends a byte slice into the builder.BiInfallibly append a value to this builderCfAppend a value to this <code>GenericListBuilder</code>31CnAppends value to the logical array encoded by the run-ends \xe2\x80\xa62CkAppends value to the logical array encoded by the RunArray.CjAppend value into this <code>GenericListViewBuilder</code>654836424170EeAppends a single value to this <code>FieldData</code>\xe2\x80\x99s <code>values_buffer</code>.BjAppend the specified value to this builderCiAppends a new variant value to this builder. See e.g. \xe2\x80\xa6AnAppends a variant to the list.AnAppend a value to the builder.CfAppend a variant value with its corresponding metadata33120CcLow-level buffer abstractions for Apache Arrow RustCkA native Rust implementation of Apache Arrow Flight for \xe2\x80\xa6CgContains reader which reads parquet data into arrow \xe2\x80\xa6AcArrow logical typesAkA copy of the Arrow schema.AgArrow selection kernelsAdArrow string kernelsCjContains writer which writes arrow data into parquet data.DiDowncast this to a <code>GenericByteViewArray</code> panicking if not \xe2\x80\xa600EgDowncast this to a <code>GenericByteArray</code> returning <code>None</code> if not \xe2\x80\xa600CjConverts this variant to tuple with a 16-byte unscaled \xe2\x80\xa60DiDowncast this to a <code>GenericListViewArray</code> panicking if not \xe2\x80\xa600FeForce downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to <code>MapArray</code>\xe2\x80\xa600DhDowncast this to a <code>PrimitiveArray</code> panicking if not possible00E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600AgReturns the packed bitsCeReturn a mutable reference to the inner bitmap slice.CcView the contents of this buffer as a mutable sliceCjReturns the data stored in this buffer as a mutable slice.3210123EaDowncast this to a <code>UnionArray</code> returning <code>None</code> if not \xe2\x80\xa600Dn<code>async</code> API for reading Parquet files as <code>RecordBatch</code>esAoAsync writer provided by callerDn<code>async</code> API for writing <code>RecordBatch</code>es to Parquet filesBhTypes for iterating over packed bitmasks000D`The bitwise or (<code>|</code>) of the bits in two flags values.CgBloom filter implementation specific to Parquet, as \xe2\x80\xa6BeOptional bloom filter for this columnAaThe buffer index.00DfBuilds this builder creating a new <code>UnionArray</code> without \xe2\x80\xa6CfReturns a function that extends the run encoded array.DbBuild a <code>csv_core::Reader</code> for this <code>Format</code>CmBuild a <code>csv::Reader</code> for this <code>Format</code>CjPerforms a cheap, pointer-based comparison of two byte \xe2\x80\xa6CmControls the casting behavior (e.g. error vs substituting \xe2\x80\xa600CnPerform bounds check before taking indices from values. If \xe2\x80\xa60CmValidates that each value in self.buffers (typed as T) is \xe2\x80\xa6EgVerifies that the non-null values of <code>indices</code> are all <code>&lt; len</code>2CfReturns <code>true</code> if type coercion is enabled.CiShould we coerce Arrow types to compatible Parquet types?CgSets whether to coerce Arrow types to match Parquet \xe2\x80\xa6EaInvokes <code>f</code> with values <code>0..len</code> collecting the boolean \xe2\x80\xa6EbInvokes <code>f</code> with indexes <code>0..len</code> collecting the boolean \xe2\x80\xa6101AkDescriptor for this column.CmReturns column descriptor reference for the current typed \xe2\x80\xa6BdOptional column index, for filteringCfReturn a reference to the current column index, if anyC`Returns the column index for this file if loadedCcPage level index for each page in each column chunkEh<code>ColumnIndexMetaData</code> structures holding decoded <code>ColumnIndex</code> \xe2\x80\xa6BgReturn field names in this struct array0DeReturns column order for <code>i</code>th column in this file. If \xe2\x80\xa6BdIf we have read a continuation tokenDjConverts Parquet BOOLEAN type with logical type into <code>bool</code> \xe2\x80\xa6ClConvert <code>Rows</code> columns into <code>ArrayRef</code>CmCreates an array from a literal slice of values, suitable \xe2\x80\xa60BoCoordinates reading arrays based on data types.BoConvert a series of record batches into a tableDcCreates a non-null pointer with alignment of <code>ALIGNMENT</code>BgReturns the buffers storing string data0Amhow to deallocate this regionDdDecodes a <code>ArrayData</code> from rows based on the provided \xe2\x80\xa6CdDecodes a Float from the value section of a variant.CeDecodes an Int16 from the value section of a variant.CeDecodes an Int32 from the value section of a variant.CeDecodes an Int64 from the value section of a variant.DjDecodes a single byte from each row, interpreting <code>0x01</code> as \xe2\x80\xa6C`Decode the input into the provided output slice.DkCache of decoders for existing encodings. Uses <code>EncodingMask</code>\xe2\x80\xa6CmThe compression codec for this column chunk. Only set for \xe2\x80\xa6CeThe default unit to use if none is specified e.g. \xe2\x80\xa6GbDerives <code>std::ops::$t</code> for <code>$ty</code> calling <code>$wrapping</code> or <code>$checked</code> \xe2\x80\xa6BaThe dictionaries in the JSON fileBcLookup table for dictionaries by ID0CjPerform narrowing division of a u128 by a u64 divisor, \xe2\x80\xa6AkWrapping division operation000BlAccept authentication and return a token \xe2\x80\xa6BlGet whether double quote escapes are enabledCjEnable double quote escapes. Defaults to <code>true</code>BfThe type for each element in the list.DfEncodes batch into one or more <code>FlightData</code> messages in \xe2\x80\xa6EgConvert a <code>RecordBatch</code> to a Vec of <code>FlightData</code> representing \xe2\x80\xa6ClEncode arbitrary octets as base64 into a supplied slice. \xe2\x80\xa6DkCompares the values of two ArrayData starting at <code>lhs_start</code> \xe2\x80\xa6CnCompare the Arrow JSON field with the Arrow <code>Field</code>Cjconsume the next token, returning OK(()) if it matches \xe2\x80\xa6CaDefines a an item with an experimental public APICnExtends the in progress array with null elements, ignoring \xe2\x80\xa60Cffunction used to extend the output array with null \xe2\x80\xa6CkExtends the <code>MutableArrayData</code> with null values.EbExtends the buffer by <code>additional</code> bytes equal to <code>0u8</code>, \xe2\x80\xa60CmDeserialize an ipc crate::Schema` from flat buffers to an \xe2\x80\xa6CnReturns the byte ranges to fetch for the columns specified \xe2\x80\xa6CnReturn a future that fetches the last <code>n</code> bytes \xe2\x80\xa60Cb<code>filter</code> implementation for byte arraysCdCounts the number of set bits in <code>filter</code>FiReturns a <code>Vec</code> containing <strong>all unique <code>Fingerprint</code>s</strong> currently \xe2\x80\xa6ChThe schema name where the foreign table is. An empty \xe2\x80\xa6DkReturns the value of <code>fk_db_schema</code>, or the default value if \xe2\x80\xa61B`Convert a decimal from a decimal000DmCreates a <code>RowSelection</code> from a slice of <code>BooleanArray</code>DeCreate a new <code>OffsetBuffer</code> from the iterator of slice \xe2\x80\xa60CjCreates a GenericBinaryArray from a vector of Optional \xe2\x80\xa600CjCreates a UUID from a 128bit value in little-endian order.0CfWidening multiplication of an N-digit array with a u64CnComputes the logical nulls for a sparse or dense union, by \xe2\x80\xa6ChRequest a list of catalogs as tabular FlightInfo resultsBoReturns a directory path for finding test data.DiReturn a future which results in the <code>ParquetMetaData</code> for \xe2\x80\xa6CkReturns <code>OnCloseColumnChunk</code> for the next writerDkGet an iterator over the row in this file, see <code>RowIter</code> for \xe2\x80\xa60BbRequest a list of SQL information.DdIndicates whether this reader has a <code>ParquetMetaData</code> \xe2\x80\xa6DjReturns the enum value of <code>if_not_exist</code>, or the default if \xe2\x80\xa6DeChecks if a <code>GenericListArray</code> contains a value in the \xe2\x80\xa6EcCurrent offset into <code>index_buf</code>. If <code>index_buf_offset</code> == \xe2\x80\xa6ClSupport for reading <code>ColumnIndexMetaData</code> and \xe2\x80\xa6CmindptrBuffer stores the location and size of indptr array \xe2\x80\xa6DaInfer schema of CSV records from the provided <code>reader</code>DfReturns the first <code>len</code> bytes the inline value of the view.0Aainput file formatCkAdd a field with key and value to the object by copying \xe2\x80\xa60DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DjCompute the intersection of two <code>RowSelection</code> For example: \xe2\x80\xa6CgReturns the boxed builder as a box of <code>Any</code>.00000000000000CfReturns the boxed builder as a box of <code>Any</code>11111111111111110DkReturns <code>GenericByteBuilder</code> of this byte array for mutating \xe2\x80\xa6CeConsume self and returns the in progress array as \xe2\x80\xa6DjConverts this <code>ArrayData</code> into an <code>ArrayDataBuilder</code>DhReturns a <code>PrimitiveBuilder</code> for this array, suitable for \xe2\x80\xa63012CeCreate a builder suitable for constructing a response00000DgConvert this ParquetMetaData into a <code>ParquetMetaDataBuilder</code>CfConverts this <code>RowGroupMetaData</code> into a \xe2\x80\xa6CiConverts this <code>ColumnChunkMetaData</code> into a \xe2\x80\xa6CfConverts this <code>WriterProperties</code> into a \xe2\x80\xa6CnMove columns data out of the row. Useful to avoid internal \xe2\x80\xa6DfReturns <code>MutableBuffer</code> for mutating the buffer if this \xe2\x80\xa60CkConvert the implemented type into a Python object while \xe2\x80\xa6CgReturns whether this page is any version of a data pageDhReturns whether the page indexed by <code>idx</code> consists of all \xe2\x80\xa60CkReturns true if the type is primitive: (numeric, temporal).0CdDetermines if this Row represents a primitive value.EbReturns <code>true</code> if this type is a primitive type, <code>false</code> \xe2\x80\xa6BhIndicates if the memory layout row majorBmreturns true if this character is a separatorEnProvides <code>key_mappings[</code>array_idx<code>][</code>old_key<code>] -&gt; new_key</code>ClRetrieval metadata of key used for encryption of footer, \xe2\x80\xa6BhPath to the column in the Parquet schemaBmRetrieval metadata of column encryption key *2CnReport the schema of the encoded data when known. A schema \xe2\x80\xa6BjReturns the number of leading padding bits0CkMapping from a leaf column\xe2\x80\x99s index to the root column \xe2\x80\xa6CnA flight service exposes all of the available action types \xe2\x80\xa60DfMake a <code>ListActions</code> call to the server and returning a \xe2\x80\xa61CfGet a list of available streams given a particular \xe2\x80\xa60DhMake a <code>ListFlights</code> call to the server with the provided \xe2\x80\xa61ChShorthand for building list data type of <code>ty</code>AeLog headers/trailers.mLogging args.AcA logical type nameBfThe logical type of this SchemaElement0CdReturns <code>LogicalType</code> value for the type.CaReturns <code>LogicalType</code> for this column.DiReturns a builder with capacity for <code>capacity</code> elements of \xe2\x80\xa600CaCreates an encoder for the given array and field.0C`return a Request, adding any configured metadataDjCompute <code>get_masked_values</code> for a <code>GenericByteArray</code>BjReturns the tracked row lengths as a sliceDjReturns <code>true</code> if the max value is set, and is an exact max \xe2\x80\xa6CgWhether or not max value is set, and is an exact value.CcThe end offsets of strings in <code>meta_buf</code>DfReturns a mutable reference to the <code>Field</code>\xe2\x80\x99s optional \xe2\x80\xa6CmReturns a mutable reference to the Map of custom metadata \xe2\x80\xa6CjReturn a reference to gRPC metadata included with each \xe2\x80\xa621AfNumber of milliseconds0000DjReturns <code>true</code> if the min value is set, and is an exact min \xe2\x80\xa6CgWhether or not min value is set, and is an exact value.AlWrapping remainder operation000BaWrapping multiplication operationClPerform <code>lhs * rhs</code>, wrapping on overflow for \xe2\x80\xa61011AkWrapping negation operationDiNegates each element of  <code>array</code>, wrapping on overflow for \xe2\x80\xa61011BhCreates a new builder with given length.00BiRecord and return the next dictionary ID.DiPerform <code>left IS NOT DISTINCT FROM right</code> operation on two \xe2\x80\xa60AnReturns the number of children00CkNested fields. Since thrift does not support nested fields,ChNested fields.  Since thrift does not support nested \xe2\x80\xa6CaOptional offset index, identifying page locationsCfReturn a reference to the current offset index, if anyBnReturns offset indexes in this file, if loadedBoOffset index for each page in each column chunkEg<code>OffsetIndexMetaData</code> structure holding decoded <code>OffsetIndex</code> \xe2\x80\xa6BhCreates a builder-specific parent state.BgCreates a builder-specific parent state1BmBinary file to read data from a Parquet file.kParse UTF-8DeParses the next Struct (called after <code>Struct</code> has been \xe2\x80\xa6DeParses the next Time32 (called after <code>Time32</code> has been \xe2\x80\xa6DeParses the next Time64 (called after <code>Time64</code> has been \xe2\x80\xa6CmIt\xe2\x80\x99s unstable_sort, may not preserve the order of equal \xe2\x80\xa600CkIndices of the desired ordering of the original dimensions.0CkReturns the indices of the desired ordering of the original010CfReturns the indices of the desired ordering of the \xe2\x80\xa62CnThe Schema name where the parent table is. An empty string \xe2\x80\xa6DkReturns the value of <code>pk_db_schema</code>, or the default value if \xe2\x80\xa61BaWrapping exponentiation operation000BmPrints Parquet <code>Type</code> information.AoPrivate data used by the stream00Dc<code>ParquetPushDecoder</code>: decodes Parquet data with data \xe2\x80\xa6DkReturns a vector of size <code>n</code>, filled with randomly generated \xe2\x80\xa6BdRead all RecordBatches from the fileDkRead up to <code>max_records</code> whole records, returning the number \xe2\x80\xa6DeTry to read <code>num_records</code> of column data into internal \xe2\x80\xa6CdRead a zig-zag encoded signed varint from the input.D`Contains the <code>RecordBatch</code> type and associated traitsChCreates a record batch from literal slice of values, \xe2\x80\xa60CjA two-dimensional batch of column-oriented data with a \xe2\x80\xa6EfReturn a  <code>RecordBatch</code> containing only the requested <code>u32</code>, \xe2\x80\xa6CiReturn the raw (not encoded) RecordBatch that will be \xe2\x80\xa6CgThe number of records updated. A return value of -1 \xe2\x80\xa60ClExtract all groups matched by a regular expression for a \xe2\x80\xa600B`The total number of rows writtenBlIdiomatic iterator for <code>RunArray</code>0BeRun a scenario that tests basic auth.CkRun a scenario that uploads data to a Flight server and \xe2\x80\xa6BeRun a scenario that tests middleware.BnOpaque handle for the savepoint on the server.000BiReturns a reference to schema descriptor.BiReturns reference to a schema descriptor.1CkSerialize a schema in IPC format, returning a completed \xe2\x80\xa6AjReturns fixed seedable RNGBfSets default encoding for all columns.AnSets encoding for this column.CiSets the <code>Field</code>\xe2\x80\x99s optional custom metadata.0CiSet the <code>nullable</code> of this <code>Field</code>.0BfSets number of rows in this row group.BkShift a date by the given number of months.ChSign-extend or (when larger) validate-and-truncate a \xe2\x80\xa6DbSkips over <code>num_records</code> records, where records are \xe2\x80\xa6CbTry to skip the next <code>num_records</code> rowsBmReturns a mutable reference to a values arrayCiWrite any bytes required at the very beginning of the \xe2\x80\xa6Cjwrite any bytes needed at the start of the file to the \xe2\x80\xa6CfReturns the number of strong references to the buffer.0AnWrapping subtraction operationClPerform <code>lhs - rhs</code>, wrapping on overflow for \xe2\x80\xa61011CmSpecifies a filter pattern for tables to search for. When \xe2\x80\xa6Cc<code>take</code> implementation for boolean arraysCfTakes ownership of the the column metadata in this \xe2\x80\xa6CaPerform arithmetic operation on a timestamp arrayD`Converts a <code>f16</code> value into a <code>f32</code> value.0D`Converts a <code>f16</code> value into a <code>f64</code> value.0CnReturns the four field values of the UUID in little-endian \xe2\x80\xa60ChThe total number of blocks, which may contain record \xe2\x80\xa6CiReturns common tree builder, so the same settings are \xe2\x80\xa6DjValidate the schema and columns using <code>RecordBatchOptions</code>. \xe2\x80\xa6BkCreates a nested list builder. See e.g. \xe2\x80\xa6CkReturns a list builder that can be used to append a new \xe2\x80\xa6110DkReturns a reference to the data in <code>buffers[idx]</code> as a typed \xe2\x80\xa6CjExpand this interval to the union of self and other in \xe2\x80\xa6DhReturns whether <code>StringViewArray</code> is enabled for string data.DiReturns a <code>BitSliceIterator</code> yielding contiguous ranges of \xe2\x80\xa60CeReturns the length for value at index <code>i</code>.0BbReturns the length for an element.01AnReturns the length of the list211220CkReturns the offset for the element at index <code>i</code>.CeReturns the offset for value at index <code>i</code>.CkReturns the offset into the underlying values array for \xe2\x80\xa612101BlReturns the current values buffer as a slice000CgReturns the current dictionary values buffer as a slice11110CbReturns the variant\xe2\x80\x99s name or \xe2\x80\x9c\xe2\x80\x9d if unknown.00000000000000CeVisits all children of this node in depth first orderAnCalled when a struct type hit.AkSpecify the type to return.0CjSpecify a comment character, defaults to <code>None</code>CiProvide a comment character, lines starting with this \xe2\x80\xa6AhRecord response headers.BiSpecify metrics collection during readingEfSet the <code>IpcWriteOptions</code> used to encode the <code>RecordBatch</code>es \xe2\x80\xa6CcSpecify if the response is ordered across endpointsBhPerform IO on the provided tokio runtimeCiBuild well-known binary representing a point with the \xe2\x80\xa6BhComputes the absolute value of this i256AkComputes the absolute value000100AjPerforms wrapping addition0000000AjPerforms wrapping division0000000B`Performs wrapping multiplication0000000AaNegates this i256AaNegates the value000100B`Performs wrapping exponentiation0000000AkPerforms wrapping remainder0000000AmPerforms wrapping subtraction0000000CbWrite the bitset in serialized form to the writer.DgWrite a buffer into <code>arrow_data</code>, a vector of bytes, and \xe2\x80\xa6AeWrite a double value.DcWrite the values at the indexes in <code>indices</code> to this \xe2\x80\xa6BeWrite little-endian integer to bufferDeWrite <code>range</code> elements from StructArray <code>array</code>CgSerialize this object to the given <code>writer</code>.AcArrow crate versionCjThe expected password for the basic auth integration test.CjThe expected username for the basic auth integration test.CmWrite Bloom Filters of each row group right after the row \xe2\x80\xa60DaA generic trait for accessing the values of an <code>Array</code>00BoAvro Object Container File (OCF) format writer.DiRaw Avro binary streaming format using <strong>Single-Object </strong>\xe2\x80\xa6CjBasic type info. This contains information such as the \xe2\x80\xa6BdBuilder for <code>BinaryArray</code>00CjUnified binary encoder generic over offset size (i32/i64).ClNew-type wrapper for encoding the binary types in arrow: \xe2\x80\xa6CoA slice-able <code>Buffer</code> containing bit-packed booleans00AjTensor of type BooleanTypeCmEnum to annotate whether lists of min/max elements inside \xe2\x80\xa60BeBuilder for creating a Buffer object.0000BoA trait over the variable-size byte array types00BdParquet physical type: ByteArrayTypeCePromotes <code>bytes</code> to a <code>string</code>.ChType alias for <code>Arc&lt;ColumnDescriptor&gt;</code>.CjDEPRECATED: Common types used by frameworks(e.g. hive, \xe2\x80\xa6CjCommon types (converted types) used by frameworks when \xe2\x80\xa6AlA 32-bit date array builder.000AlA 64-bit date array builder.000BeThe decimal type for a Decimal32Array00BeThe decimal type for a Decimal64Array00CgRepresents Avro custom logical type to map to Arrow \xe2\x80\xa6CjCompare the values at two arbitrary indices in two arrays.0A`Extension types.AhWraps an external error.CnExternal error that can provide source of error by calling \xe2\x80\xa611Ag<code>f16</code> 1/\xe2\x88\x9a20CcA builder to construct <code>FilterPredicate</code>00CcA list of some logical data type with fixed length.00AgA fixed size list arrayCjGenerated trait containing gRPC methods that should be \xe2\x80\xa6CbWhen impl FlightSqlService, you can always set \xe2\x80\xa61AjTensor of type Float16TypeAjTensor of type Float32TypeAjTensor of type Float64TypeCgPromotes a <code>float</code> to a <code>double</code>.AmOptions for formatting arrays0BjEmbedded Geography logical type annotationBaA decoder for <code>Header</code>BfA lazily evaluated iterator of indicesEbAn iterator of <code>usize</code> whose index in <code>BooleanArray</code> is trueCfA <code>RunArray</code> with <code>i16</code> run ends000CfA <code>RunArray</code> with <code>i32</code> run ends000CfA <code>RunArray</code> with <code>i64</code> run ends000BlGeneric 1D intervals with wraparound supportDkConverts a JSON string to Variant using a <code>VariantBuilderExt</code>\xe2\x80\xa60Cj(NOT YET FULLY SUPPORTED)  A list of some logical data \xe2\x80\xa6ChSame as ListView, but with 64-bit offsets and sizes, \xe2\x80\xa611BdAn arrow utf8 array with i64 offsets00CgStores the lengths of the rows. Lazily materializes \xe2\x80\xa6BnProduces JSON output with one record per line.CjTrait for list-like arrays that can provide element rangesDgA <code>GenericListViewArray</code> of variable size lists, storing \xe2\x80\xa6000Cha key/value pair is converted into a group of two fieldsCiA key/value pair is converted into a group of two fields.BdMaximum number of significant digits00CnMaximum number of significant digits this decimal type can \xe2\x80\xa6CfMaximum number of significant digits (9 for 4-byte \xe2\x80\xa6CgMaximum number of significant digits (18 for 8-byte \xe2\x80\xa6ChMaximum number of significant digits (38 for 16-byte \xe2\x80\xa633210BhMaximum subnormal <code>f16</code> value0ChThe <code>Field</code> names for a <code>MapArray</code>000CgAn owned container for a validated <code>Message</code>CnThe root Message type This union enables us to easily send \xe2\x80\xa6DjA low-level construct that reads <code>Message::Message</code>s from a \xe2\x80\xa6DjA data source that can be used with <code>ParquetMetaDataReader</code> \xe2\x80\xa60EfA <code>MutableBuffer</code> is Arrow\xe2\x80\x99s interface to build a <code>Buffer</code> \xe2\x80\xa600BlUUID namespace for Domain Name System (DNS).0CaUUID namespace for ISO Object Identifiers (OIDs).0CdUUID namespace for Uniform Resource Locators (URLs).0AkAn optional primitive value000CkA builder for creating <code>Variant::Object</code> values.00CmAn optimized decoder for decoding RLE and BIT_PACKED data \xe2\x80\xa6BoEncrypts page headers and page data for columnsAlContains page write metrics.Cnan iterator that returns Some(T) or None, that can be used \xe2\x80\xa600A`A primitive typeBbRepresents a primitive leaf field.BdSome unexpected message was receivedCmA builder that configures and constructs Avro readers and \xe2\x80\xa6AgCSV file reader builderCjA builder for <code>Reader</code> and <code>Decoder</code>Ee<code>ReaderFactory</code> is used by <code>ParquetRecordBatchStream</code> to createBdReading the last 8 bytes of the fileCgDecodes avro encoded data into <code>RecordBatch</code>Di<code>RecordDecoder</code> provides a push-based interface to decoder \xe2\x80\xa6DdA pre-computed plan for encoding a <code>RecordBatch</code> to Avro.ClInformation required to resolve a writer union against a \xe2\x80\xa6AdDictionary encoding.Dk<code>RowColumnIter</code> represents an iterator over column names and \xe2\x80\xa60CiA run-end encoding (REE) is a variation of run-length \xe2\x80\xa6CkAvro RunEndEncoded site. Values are encoded per logical \xe2\x80\xa6CgContains two child arrays, run_ends and values. The \xe2\x80\xa6CmA row converter for the values array of a run-end encoded \xe2\x80\xa6BdThe row encoding of the values array44DkA builder to facilitate building a <code>Schema</code> from iteratively \xe2\x80\xa600ChType alias for <code>Arc&lt;SchemaDescriptor&gt;</code>.C`Represents a element inside a schema definition.BmSort order within a RowGroup of a leaf column0CkRetrieves a boolean value indicating whether the Flight \xe2\x80\xa60CnRetrieves a int64 value representing the maximum number of \xe2\x80\xa60CkRetrieves a UTF-8 string with the preferred term for \xe2\x80\x9c\xe2\x80\xa60DjA low-level interface for reading <code>RecordBatch</code> data from a \xe2\x80\xa60BdBuilder for <code>StringArray</code>00BiA collection of parsed, UTF-8 CSV recordsCePromotes a <code>string</code> to <code>bytes</code>.BdBuilder for <code>StructArray</code>000CkAn embedded message describing a Substrait plan to execute.0C`Reads and writes the struct to Thrift protocols.BaTimestamp logical type annotationCeTrait for timestamp types to handle conversion to \xe2\x80\xa6CmA <code>RunArray</code> typed typed on its child values array000BhAn usigned 16-bit integer array builder.000BhAn usigned 32-bit integer array builder.000BhAn usigned 64-bit integer array builder.000CaVariable width, such as string data for utf8 data00CiA <code>Variant</code> Object (struct with named fields).00BoExtension trait for converting Variants to JSON0BmNeeds data to proceed with reading the outputCfBuilder to configure and create a <code>Writer</code>.AdA CSV writer builderAdJSON writer builder.AgParquet writer version.CkAdds data page. Data page is either buffered in case of \xe2\x80\xa6B`Adds a row group to the metadataChVerifies that the buffers meet the minimum alignment \xe2\x80\xa6ChEnsure that all buffers are aligned, copying data if \xe2\x80\xa6CcShould buffers be realigned (copying if necessary)?210DkAppend <code>BooleanBuffer</code> to this <code>BooleanBufferBuilder</code>DeAppend <code>NullBuffer</code> to this <code>NullBufferBuilder</code>1001DkAppend an encoded column chunk from <code>reader</code> directly to the \xe2\x80\xa6CeAppend an <code>Option</code> value into the builder.CdAppend an <code>Option</code> value into the builderChAppends an <code>Option&lt;T&gt;</code> into the builderDcAppends an optional value into this <code>GenericListBuilder</code>12CnAppends optional value to the logical array encoded by the \xe2\x80\xa630DgAppends an optional value into this <code>GenericListViewBuilder</code>3523414140DeAppends values from a slice of type <code>T</code> and a validity \xe2\x80\xa60DkInfallibly append a value to this builder repeatedly <code>count</code> \xe2\x80\xa601100DhDispatch the given <code>op</code> to the appropriate specialized kernelCmPass Arrow objects from and to PyArrow, using Arrow\xe2\x80\x99s C \xe2\x80\xa6EeDowncast this to a <code>GenericBinaryArray</code> returning <code>None</code> if \xe2\x80\xa600DdDowncast this to a <code>DictionaryArray</code> panicking if not \xe2\x80\xa600CaGet a borrowed <code>Hyphenated</code> formatter.0E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600CnConverts this variant to a <code>NaiveDate</code> if possible.0111EeDowncast this to a <code>GenericStringArray</code> returning <code>None</code> if \xe2\x80\xa600EbDowncast this to a <code>StructArray</code> returning <code>None</code> if not \xe2\x80\xa600ClReturns true if the decoder has reached its capacity for \xe2\x80\xa6DeThe bitwise and (<code>&amp;</code>) of the bits in two flags values.DfThe bitwise exclusive-or (<code>^</code>) of the bits in two flags \xe2\x80\xa6CjThe number of bytes between each block of bytes, as an \xe2\x80\xa6CkReturns true if the value data for the arrays is equal, \xe2\x80\xa6CmApply a bitwise or to two inputs and return the result as \xe2\x80\xa600CbAllocates new buffers of increasing size as neededClBuffered row count. Always less than <code>batch_size</code>CnCreates an array data, validating all inputs, and aligning \xe2\x80\xa60CiBuild a streaming <code>Decoder</code> from this builder.CkBuilds a decoder that can be used to decode CSV from an \xe2\x80\xa6AmCreate a <code>Decoder</code>CiApply offset and limit, updating the selection on the \xe2\x80\xa6BaThe total number of bytes writtenCbThe number of bytes written to the underlying sinkCdReturns the number of bytes written to this instance0CdReturns the number of bytes written by this instance0CkReturn a cache builder to save the results of predicate \xe2\x80\xa6AfReturns codec options.DfReturns a <code>PageIterator</code> for all pages in the specified \xe2\x80\xa6BaAny previously read column chunksBeAny previously read column chunk dataChAny previously read column chunk data from prior filtersClAny previously read column chunk data from the filtering \xe2\x80\xa6AjReturn chunks for column iB`Column chunks for this row groupEeColumn (sort) order used for <code>min</code> and <code>max</code> values of each \xe2\x80\xa6CmSort order used for the min_value and max_value fields in \xe2\x80\xa6ClTakes a rust type and returns the appropriate parquet-rs \xe2\x80\xa60DgConverts Parquet FLOAT type with logical type into <code>f32</code> \xe2\x80\xa6DiConverts Parquet INT32 type with converted type into <code>i32</code> \xe2\x80\xa6DiConverts Parquet INT64 type with converted type into <code>i64</code> \xe2\x80\xa6CkConverts Parquet INT96 (nanosecond timestamps) type and \xe2\x80\xa6DkCreate a <code>crate::file::statistics::Statistics</code> from a thrift \xe2\x80\xa6ChInspects the buffered repetition levels in the range \xe2\x80\xa6Direturns a new buffer corresponding to the index <code>i</code> of the \xe2\x80\xa6CbCreating output array based on input boolean arrayBaThe create parameters of the type0ClA counter to keep track of the current block that should \xe2\x80\xa6C`The number of fields read for the current recordBgUpdates non-null value for current row.CfReturns current value. Method does not advance the \xe2\x80\xa6EdDecodes a binary array from <code>rows</code> with the provided <code>options</code>CeDecodes a Binary from the value section of a variant.DhDecodes a single block of data The <code>f</code> function accepts a \xe2\x80\xa6D`Decodes a the provided <code>field</code> from <code>rows</code>CeDecodes a Double from the value section of a variant.CmDecodes the Parquet footer, returning the metadata length \xe2\x80\xa6CjDecodes a VLQ encoded little endian integer and returns itEdDecodes a string array from <code>rows</code> with the provided <code>options</code>ChThe index to use for a writer\xe2\x80\x99s symbol that is not \xe2\x80\xa6BoReturns a default value of this primitive type.00000CePerforms dictionary fallback. Prepares and writes \xe2\x80\xa6DeUse Knuth Algorithm D to compute <code>numerator / divisor</code> \xe2\x80\xa6BfDivision of numerator by a u64 divisorCeGet a FlightDataStream containing the list of tables.CoDowncast this dictionary to a <code>TypedDictionaryArray</code>0C`Get the start and end indices for a list elementDlWrites <code>val</code> in <code>SIZE</code> blocks with the appropriate \xe2\x80\xa6DhA buffer that can be used for <code>encode_...</code> calls, that is \xe2\x80\xa60DgEncodes a column to the provided <code>Rows</code> incrementing the \xe2\x80\xa6DfEncodes schema as a <code>FlightData</code> in self.queue. Updates \xe2\x80\xa6AoEncode a schema as a FlightDataDjEncode arbitrary octets as base64 into a supplied <code>String</code>. \xe2\x80\xa6CdEncodes a batch to a number of EncodedData items \xe2\x80\xa6CaCompare the Arrow JSON with a record batch readerD`Compare the Arrow JSON schema with the Arrow <code>Schema</code>CfExtends the in-progress array by the ranges in the \xe2\x80\xa6Cifunction used to extend output array with values from \xe2\x80\xa6CmReturns a mutable reference to the child field builder at \xe2\x80\xa60CiGenerate a JSON representation of the <code>Field</code>.0BcReturns file metadata as reference.AcFile level metadataDdReturns a copy of this <code>Fields</code> containing only those \xe2\x80\xa60Bn<code>filter</code> implementation for structsCjBuilds the array without resetting the underlying builder.CgBuilds the BooleanBuffer without resetting the builder.CdBuilds the NullBuffer without resetting the builder.CfBuilds the OffsetBuffer without resetting the builder.BoBuilds the array without resetting the builder.DgBuilds the <code>GenericByteArray</code> without resetting the builder.DbBuilds the <code>StructArray</code> without resetting the builder.2DfBuilds the <code>GenericByteViewArray</code> without resetting the \xe2\x80\xa6CfBuilds the BooleanArray without resetting the builder.4DfBuilds the <code>FixedSizeBinaryArray</code> without resetting the \xe2\x80\xa65DfBuilds the <code>FixedSizeListBuilder</code> without resetting the \xe2\x80\xa666DfBuilds the <code>DictionaryArray</code> without resetting the builder.DgBuilds the <code>GenericListArray</code> without resetting the builder.8CoBuilds the <code>MapArray</code> without resetting the builder.99CcBuilds the NullArray without resetting the builder.:DeBuilds the <code>PrimitiveArray</code> without resetting the builder.;4CkCreates the RunArray and without resetting the builder. \xe2\x80\xa6<5<<0DfBuilds the <code>GenericListViewArray</code> without resetting the \xe2\x80\xa6=CiBuilds the array without resetting the underlying builderCjBuilds the array without resetting the underlying builder.0CgBuilds the BooleanBuffer without resetting the builder.CdBuilds the NullBuffer without resetting the builder.CfBuilds the OffsetBuffer without resetting the builder.BoBuilds the array without resetting the builder.0000000000000059?>=<DgBuilds the <code>GenericByteArray</code> without resetting the builder.<;9=8DbBuilds the <code>StructArray</code> without resetting the builder.>9DfBuilds the <code>GenericByteViewArray</code> without resetting the \xe2\x80\xa69546ChMacro to finish a decimal builder into an array with \xe2\x80\xa6BjFlush any partially read or skipped recordCmCreate an integer value from its representation as a byte \xe2\x80\xa60CmCreates a floating point value from its representation as \xe2\x80\xa60ClCreates a UUID using the supplied bytes in little endian \xe2\x80\xa602211DhParse a <code>metadata</code> definition from a JSON representation. \xe2\x80\xa62211CiCreates an enum from field names used in the ProtoBuf \xe2\x80\xa60000000000000000000000000000BeCreates a UUID from two 64bit values.0CiExtract the geometry type code encountered by the bounderCgGet the Arrow data type from the flatbuffer Field tableCmHelper method to get existing or new mutable reference of \xe2\x80\xa6CjGets the next page in the column chunk associated with \xe2\x80\xa6CnGets precision of this primitive type. Note that this will \xe2\x80\xa6DkGet the <code>i</code>th row group reader. Note this doesn\xe2\x80\x99t do bound \xe2\x80\xa6CgReturns file handle for a temp file in \xe2\x80\x98target\xe2\x80\x99 \xe2\x80\xa6CkIf the UUID is the correct version (v1, v6, or v7) this \xe2\x80\xa60AbGet the type name.ChReturns size in bytes for Rust representation of the \xe2\x80\xa6BhCurrent length of <code>index_buf</code>CdThe location and size of the indices matrix\xe2\x80\x99s dataCkindicesBuffer stores the location and size of the array \xe2\x80\xa6CiindptrBuffers stores the sparsity structure. Each two \xe2\x80\xa6CnKeep track of the dictionary with the given ID and values. \xe2\x80\xa6EdConvert this stream into a <code>Peekable&lt;Streaming&lt;FlightData&gt;&gt;</code>.DfReturns if this <code>PrimitiveArray</code> is compatible with the \xe2\x80\xa60AgIs this page compressedCnWhether the values are compressed. Which means the section \xe2\x80\xa6ChIndicates if the data is laid out contiguously in memoryAdCheck for wraparoundDhReturns true if the leaf column <code>leaf_idx</code> is included by \xe2\x80\xa6DjReturns a potentially computed <code>NullBuffer</code> that represents \xe2\x80\xa600Bbcached logical nulls of the array.BoConstruct closures to upscale decimals from \xe2\x80\xa6CkReturns slice of bytes that represent max value, if max \xe2\x80\xa6CnReturns max value as bytes of the statistics, if max value \xe2\x80\xa6CaThe maximum definition level for this leaf columnChReturns max definition level for a leaf triplet iteratorCmReturns maximum definition level for the triplet iterator \xe2\x80\xa6CaReturns maximum definition level for this column.BlThe maximum definition level for this columnBkThe maximum repetition for this leaf columnChReturns max repetition level for a leaf triplet iteratorCmReturns maximum repetition level for the triplet iterator \xe2\x80\xa6CaReturns maximum repetition level for this column.BlThe maximum repetition level for this columnAmThe maximum scale of the type0CjSize of the serialized thrift metadata plus the 8 byte \xe2\x80\xa6CkReturns slice of bytes that represent min value, if min \xe2\x80\xa6CnReturns min value as bytes of the statistics, if min value \xe2\x80\xa6AmThe minimum scale of the type0Cgreturn what ranges are still needed to satisfy this \xe2\x80\xa6AjDescribes a list view type0CbCreates a new Tensor using row major memory layoutDgCreate a new <code>GenericByteArray</code> from the provided parts, \xe2\x80\xa6DgCreate a new <code>DictionaryArray</code> without performing validationB`Create a new ArrayData instance;DkCreate a new <code>GenericByteViewArray</code> from the provided parts, \xe2\x80\xa6DiCreate a new <code>StructArray</code> from the provided parts without \xe2\x80\xa6BfCreates a new <code>UnionArray</code>.DiCreates a <code>RecordBatch</code> from a schema and columns, without \xe2\x80\xa6EbCreate a new <code>OffsetBuffer</code> from the provided <code>ScalarBuffer</code>EeUnsafe function to create a new <code>ScalarBuffer</code> from a <code>Buffer</code>.EbCreate a new <code>NullBuffer</code> with the provided <code>buffer</code> and \xe2\x80\xa6FdCreate a new <code>RunEndBuffer</code> from an <code>ScalarBuffer</code>, an <code>offset</code> \xe2\x80\xa6:9657413208CiConstruct options to get the specified path as a variant.0CoCreates an empty <code>SchemaStore</code> using the default \xe2\x80\xa6DaReturns the null sentinel, negated if <code>invert</code> is trueBmReturns the current offsets buffer as a slice00000CjReturns the padded length of the encoded length of the \xe2\x80\xa6CeBinary that prints the [page index] of a parquet fileCmParse the string format decimal value to i128/i256 format \xe2\x80\xa60AmParse a single key-value pairAmParse an encapsulated messageCaReturns physical type associated with statistics.AbColumn chunk type.CjThe physical type of the matched column in the Parquet \xe2\x80\xa6ClReturns physical type for this column. Note that it will \xe2\x80\xa6BePhysical type of this primitive type.BnConverts rust types to parquet physical types.CjPrints a visual representation of record batches to stdout0CiPrints a visual representation of a list of column to \xe2\x80\xa60CgAdds a column of possibly variable-length elements, \xe2\x80\xa6CfPlace the <code>FlightData</code> in the queue to sendCjRead the metadata length for the next message from the \xe2\x80\xa6ChReads a new page and set up the decoders for levels, \xe2\x80\xa6CiRecord blocks that will be written as part of the IPC \xe2\x80\xa6CjReturns the number of remaining bits, guaranteed to be \xe2\x80\xa60Clnumber of remaining bits, guaranteed to be between 0 and \xe2\x80\xa60BeRemove column by index and return it.0AcThe row group indexCmReturns the row at <code>index</code> without bounds checkingCdReturns a mutable reference to the selection, if anyCmReturns self type <code>TypePtr</code>  for this leaf column.CcSet <code>DataType</code> of the <code>Field</code>0BmSets list of encodings for this column chunk.BnSets optional file path for this column chunk.CgSets <code>if_exists</code> to the provided enum value.DnEnsure that <code>count</code> bytes from <code>start</code> contain zero bits0ClShreds the input binary variant using a target shredding \xe2\x80\xa600CfModule for shredding VariantArray with a given schema.CkShrinks the capacity of any exclusively owned buffer as \xe2\x80\xa60AfFree up unused memory.CiTries to shrink the capacity of the buffer as much as \xe2\x80\xa6CkShrinks the capacity of the buffer as much as possible. \xe2\x80\xa622223BdFor shared buffers, this is a no-op.3321333AmThe SQL data type of the type0CaString Writer This string writer encapsulates \xe2\x80\xa6BhConverts this instance into a byte slice00BdConverts the row into a JSON object.CjConverts the Parquet field into a JSON <code>Value</code>.CnConvert <code>Variant</code> to <code>serde_json::Value</code>0CeConverts an arrow Date32Type into a chrono::NaiveDateCeConverts an arrow Date64Type into a chrono::NaiveDate10AkSet these to -1 if unknown.0CnTruncate a UTF-8 slice to the longest prefix that is still \xe2\x80\xa6CiCreate an array from an iterable argument of byte slices.DkCreate a <code>RecordBatch</code> from an iterable list of pairs of the \xe2\x80\xa610BbFallibly converts this to a string0CnApplies a unary fallible function to all valid values in a \xe2\x80\xa6BnSee <code>PrimitiveArray::try_unary_mut</code>001DkReturns a reference to the data in <code>buffer</code> as a typed slice \xe2\x80\xa6CgSizes of individual tensor\xe2\x80\x99s dimensions which are \xe2\x80\xa60CkReturns the value of the target field when selected, or \xe2\x80\xa6BkDefines union_extract kernel for UnionArray110CnSets bit at position <code>i</code> for <code>data</code> to 000DjReturns a <code>BitIndexIterator</code> over the valid indices in this \xe2\x80\xa60DjValidate that the data contained within this <code>ArrayData</code> is \xe2\x80\xa60DkPerforms a full recursive validation of this <code>ArrayData</code> and \xe2\x80\xa60CeEnsures that all strings formed by the offsets in \xe2\x80\xa6ClWhether to run UTF-8 validation when converting to arrow \xe2\x80\xa6CmReturns value as a chrono <code>NaiveDate</code> by using \xe2\x80\xa60CbReturns a value as a chrono <code>NaiveTime</code>0Abbuilder for values0BoReturns the offset values in the offsets bufferC`Returns the offset values in the offsets buffer.11BgThe start and end offsets of each entry21202Cjending offset for each serialized variant value in the \xe2\x80\xa60CjA buffer containing the values for this field in raw bytesBh<code>VariantArray</code> implementationBnCreates a new <code>GenericByteBuilder</code>.DdCreates a new <code>GenericByteViewBuilder</code> with space for \xe2\x80\xa6DfCreates a new boolean builder with space for <code>capacity</code> \xe2\x80\xa6EcCreates a new <code>FixedSizeBinaryBuilder</code>, <code>capacity</code> is the \xe2\x80\xa6DgCreates a new <code>FixedSizeListBuilder</code> from a given values \xe2\x80\xa6DhCreates a new <code>FixedSizeBinaryDictionaryBuilder</code> with the \xe2\x80\xa6DkCreates a new <code>GenericListBuilder</code> from a given values array \xe2\x80\xa6CcCreates a new <code>MapBuilder</code> with capacityCmCreates a new primitive array builder with capacity no of \xe2\x80\xa6DkCreates a new <code>PrimitiveDictionaryBuilder</code> with the provided \xe2\x80\xa6DdCreates a new <code>PrimitiveRunBuilder</code> with the provided \xe2\x80\xa6DdCreates a new <code>GenericByteDictionaryBuilder</code> with the \xe2\x80\xa6DfCreates a new <code>GenericByteRunBuilder</code> with the provided \xe2\x80\xa6DiCreates a new <code>GenericListViewBuilder</code> from a given values \xe2\x80\xa6ClAllocate a new MutableBuffer with initial capacity to be \xe2\x80\xa6EgCreates a new empty <code>SchemaBuilder</code> with space for <code>capacity</code> \xe2\x80\xa6=<;:?9876543>2CjSets the capacity for the given object and returns the \xe2\x80\xa621BeReturns default state of the builder.BmAdd specific a endpoint for fetching the dataDhAdd a location <code>uri</code> to this endpoint. Note each endpoint canAjAdd metadata to the schemaEhSets the metadata of this <code>Field</code> to be <code>metadata</code> and returns \xe2\x80\xa6EaSets the metadata of this <code>Schema</code> to be <code>metadata</code> and \xe2\x80\xa62CiSpecify application specific metadata included in the \xe2\x80\xa6321CaCreate a new VariantBuilder with pre-existing \xe2\x80\xa60DeSet <code>nullable</code> of the <code>Field</code> and returns self.0BmConstruct a timestamp array with new timezoneAaSets the timezone10AiRecord response trailers.CiReturns a new field with Utf8View support enabled for \xe2\x80\xa6DbReturns a new <code>AvroField</code> with Utf8View support enabledBbEnable or disable Utf8View supportCdConverts a string codec to use Utf8View if requestedDbA convenience method to write a slice of <code>RecordBatch</code>.BmSerialize <code>batches</code> to JSON outputCgWrite a message\xe2\x80\x99s IPC data and buffers, returning \xe2\x80\xa6AaIPC write options0CmWrite the given <code>i64</code> as a zig-zag encoded varint.BlA string formatter for an <code>Array</code>0CkA Rust type representing an exception defined in Python \xe2\x80\xa6CiA struct that partially reads the Arrow JSON record batchE`Fields are left as JSON <code>Value</code> as they vary by <code>DataType</code>CaA predicate operating on <code>RecordBatch</code>0BoConcatenate multiple <code>RecordBatch</code>es00Bm<code>BinaryViewType</code> for string arrays00AiAn optional boolean valueBeBuilder for <code>BooleanArray</code>000CjError during import or export to/from the C Data Interface00AoDescription for column metadataCeHelper struct to represent pages with potentially \xe2\x80\xa6A`Data page headerCeThe encoded values for a data page, with optional \xe2\x80\xa6BdLayout specification for a data type00BfThe decimal type for a Decimal128Array00BfThe decimal type for a Decimal256Array00ClA <code>PrimitiveArray</code> of 32-bit fixed point decimals000ClA <code>PrimitiveArray</code> of 64-bit fixed point decimals000CnMinimal trait to obtain a big-endian fixed-size byte array \xe2\x80\xa6CgGeneric Avro decimal encoder over Arrow decimal arrays.BgThe decode estimate used by this engineBnThe result of decoding <code>FlightData</code>BeIncremental encoding for byte arrays.BmDescribes what type of descriptor is defined.0ChDictionary encoding metadata Maintained for forwards \xe2\x80\xa6A`Dictionary page.BfThe encoded data for a dictionary pageAaDivision overflowCgServer streaming response type for the DoAction method.0AoFormat for displaying durations0CgRepresents Avro custom logical type to map to Arrow \xe2\x80\xa60AiIndicates an empty stringCgBucket-based storage for decoder instances keyed by \xe2\x80\xa6CjA trait to create custom encoders for specific data types.0BkConfiguration options for the JSON encoder.0CnABI-compatible struct for ArrowArray from C Data Interface \xe2\x80\xa6000Ah<code>f16</code> 2/\xe2\x88\x9a\xcf\x800CfA particular stream or split associated with a flight.0BfA 16-bit floating point array builder.000BfA 32-bit floating point array builder.000BfA 64-bit floating point array builder.000AmEnds with ignoring ASCII caseBiA single bucket in <code>Interner</code>.CgReader of key-value pairs, e.g. maps, contains type \xe2\x80\xa6DkA <code>GenericListArray</code> of variable size lists, storing offsets \xe2\x80\xa6000C`Histograms for repetition and definition levels.BfStruct used to describe a thrift list.CjThe maximum possible length of a prefix. SHA256 (32) + \xe2\x80\xa6BoAPI for decoding metadata that may be encryptedCjThe first element in the request stream is missing the \xe2\x80\xa6CcUUID namespace for X.500 Distinguished Names (DNs).0BfThe bounds needed to read page indexesCmThe query is not cancellable. The client should not retry \xe2\x80\xa600C`Extension type metadata for <code>Opaque</code>.0AoStatistics for the page header.CoAn opaque error similar to <code>std::num::ParseIntError</code>DeAn array of primitive values, of type <code>ArrowPrimitiveType</code>000DfA <code>ProjectionMask</code> identifies a set of columns within a \xe2\x80\xa6CjDictionary encoding: the ids are encoded using the RLE \xe2\x80\xa6AdDictionary encoding.CiReader for repeated values, e.g. lists, contains type \xe2\x80\xa6CiContains information about how to resolve differences \xe2\x80\xa6CnContains the necessary information to resolve a writer\xe2\x80\x99s \xe2\x80\xa6CiParquet row group reader API. With this, user can get \xe2\x80\xa6AjNumber of seconds in a day000CmRepresents the shredding state of a <code>VariantArray</code>00CiA structure for capturing metadata for estimating the \xe2\x80\xa6DhAn iterator of <code>(usize, usize)</code> each representing an interval0BeA lazily evaluated iterator of ranges1CkHow to compute the logical nulls of a sparse union. All \xe2\x80\xa6CkRetrieves a UTF-8 string with the preferred term for \xe2\x80\x9c\xe2\x80\xa60AhExecute given statement.Bk<code>ByteViewType</code> for string arrays00Cd<code>Serializer</code> for <code>TapeElement</code>CnUse third party libraries, detected at compile time. These \xe2\x80\xa6ClRepresents Avro timestamp-nanos or local-timestamp-nanos \xe2\x80\xa6CjPrimitive (type_id=1): TIMESTAMP(isAdjustedToUTC=true, \xe2\x80\xa600AjConstant from chrono crate00CjImplements <code>Display</code> for a specific array value0CaTop level builder for <code>Variant</code> values00ChAdds a single child data to the ArrayData\xe2\x80\x99s child data0CkAdds a single field name to the field name directory in \xe2\x80\xa60EeAdvance <code>cur_run</code> so that <code>idx</code> is within the run ending at \xe2\x80\xa6ChReturn the allocated size of this builder, in bytes, \xe2\x80\xa6CnReturn the allocated size of this builder in bytes, useful \xe2\x80\xa6101ChAppend a single default literal into the decoder\xe2\x80\x99s \xe2\x80\xa6FeAppends <code>n</code> <code>false</code>s into the builder to indicate that these <code>n</code> \xe2\x80\xa600EfAppend an <code>Option</code> value into the builder repeatedly <code>count</code> \xe2\x80\xa6000DlAppends a value of type <code>T</code> into the builder <code>n</code> times0BaAppends a variant to the builder.CnAppend the <code>Variant</code> to the builder as the next row10CmApply the rescaler function to the value. If the rescaler \xe2\x80\xa6DdDowncast this to a <code>BinaryViewArray</code> panicking if not \xe2\x80\xa600EcDowncast this to a <code>BooleanArray</code> returning <code>None</code> if not \xe2\x80\xa600DdDowncast this to a <code>StringViewArray</code> panicking if not \xe2\x80\xa600E`Force downcast of an <code>Array</code>, such as an <code>ArrayRef</code> to \xe2\x80\xa600BeWhether the type is auto-incrementing0CkReturns true if the decoder has not decoded any batches \xe2\x80\xa6BlThe bitmap builder to store the null buffer:0CmStores whether both min_values and max_values are ordered \xe2\x80\xa6CnApply a bitwise and to two inputs and return the result as \xe2\x80\xa600CnApply a bitwise xor to two inputs and return the result as \xe2\x80\xa600CiReturns the total number of buffered bytes in the decoderCeHow many bytes are currently buffered in the decoder?C`Return the total number of bytes buffered so farCdReturns the total number of buffered bytes availableCjCreate a new <code>BufReader</code> from a buffered readerDjReturn true if a value of type <code>from_type</code> can be cast into \xe2\x80\xa600BbWhether the type is case sensitive0DjChecks if <code>sub_type</code> schema is part of current schema. This \xe2\x80\xa6CkValidates that each value in run_ends array is positive \xe2\x80\xa6CiReturn child array whose field name equals to column_nameBnGet a reference to a column\xe2\x80\x99s array by name.10BhWhich axis, row or column, is compressedDfComputes the <code>ArrowLeafColumn</code> for a potentially nested \xe2\x80\xa6EbConcatenates <code>batches</code> together into a single <code>RecordBatch</code>.00CnReturns bitmap data for nullable columns. For non-nullable \xe2\x80\xa6AlReturns the built level dataDjConverts Parquet DOUBLE type with converted type into <code>f64</code> \xe2\x80\xa6CmDEPRECATED: When the schema is the result of a conversion \xe2\x80\xa60CfReturns <code>ConvertedType</code> value for the type.CcReturns <code>ConvertedType</code> for this column.BmReturns the number of set bits in this buffer0CcCounts the number of set bits in the provided rangeCgCrypto context carrying objects required for decryptionCeExtract the minimum values from Data Page statistics.CbIf a result set generating query was provided, \xe2\x80\xa60BmRetrieve the ResultSet schema from the query.CkMacro to decode a decimal payload for a given width and \xe2\x80\xa6CnA list of indices in the reader\xe2\x80\x99s schema for fields that \xe2\x80\xa6CgReturns optional value of number of distinct values \xe2\x80\xa6Bbcount of distinct values occurringCfGet a FlightDataStream containing the list of schemas.CeDowncasts a <code>dyn Array</code> to a concrete type00AmBoolean values are encoded asCmSet of all encodings used for pages in this column chunk. \xe2\x80\xa6CjAll encodings used for this column, returned as a bitmask.CkMacro to reduce repetition in making type assertions on \xe2\x80\xa6DbEvaluate this predicate against the elements of <code>array</code>0CmExecute a bulk ingest on the server and return the number \xe2\x80\xa6ChExecute a update query on the server, and return the \xe2\x80\xa6CkExecutes the prepared statement update query on the server.CiVerifies the expected size of type T, for a type that \xe2\x80\xa6DgReturns <code>true</code> if this writer is configured to keep keys \xe2\x80\xa6CeWhether to include nulls in the output or elide them.CiGet whether to include nulls in the output or elide them.1CnInitializes the offsets using the tracked lengths. Returns \xe2\x80\xa6DgReturns an instance of the given <code>ExtensionType</code> of this \xe2\x80\xa60BeReturns a reference to field builders0CkReturns the field metadata for this <code>Attributes</code>BdReturns file decryptor as reference.AgOptional file decryptorCkGet the file encryptor used by this instance to encrypt \xe2\x80\xa6Cf<code>filter</code> implementation for boolean buffersBcFinishes in progress buffer, if anyCmFormats the decimal value with the provided precision and \xe2\x80\xa600CjFormatting options when casting from temporal types to \xe2\x80\xa600CiCreates a reference to a UUID from a reference to the \xe2\x80\xa60CjConstructs a 16-bit floating point value from a 32-bit \xe2\x80\xa60CjConstructs a 16-bit floating point value from a 64-bit \xe2\x80\xa60CjCreates a UUID from four field values in little-endian \xe2\x80\xa60EdCreates a iterator of <code>Row</code>s from a <code>FileReader</code> using the \xe2\x80\xa6CoCreates iterator of <code>Row</code>s for a specific row group.BkInitializes a Buffer from a slice of items.0CnReturns geospatial statistics that are set for this column \xe2\x80\xa6BeCalculate the final geometry type setCeUnique geometry type codes encountered by the bounderCnReturns <code>BasicTypeInfo</code> information about the type.BjExtracts the basic type from a header byteBkReturns the byte width of this native type.00ClRequest a list of database schemas as tabular FlightInfo \xe2\x80\xa6CcReturns a reference to a <code>ColumnDescPtr</code>CcGet the \xe2\x80\x9cmagic\xe2\x80\x9d bytes identifying the file typeCmGet the magic bytes at the start and end of the file that \xe2\x80\xa6CjC function to get the error from last operation on the \xe2\x80\xa600ChHelper method to get schema descriptor for projected \xe2\x80\xa6BoReturns sort order for a physical/logical type.CmSpecial macro to combine the statistics iterators for min \xe2\x80\xa6CbReturns true if this encoder has a dictionary pageEbReturns <code>true</code> if type has repetition field set, <code>false</code> \xe2\x80\xa6CnSpecifies if the Arrow schema should be returned for found \xe2\x80\xa60BjShould the \xe2\x80\x9cschema\xe2\x80\x9d column be includedCjUpdate the page index after a data page has been processedCmIncrement the final character in a UTF-8 string in such a \xe2\x80\xa6CfindicesBuffers stores values of nodes. Each tensor \xe2\x80\xa6CmNon-negative byte offsets to advance one value cell along \xe2\x80\xa6AfThe prefix of the type0AfThe suffix of the type0CcExtracts the max statistics from an iterator of \xe2\x80\xa6C`Compute a new interval that is the union of bothAfLength of the metadataDhReturn a reference to the metadata field of the <code>StructArray</code>0CjPush a key-value metadata into a FlatBufferBuilder and \xe2\x80\xa6ChHelper to compute min/max of <code>ArrayAccessor</code>.CcExtracts the min statistics from an iterator of \xe2\x80\xa6DfCreate a new <code>Field</code> with <code>DataType::Dictionary</code>0CmCreates a new higher level client with the provided lower \xe2\x80\xa60DbCreate a <code>DataType::LargeList</code> with elements of the \xe2\x80\xa6DeCreate a new <code>Field</code> with <code>DataType::LargeList</code>01EaCreates a new <code>Field</code> suitable for <code>DataType::List</code> and \xe2\x80\xa60EfCreates a new array of <code>data_type</code> of length <code>length</code> filled \xe2\x80\xa600DjCreate a new <code>ReaderBuilder</code> that will parse JSON values of \xe2\x80\xa6AoThe next filter to be evaluatedBlCreates new row group from this file writer.BkFetches the next row group from the stream.BlSetup this reader to read the next row groupBmReturns the null count, checking for validity00CkReturns number of null values for the column, if known. \xe2\x80\xa6AcReturns null count.BfThe number precision radix of the type0BjReturns number of row groups in this file.CaGet the total number of row groups for this file.BaRead an Arrow file in JSON formatCeHelper for reporting integer overflow errors in a \xe2\x80\xa6DgVector of <code>PageLocation</code> objects, one per page in the chunk.0AhRemaining page locationsCmPageLocations, ordered by increasing PageLocation.offset. \xe2\x80\xa6BeLookups up the parquet column by nameCkBinary that concatenates the column data of one or more \xe2\x80\xa6CdThis crate provides a procedural macro to derive \xe2\x80\xa6ChBinary that prints the physical layout of a parquet fileCkThis is a collection of macros used to parse Thrift IDL \xe2\x80\xa6DgReturns the parquet <code>SchemaDescriptor</code> for this parquet file0CmBinary file to print the schema and metadata of a Parquet \xe2\x80\xa6CiStructs used for encoding and decoding Parquet Thrift \xe2\x80\xa6DiParses the next Duration (called after <code>Duration</code> has been \xe2\x80\xa6DiParses the next Interval (called after <code>Interval</code> has been \xe2\x80\xa6BhPath to the column in the Parquet schemaA`Path in schema *AgColumn path in schema *Bkreturns the next char, without consuming itCmGets metadata about the next page, returns an error if no \xe2\x80\xa6BlThe \xe2\x80\x9cleaf\xe2\x80\x9d primitive type of this columnDdAppend a block to <code>self.completed</code>, checking for overflowClExtends the buffer with a new item, without checking for \xe2\x80\xa60CfPlace the <code>FlightData</code> in the queue to sendAkRead gzipped JSON test fileCiTry to read one batch of data returning the number of \xe2\x80\xa6DfReads the next row group with the provided <code>selection</code>, \xe2\x80\xa6CbThis is an option so it can be moved into a futureCjTakes the parsed field of the struct and emits a valid \xe2\x80\xa6BhA decoder for <code>StringRecords</code>BeReturns the bitmask of remaining bits0DfVerifies that a buffer of bytes contains a <code>Footer</code> and \xe2\x80\xa6DfVerifies that a buffer of bytes contains a <code>Schema</code> and \xe2\x80\xa6DfVerifies that a buffer of bytes contains a <code>Tensor</code> and \xe2\x80\xa6CkExtract the minimum values from row group statistics in \xe2\x80\xa6")