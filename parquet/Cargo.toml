# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[package]
name = "parquet"
version = "32.0.0"
license = "Apache-2.0"
description = "Apache Parquet implementation in Rust"
homepage = "https://github.com/apache/arrow-rs"
repository = "https://github.com/apache/arrow-rs"
authors = ["Apache Arrow <dev@arrow.apache.org>"]
keywords = ["arrow", "parquet", "hadoop"]
readme = "README.md"
edition = "2021"
rust-version = "1.62"

[target.'cfg(target_arch = "wasm32")'.dependencies]
ahash = { version = "0.8", default-features = false, features = ["compile-time-rng"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
ahash = { version = "0.8", default-features = false, features = ["runtime-rng"] }

[dependencies]
arrow = {version = "32.0.0", path="../arrow", features = ["csv"], default-features=false}
# parquet-column-export needs
arrow-array = { version = "32.0.0", path = "../arrow-array", default-features = false, optional = true }
arrow-buffer = { version = "32.0.0", path = "../arrow-buffer", default-features = false, optional = true }
arrow-cast = { version = "32.0.0", path = "../arrow-cast", default-features = false, optional = true }
arrow-csv = { version = "32.0.0", path = "../arrow-csv", default-features = false, optional = true }
arrow-data = { version = "32.0.0", path = "../arrow-data", default-features = false, optional = true }
arrow-schema = { version = "32.0.0", path = "../arrow-schema", default-features = false, optional = true }
arrow-select = { version = "32.0.0", path = "../arrow-select", default-features = false, optional = true }
arrow-ipc = { version = "32.0.0", path = "../arrow-ipc", default-features = false, optional = true }
object_store = { version = "0.5", path = "../object_store", default-features = false, optional = true }

bytes = { version = "1.1", default-features = false, features = ["std"] }
thrift = { version = "0.17", default-features = false }
snap = { version = "1.0", default-features = false, optional = true }
brotli = { version = "3.3", default-features = false, features = ["std"], optional = true }
flate2 = { version = "1.0", default-features = false, features = ["rust_backend"], optional = true }
lz4 = { version = "1.23", default-features = false, optional = true }
zstd = { version = "0.12.0", optional = true, default-features = false }
chrono = { version = "0.4.23", default-features = false, features = ["alloc"] }
num = { version = "0.4", default-features = false }
num-bigint = { version = "0.4", default-features = false }
base64 = { version = "0.21", default-features = false, features = ["std", ], optional = true }
clap = { version = "4.1", default-features = false, features = ["std", "derive", "env", "help", "error-context", "usage"], optional = true }
serde = { version = "1.0", default-features = false, features = ["derive"], optional = true }
serde_json = { version = "1.0", default-features = false, features = ["std"], optional = true }
seq-macro = { version = "0.3", default-features = false }
futures = { version = "0.3", default-features = false, features = ["std"], optional = true }
tokio = { version = "1.0", optional = true, default-features = false, features = ["macros", "rt", "io-util"] }
hashbrown = { version = "0.13", default-features = false }
twox-hash = { version = "1.6", default-features = false }
paste = { version = "1.0" }

# compression extension
byteorder = { version = "1" }
q_compress = { version = "0.11.4", default_features = false, optional = true }
criterion = { version = "0.4" }
log = { version = "0.4.17" }
env_logger = { version = "0.10.0" }

[dev-dependencies]
base64 = { version = "0.21", default-features = false, features = ["std"] }
criterion = { version = "0.4", default-features = false }
tempfile = { version = "3.0", default-features = false }
serde_json = { version = "1.0", features = ["std"], default-features = false }
arrow = { path = "../arrow", version = "32.0.0", default-features = false, features = ["ipc", "test_utils", "prettyprint", "json"] }
tokio = { version = "1.0", default-features = false, features = ["macros", "rt", "io-util", "fs"] }
rand = { version = "0.8", default-features = false, features = ["std", "std_rng"] }

# compress packages: parquet needs the following packages
brotli = { version = "3.3", default-features = false, features = ["std"] }
snap = { version = "1.0", default-features = false }
flate2 = { version = "1.0", default-features = false, features = ["rust_backend"] }
lz4 = { version = "1.23", default-features = false }
zstd = { version = "0.12", default-features = false }

# compression packages: parquet does not need the following packages (benches/compression.rs needs them)
deflate = "0.8.6"
lz4-compression = "0.7.0"
lz4_flex = "0.3.6"
lzzzz = "0.7.2"
lz4-compress = "0.1.1"
lz-fear = "0.1.1"
lzma-rs = "0.1.3"
rar = "0.2.0"
yazi = "0.1.3"
zip = "0.5.8"
zopfli = "0.4.0"
#zstd = { version = "0.12.3+zstd.1.5.2"}
num-format = "0.4.0"

# compression extension
byteorder = { version = "1" }
q_compress = { version = "0.11.4", default_features = false }

log = { version = "0.4.17" }
env_logger = { version = "0.10.0" }

[package.metadata.docs.rs]
all-features = true

[features]
default = ["arrow", "snap", "brotli", "flate2", "lz4", "zstd", "base64", "q_compress"]
# Enable arrow reader/writer APIs
arrow = ["base64", "arrow-array", "arrow-buffer", "arrow-cast", "arrow-data", "arrow-schema", "arrow-select", "arrow-ipc"]
# Enable CLI tools
cli = ["json", "base64", "clap", "arrow-csv", "serde"]
# Enable JSON APIs
json = ["serde_json", "base64"]
# Enable internal testing APIs
test_common = ["arrow/test_utils"]
# Experimental, unstable functionality primarily used for testing
experimental = []
# Enable async APIs
async = ["futures", "tokio"]
# Enable object_store integration
object_store = ["dep:object_store", "async"]

[[example]]
name = "read_parquet"
required-features = ["arrow"]
path = "./examples/read_parquet.rs"

[[example]]
name = "async_read_parquet"
required-features = ["arrow", "async"]
path = "./examples/async_read_parquet.rs"

[[example]]
name = "compression-enum"
required-features = ["arrow", "experimental"]
path = "./examples/compression-enum.rs"

[[test]]
name = "arrow_writer_layout"
required-features = ["arrow"]

# [[test]]
# name = "compression_f64"
# required-features = ["arrow", "experimental"]

[[bin]]
name = "parquet-read"
required-features = ["cli"]

[[bin]]
name = "parquet-rewrite"
required-features = ["arrow", "cli"]

[[bin]]
name = "parquet-schema"
required-features = ["cli"]

[[bin]]
name = "parquet-rowcount"
required-features = ["cli"]

[[bin]]
name = "parquet-fromcsv"
required-features = ["arrow", "cli"]

[[bin]]
name = "parquet-show-bloom-filter"
required-features = ["cli"]

[[bin]]
name = "parquet-layout"
required-features = ["cli"]

[[bin]]
name = "parquet-index"
required-features = ["cli"]

[[bin]]
name = "parquet-column-qcompression"
required-features = ["arrow", "experimental", "cli"]

[[bin]]
name = "parquet-column-export"
required-features = ["cli"]

[[bench]]
name = "arrow_writer"
required-features = ["arrow"]
harness = false

[[bench]]
name = "arrow_reader"
required-features = ["arrow", "test_common", "experimental"]
harness = false

[[bench]]
name = "compression"
required-features = ["arrow", "test_common", "experimental"]
harness = false

[lib]
bench = false
