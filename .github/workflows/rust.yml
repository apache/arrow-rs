# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# tests for workspace wide
name: Rust

# trigger for all PRs and changes to master
on:
  push:
    branches:
      - master
  pull_request:

jobs:

  # Check workspace wide compile and test with default features for
  # mac
  macos:
    name: Test on Mac
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install protoc with brew
        run: |
          brew install protobuf
      - name: Setup Rust toolchain
        run: |
          rustup toolchain install stable --no-self-update
          rustup default stable
      - name: Run tests
        shell: bash
        run: |
          # do not produce debug symbols to keep memory usage down
          export RUSTFLAGS="-C debuginfo=0"
          cargo test

  # Commented out while fixed in https://github.com/apache/arrow-rs/issues/2279
  #
  # # Check workspace wide compile and test with default features for
  # # windows
  # windows:
  #   name: Test on Windows
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true
  #     - name: Install protoc with NuGet
  #       run: |
  #         nuget.exe install Google.Protobuf -Version 3.21.4 -OutputDirectory d:\\proto
  #         nuget.exe install Grpc.Tools -Version 2.47.0 -OutputDirectory d:\\proto
  #     - name: Setup Rust toolchain
  #       run: |
  #         rustup toolchain install stable --no-self-update
  #         rustup default stable
  #     - name: Run tests
  #       shell: bash
  #       run: |
  #         # do not produce debug symbols to keep memory usage down
  #         export RUSTFLAGS="-C debuginfo=0"
  #         # This is where protoc is installed
  #         export PATH=$PATH:/d/proto/Grpc.Tools.2.47.0/tools/windows_x86
  #         cargo test


  # Run cargo fmt for all crates
  lint:
    name: Lint (cargo fmt)
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v2
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Run
        run: cargo fmt --all -- --check

  # Commented out while fixed in https://github.com/apache/arrow-rs/issues/2279
  #
  # coverage:
  #   name: Coverage
  #   runs-on: ubuntu-latest
  #   # Note runs outside of a container
  #   # otherwise we get this error:
  #   # Failed to run tests: ASLR disable failed: EPERM: Operation not permitted
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: true
  #     - name: Setup Rust toolchain
  #       run: |
  #         rustup toolchain install stable
  #         rustup default stable
  #     - name: Install protobuf compiler
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y protobuf-compiler
  #     - name: Cache Cargo
  #       uses: actions/cache@v3
  #       with:
  #         path: /home/runner/.cargo
  #         key: cargo-coverage-cache3-
  #     - name: Run coverage
  #       run: |
  #         rustup toolchain install stable
  #         rustup default stable
  #         cargo install --version 0.18.2 cargo-tarpaulin
  #         cargo tarpaulin --all --out Xml
  #     - name: Report coverage
  #       continue-on-error: true
  #       run: bash <(curl -s https://codecov.io/bash)
