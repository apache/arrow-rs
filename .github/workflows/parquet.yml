# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

---
# tests for parquet crate
name: "parquet"

on:
  pull_request:

jobs:
  # test the crate
  linux-test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
      env:
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: stable
      - name: Test
        run: |
          cargo test -p parquet
      - name: Test --all-features
        run: |
          cargo test -p parquet --all-features


  # test compilaton
  linux-features:
    name: Check Compilation
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
      env:
        # Disable full debug symbol generation to speed up CI build and keep memory down
        # "1" means line tables only, which is useful for panic tracebacks.
        RUSTFLAGS: "-C debuginfo=1"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: stable
      - name: Check compilation
        run: |
          cargo check -p parquet
      - name: Check compilation --no-default-features
        run: |
          cargo check -p parquet --no-default-features
      - name: Check compilation --no-default-features --features arrow
        run: |
          cargo check -p parquet --no-default-features --features arrow
      - name: Check compilation --no-default-features --all-features
        run: |
          cargo check -p parquet --all-features
      - name: Check compilation --all-targets
        run: |
          cargo check -p parquet --all-targets
      - name: Check compilation --no-default-features --all-targets
        run: |
          cargo check -p parquet --no-default-features --all-targets
      - name: Check compilation --no-default-features --features-arrow --all-targets
        run: |
          cargo check -p parquet --no-default-features --features arrow --all-targets

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-builder
        with:
          rust-version: stable
      - name: Setup Clippy
        run: |
          rustup component add clippy
      - name: Run clippy
        run: |
          # Only run clippy for the library at this time,
          # as there are clippy errors for other targets
          cargo clippy -p parquet --all-features --lib -- -D warnings
          # https://github.com/apache/arrow-rs/issues/1254
          #cargo clippy -p parquet --all-targets --all-features -- -D warnings
